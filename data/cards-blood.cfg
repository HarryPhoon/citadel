{
	"Vampire": {
		name: "Vampire",
		type: "creature",
		cost: 2,
		loyalty_cost: 1,
		school: 2,
		creature: {
			tags: ['Vampire', "Undead"],
			abilities: ['Life Drain'],
			attack: 1,
			life: 2,
			move: 2,
			initiative: 20,
			image_num: 16,
		}
	},

	"Vampire Lord": {
		name: "Vampire Lord",
		type: "creature",
		cost: 4,
		loyalty_cost: 4,
		school: 2,
		rules: "Friendly vampires in the same lane get +1 attack.",
		creature: {
			tags: ['Vampire', "Undead"],
			attack: 2,
			life: 3,
			move: 2,
			initiative: 20,
			image_num: 7,
			static_ability_effect: "[if(creature != target and creature.controller = target.controller and creature.loc[0] = target.loc[0] and ('Vampire' in target.tags), target.apply_static_effect('attack', 1))]",
		}
	},

	"Dark Emissary": {
		name: "Dark Emissary",
		type: "creature",
		cost: 3,
		loyalty_cost: 2,
		school: 2,
		rules: "When Dark Emissary kills a creature, it transforms into a Vampire, is fully healed, and you gain control of it.",
		creature: {
			tags: ['Vampire', "Undead"],
			attack: 2,
			life: 3,
			move: 2,
			initiative: 20,
			image_num: 43,
			on_kill: "def(game, victim) if(not victim.is_building, if(resurrect, [resurrect, set(victim.controller, me.controller), set(victim.wounds, 0)]) where resurrect = game.return_from_graveyard(victim))",
		}
	},

	"Vampire Bat": {
		name: "Vampire Bat",
		type: "creature",
		cost: 2,
		loyalty_cost: 1,
		school: 2,
		rules: "",

		creature: {
			tags: ['Vampire', "Undead"],
			abilities: [
				"Flying",
				{
					name: "Transform",
					cost: 1,
					school: 2,
					rules: "Transform into a Vampire",
					on_play: "def(game, creature, info) creature.transform(game, get_document('data/cards.cfg')['Vampire'].creature)"
				}
			],
			attack: 1,
			life: 1,
			move: 3,
			initiative: 20,
			image_num: 27,

			//the bat has a shadow.
			overlays: [{
				image_num: 0,
				alpha: 0.5,
			}],
		}
	},

	"Blood Altar": {
		name: "Blood Altar",
		type: "creature",
		cost: 2,
		loyalty_cost: 2,
		school: 2,
		rules: "When an opponent's creature dies, +1 mana.",
		creature: {
			tags: ['Tower'],
			life: 2,
			image_num: 1,
			is_building: "true",
			on_another_creature_died: "def(game, victim) if((not victim.is_building) and victim.controller != me.controller, add(game.players[controller].resources, 1))"
		}
	},

	"Zombie": {
		name: "Zombie",
		type: "creature",
		cost: 1,
		loyalty_cost: 1,
		school: 2,
		rules: "Creatures killed by zombies become zombies under the zombie owners control.",
		creature: {
			tags: ['Zombie', "Undead"],
			attack: 1,
			life: 1,
			move: 1,
			initiative: 10,
			image_num: 4,
			on_kill: "def(game, victim) if(not victim.is_building, if(resurrect, [resurrect, set(victim.controller, me.controller), set(victim.wounds, 0)]) where resurrect = game.return_from_graveyard(victim))",
		}
	},
	
	"Lich": {
		name: "Lich",
		type: "creature",
		cost: 6,
		loyalty_cost: 5,
		school: 2,
		rules: "Only takes half damage from non-blood attacks.",
		creature: {
			tags: ["Lich", "Undead"],
			abilities: ["Life Drain"],
			attack: 3,
			life: 5,
			move: 2,
			initiative: 25,
			image_num: 28,
			resistance_against: "def(game, attacker, damage) if(me.school = attacker.school, 0, damage / 2)",
		}
	},
	
	"Ghost": {
		name: "Ghost",
		type: "creature",
		cost: 3,
		loyalty_cost: 2,
		school: 2,
		rules: "Returns to owners hand upon death.",
		creature: {
			tags: ["Ghost", "Undead"],
			attack: 2,
			life: 2,
			move: 2,
			abilities: ["Flying"],
			initiative: 20,
			image_num: 34,
			on_die: "def(game) [
				remove_from_map(game.graveyard, summon_id), 
				add(game.players[controller].hand, [construct('card', get_document('data/cards.cfg')['Ghost'])])
			]",
		},
	},
	
	"Skeleton": {
		name: "Skeleton",
		type: "creature",
		cost: 2,
		loyalty_cost: 2,
		school: 2,
		creature: {
			tags: ["Skeleton", "Undead"],
			attack: 2,
			life: 2,
			move: 2,
			initiative: 20,
			image_num: 13,
			// has sword
			overlays: [{image_num: 7}],
		},
	},

	"Soothsayer": {
		name: "Soothsayer",
		type: "creature",
		cost: 2,
		loyalty_cost: 1,
		school: 2,
		rules: "When Soothsayer dies, draw a card",
		creature: {
			tags: ['Human'],
			attack: 2,
			life: 1,
			move: 2,
			image_num: 21,
			on_die: "def(game) game.players[controller].draw_cards(game, 1)",
		}
	},

	"Dark Knight": {
		name: "Dark Knight",
		type: "creature",
		cost: 3,
		loyalty_cost: 3,
		school: 2,
		creature: {
			tags: ['Undead'],
			attack: 4,
			life: 3,
			move: 2,
			image_num: 19,
		}
	},

	"Thirst for Blood": {
		name: "Thirst for Blood",
		type: "spell",
		school: 2,
		cost: 1,
		loyalty_cost: 2,
		is_response: false,
		rules: "Target creature gains Life Drain",
		possible_targets: "all_creatures_as_possible_targets",
		on_play: "def(game, info) add(game.creature_at_loc(info.targets[0]).abilities, ['Life Drain'])"
	},

	"Knife in the Dark": {
		name: "Knife in the Dark",
		type: "spell",
		school: 2,
		cost: 4,
		loyalty_cost: 4,
		is_response: false,
		rules: "Destroy target creature",
		possible_targets: "all_creatures_as_possible_targets",
		on_play: "def(game, info) set(game.creature_at_loc(info.targets[0]).destroyed, true)"
	},

	"Sudden Illness": {
		name: "Sudden Illness",
		type: "spell",
		school: 2,
		cost: 2,
		loyalty_cost: 2,
		is_response: true,
		rules: "Target creature gets -2 life this turn",
		possible_targets: "all_creatures_as_possible_targets",
		on_play: "def(game, info) game.creature_at_loc(info.targets[0]).apply_effect_until_end_of_turn('life', -2)"
	},

	"Dark Coven": {
		name: "Dark Coven",
		type: "creature",
		cost: 3,
		loyalty_cost: 3,
		school: 2,
		rules: "Creatures you control in this lane have Life Drain",
		creature: {
			tags: ["Tower"],
			life: 3,
			is_building: true,
			image_num: 1,
			static_ability_effect: "if(creature.controller = target.controller and creature.loc[0] = target.loc[0], target.add_ability_static_duration('Life Drain'))",
		}
	},

	"Tower of Death": {
		name: "Tower of Death",
		type: "creature",
		cost: 3,
		loyalty_cost: 3,
		school: 2,
		rules: "Enemy creatures in this lane have -2 life",
		creature: {
			tags: ["Tower"],
			life: 3,
			is_building: true,
			image_num: 1,
			static_ability_effect: "if(creature.controller != target.controller and creature.loc[0] = target.loc[0], target.apply_static_effect('life', -2))",
		}
	},

	"Festering Wound": {
		name: "Festering Wound",
		type: "spell",
		cost: 2,
		loyalty_cost: 1,
		school: 2,
		rules: "Target creature is Poisoned",
		possible_targets: "all_creatures_as_possible_targets",
		on_play: "def(game, info) add(game.creature_at_loc(info.targets[0]).status_effects, ['Poisoned'])",
	},

	"Fleshworks": {
		name: "Fleshworks",
		type: "spell",
		cost: 4,
		loyalty_cost: 3,
		school: 2,
		rules: "Any creatures making a melee attack against this building come under control of the buildings controller",
		creature: {
			tags: ["Tower"],
			life: 3,
			is_building: true,
			image_num: 1,
			on_attacked: "def(game, attacker, damage) if(attacker.controller != me.controller and attacker.range = 1, set(attacker.controller, me.controller))",
		},
	},
}
