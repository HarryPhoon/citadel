{
	"Vampire": {
		name: "Vampire",
		type: "creature",
		cost: 2,
		school: 2,
		creature: {
			tags: ['Vampire'],
			abilities: ['Life Drain'],
			attack: 1,
			life: 2,
			move: 2,
			initiative: 20,
			image_num: 16,
		}
	},

	"Vampire Lord": {
		name: "Vampire Lord",
		type: "creature",
		cost: 4,
		school: 2,
		rules: "Friendly vampires in the same lane get +1 attack.",
		creature: {
			tags: ['Vampire'],
			attack: 2,
			life: 3,
			move: 2,
			initiative: 20,
			image_num: 7,
			static_ability_effect: "[if(creature != target and creature.controller = target.controller and creature.loc[0] = target.loc[0] and ('Vampire' in target.tags), target.apply_static_effect('attack', 1))]",
		}
	},

	"Dark Emissary": {
		name: "Dark Emissary",
		type: "creature",
		cost: 3,
		school: 2,
		rules: "When Dark Emissary kills a creature, it transforms into a Vampire, is fully healed, and you gain control of it.",
		creature: {
			tags: ['Vampire'],
			attack: 2,
			life: 3,
			move: 2,
			initiative: 20,
			image_num: 43,
			on_kill: "def(game, victim) if(not victim.is_building, if(resurrect, [resurrect, set(victim.controller, me.controller), set(victim.wounds, 0)]) where resurrect = game.return_from_graveyard(victim))",
		}
	},

	"Vampire Bat": {
		name: "Vampire Bat",
		type: "creature",
		cost: 2,
		school: 2,
		rules: "",

		creature: {
			tags: ['Vampire'],
			abilities: [
				"Flying",
				{
					name: "Transform",
					cost: 1,
					school: 2,
					rules: "Transform into a Vampire",
					on_play: "def(game, creature, info) creature.transform(game, get_document('data/cards.cfg')['Vampire'].creature)"
				}
			],
			attack: 1,
			life: 1,
			move: 3,
			initiative: 20,
			image_num: 27,

			//the bat has a shadow.
			overlays: [{
				image_num: 0,
				alpha: 0.5,
			}],
		}
	},

	"Blood Altar": {
		name: "Blood Altar",
		type: "creature",
		cost: 2,
		school: 2,
		creature: {
			tags: ['Tower'],
			life: 2,
			image_num: 1,
			is_building: "true",
		}
	},

	"Zombie": {
		name: "Zombie",
		type: "creature",
		cost: 1,
		school: 2,
		rules: "Creatures killed by zombies become zombies under the zombie owners control.",
		creature: {
			tags: ['Zombie'],
			attack: 1,
			life: 1,
			move: 1,
			initiative: 10,
			image_num: 4,
			on_kill: "def(game, victim) if(not victim.is_building, if(resurrect, [resurrect, set(victim.controller, me.controller), set(victim.wounds, 0)]) where resurrect = game.return_from_graveyard(victim))",
		}
	},

	"Mausoleum": {
		name: "Mausoleum",
		type: "creature",
		cost: 3,
		school: 2,
		rules: "+1 regeneration per turn for friendly blood creatures that pass through.",
		creature: {
			tags: ["Mausoleum"],
			life: 3,
			is_building: true,
			image_num: 1,
			on_moved_over: "def(game, creature)
				if(creature.school = 2, add(creature.triggered_abilities, [{
					name: 'Regeneration',
					rules: 'Gain 1 life at the start of turn',
					notes: 'Gained from Mausoleum',
					on_begin_turn: 'def(creature, game) add(creature.wounds, -1)',
				}]))
			",
		}
	},
	
	"Lich": {
		name: "Lich",
		type: "creature",
		cost: 6,
		school: 2,
		rules: "Only takes half damage from non-blood attacks.",
		creature: {
			tags: ["Lich"],
			abilities: ["Life Drain"],
			attack: 3,
			life: 5,
			move: 2,
			initiative: 25,
			image_num: 28,
			resistance_against: "def(game, attacker, damage) if(me.school = attacker.school, 0, damage / 2)",
		}
	},
}
