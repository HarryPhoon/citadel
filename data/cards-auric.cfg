//   All card designs by Phanterm.
//
//   Auric = Materia + Minerva. Ramp focus. Loves extra mana, and playing
// greedy cards that require a lot of it. Loves combos/responses.
//
//     CARD                  | CODE |  ART | FLAVOR TEXT
//     ----------------------+------+------+------------
//     Spell Seal            | TODO | TODO |        TODO
//     Field Researcher      | init | TODO |        TODO
//     Gild                  | TODO | TODO |        TODO
//     Laboratory            | init | TODO |        TODO
//     Coalesce              | init | TODO |        TODO
//     Golden Goose          | TODO | TODO |        TODO
//     Humusify              | init | TODO |        TODO
//     Mass Calibration      | TODO | TODO |        TODO
//     Observatory           | TODO | TODO |        TODO
//     Cunning Spellsword    | init | TODO |        TODO
//     Melt Down             | TODO | TODO |        TODO
//     Polymathus            | TODO | TODO |        TODO
//     Tower of Arrogance    | TODO | TODO |        TODO
//     Philosopher's Stone   | TODO | TODO |        TODO
//     Une, Summation Eldest | TODO | TODO |        TODO

{

"Field Researcher": {
	name: "Field Researcher",
	set: "auric",
	type: "creature",
	rarity: 0,
	//   Total cost:
	//   3 + 1 + 1 = 5
	cost: 3,
	loyalty_cost: 1,
	school: "@eval [MATERIA, MINERVA]",
	portrait: "tester.png",  //   TODO placeholder art.
// 	artist: "artist_TODO",  //   TODO placeholder art.
	hue_shift: 0.930554,
// 	flavor_text: "flavor_text_TODO",  //   TODO
	creature: {
// 		game_sounds: "???",  //   TODO
// 		sound_swish: "???",  //   TODO
// 		sound_impact: "???",  //   TODO
		tags: ['Scholar'],
		attack: 2,
		life: 3,
		triggered_abilities: [{
			name: "Field research",
			rules: "When targeted by an <i>Equipment Spell</i>, grants +2 mana to its controller.",
			on_card_played: "def
				(
					class creature creature,
					class game_state game_state,
					class player player,
					class message.play_card info
				) -> commands
				if(true
				and info.card
				and 'Equipment' in info.card.tags
				and creature.loc in info.targets,
					[
						add(my_player.base_income, 2),
					]
				)
				where my_player = class player <-
					game_state.players[creature.controller]
			",
			//   `hidden_on_creature` because it is an 'on summon'
			// creature card ability.
			hidden_on_creature: true,
			//   Ignore `hidden_on_creature` throughout all the
			// turn during which is summoned.
			ignore_hidden_on_creature_on_turn_when_summoned: true,
		}, ],
	},
},

"Laboratory": {
	name: "Laboratory",
	set: "auric",
	type: "creature",
	cost: 3,
	rarity: 0,
	portrait: "elixer.png",  //   TODO placeholder art.
//	artist: "artist_TODO",  //   TODO placeholder art.
	portrait_focus: [359,560],
	portrait_focus_height: 160,
	school: "@eval [MATERIA, MINERVA]",
// 	flavor_text: "flavor_text_TODO",  //   TODO
	creature: {
		tags: ["Laboratory"],
		is_land: true,
		passive_abilities: [{
			name: "Laboratory",
// 			icon: 'plus-mana.png',  //   TODO on hold while the mana icon depicts several crystals... because the land that grants mana in core is the `Mine`?
			rules: '+1 mana pool on your turn',
			static_effect: "def
				(class game_state game, class creature creature) -> commands
				if(creature.controller >= 0,
					if(creature.controller = game.current_player,
						game.players[creature.controller].apply_static_effect(
							def
								(class player p, map info) -> commands
								add(p.base_income, 1),
							def
								(class player p, map info) -> commands
								add(p.base_income, -1),
							{}
						)
					)
				)
			",
		}],
	},
},

"Coalesce": {
	name: "Coalesce",
	set: "auric",
	type: "spell",
	is_response: true,
	cost: 3,
	rarity: 0,
	loyalty_cost: 0,
	school: "@eval [MATERIA, MINERVA]",
	portrait: "spirit-of-intellect.png",  //   TODO placeholder art.
// 	artist: "artist_TODO",  //   TODO placeholder art.
// 	flavor_text: "flavor_text_TODO",  //   TODO
	rules: "Get mana equal to the number of cards played this turn.",
	on_play: "def
		(
			class game_state game_state,
			class message.play_card info
		) -> commands
		[
//			debug(['game_state', game_state, 'game_state']),
//			debug(['info', info, 'info']),
//			debug(['cards_played_this_turn_len', cards_played_this_turn_len]),
//			debug(['cards_played_this_turn_by_me_len', cards_played_this_turn_by_me_len]),
			add(my_player.base_income, mana_to_add),
		]
		where mana_to_add = int ::
			//   Substracts this last `Coalesce` card.
			if(consider_rival_card_plays,
				cards_played_this_turn_len,
				cards_played_this_turn_by_me_len) - 1
		where consider_rival_card_plays = false
		where cards_played_this_turn_by_me_len = int <-
			size(cards_played_this_turn_by_me)
		where cards_played_this_turn_len = int <-
			size(cards_played_this_turn)
		where cards_played_this_turn_by_me = [map] <-
			filter(cards_played_this_turn,
				value.player = my_player)
		where my_player = class player <-
			game_state.players[my_player_index]
		where my_player_index = int <-
			info.player_index
		where cards_played_this_turn = [map] <-
			game_state.cards_played_this_turn,
	",
},

"Humusify": {
	name: "Humusify",
	set: "auric",
	type: "spell",
	is_response: true,
	cost: 2,
	rarity: 0,
	loyalty_cost: 0,
	school: "@eval [MATERIA, MINERVA]",
	portrait: "hypothermia.png",  //   TODO placeholder art.
// 	artist: "lucy",  //   TODO placeholder art.
// 	flavor_text: "flavor_text_TODO",  //   TODO
	rules: "Sacrifice a creature, gain mana equal to its full cost.",
	possible_targets: "my_creatures_as_possible_targets",
	on_play: "def
		(class game_state game, class message.play_card info) -> commands
		[
//			debug(['message.play_card', info]),
//			debug(['target_creature_card', target_creature_card]),
			set(target_creature.destroyed, true),
			add(my_player.base_income,
				target_creature_card_complete_cost),
		]
		where my_player = class player <-
			game.players[target_creature.controller]
		where target_creature_card_complete_cost = int <-
			target_creature_card_base_cost +
				target_creature_card_loyal_cost
		where target_creature_card_base_cost = int <-
			if(target_creature_card
				, if(target_creature_card.cost = null
					, 0
					, target_creature_card.cost
				)
				, 0
			)
		where target_creature_card_loyal_cost = int <-
			if(target_creature_card
				, if(target_creature_card.loyalty_cost = null
					, 0
					, target_creature_card.loyalty_cost
				)
				, 0
			)
		where target_creature_card = map <-
			target_creature.base_card
		where target_creature = class creature <-
			game.creature_at_loc_or_die(info.targets[0])
	",
},

"Cunning Spellsword": {
	name: "Cunning Spellsword",
	set: "auric",
	rarity: 1,
	type: "creature",
	portrait: "mercenary.png",  //   TODO placeholder art.
//	artist: "lucy",  //   TODO placeholder art.
	hue_shift: 0.909722,
	cost: 4,
	school: "@eval [MATERIA, MINERVA]",
// 	flavor_text: "flavor_text_TODO",  //   TODO
	creature: {
		tags: ['Human'],
		attack: 4,
		life: 4,
		game_sounds: "soldier_blade",
		sound_impact: "wood",
		sound_swish: "medium",
		passive_abilities: [{
			name: "Mana boost",
// 			icon: 'plus-mana.png',  //   TODO on hold while the mana icon depicts several crystals... because the land that grants mana in core is the `Mine`?
			rules: '+1 mana pool on your turn',
			static_effect: "def
				(class game_state game, class creature creature) -> commands
				if(creature.controller >= 0,
					if(creature.controller = game.current_player,
						game.players[creature.controller].apply_static_effect(
							def
								(class player p, map info) -> commands
								add(p.base_income, 1),
							def
								(class player p, map info) -> commands
								add(p.base_income, -1),
							{}
						)
					)
				)
			",
		}, ],
	},
},

//   TODO on restored (e.g. with `Divine Restoration`) loses their channeled
// mana, so dying. Is that desirable?
//   TODO on choosing the summon lane, a _will die_ skull might correctly show
// if channeled with zero mana, but it might incorrectly show if channeled with
// more than zero mana too.
"Polymathus": {
	name: "Polymathus",
	set: "auric",
	rarity: 1,
	type: "creature",
	portrait: "staged-duel.png",  //   TODO placeholder art.
// 	artist: "lordbob",  //   TODO placeholder art.
	hue_shift: 0.784722,
	cost: 3,
	school: "@eval [MATERIA, MINERVA]",
// 	flavor_text: "flavor_text_TODO",  //   TODO
	is_channeled: true,
	creature: {
		tags: ['Human'],
		attack: 0,
		life: 0,
		game_sounds: "soldier_blade",  //   TODO
		sound_impact: "wood",  //   TODO
		sound_swish: "medium",  //   TODO
		triggered_abilities: [
			{
				name: "Mana Gather",
				rules: "Gets X attack and X life.",
				on_summoned: "def
					(
						class creature creature,
						class game_state game_state
					) -> commands
					[
						add(creature.life, creature.channel),
						add(creature.attack, creature.channel),
					]
				",
				hidden_on_creature: true,
			}, {
				name: "Mana Release",
				rules: "When dies, controller gets +X mana.",
				on_die: "def
					(
						class creature creature,
						class game_state game_state
					) -> commands
					[
						add(controller.base_income,
							creature.channel),
					]
					where controller =
						game_state.players[
							creature.controller]
				",
			},
		],
	},
},

}
