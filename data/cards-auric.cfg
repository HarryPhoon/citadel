{

"Laboratory": {
	name: "Laboratory",
	set: "auric",
	type: "creature",
	cost: 3,
	rarity: 1,
	artist: "artist_TODO",
	portrait: "elixer.png",
	portrait_focus: [359,560],
	portrait_focus_height: 160,
	school: "@eval [MATERIA, MINERVA]",
	flavor_text: "flavor_text_TODO",
	creature: {
		tags: ["Laboratory"],
		is_land: true,
		passive_abilities: [{
			name: "Laboratory",
			icon: 'plus-mana.png',
			rules: '+1 mana pool on your turn',
			static_effect: "def
				(class game_state game, class creature creature) -> commands
				if(creature.controller >= 0,
					if(creature.controller = game.current_player,
						game.players[creature.controller].apply_static_effect(
							def
								(class player p, map info) -> commands
								add(p.base_income, 1),
							def
								(class player p, map info) -> commands
								add(p.base_income, -1),
							{}
						)
					)
				)
			",
		}],
	},
},

"Humusify": {
	name: "Humusify",
	set: "auric",
	type: "spell",
	is_response: true,
	cost: 2,
	rarity: 1,
	loyalty_cost: 0,
	school: "@eval [MATERIA, MINERVA]",
	portrait: "hypothermia.png",
	artist: "lucy",
	flavor_text: "flavor_text_TODO",
	rules: "Sacrifice a creature, gain mana equal to its full cost.",
	possible_targets: "my_creatures_as_possible_targets",
	on_play: "def
		(class game_state game, class message.play_card info) -> commands
		[
//			debug(['message.play_card', info]),
//			debug(['target_creature_card', target_creature_card]),
			set(target_creature.destroyed, true),
			add(my_player.base_income,
				target_creature_card_complete_cost),
		]
		where my_player = class player <-
			game.players[target_creature.controller]
		where target_creature_card_complete_cost = int <-
			target_creature_card_base_cost +
				target_creature_card_loyal_cost
		where target_creature_card_base_cost = int <-
			if(target_creature_card
				, if(target_creature_card.cost = null
					, 0
					, target_creature_card.cost
				)
				, 0
			)
		where target_creature_card_loyal_cost = int <-
			if(target_creature_card
				, if(target_creature_card.loyalty_cost = null
					, 0
					, target_creature_card.loyalty_cost
				)
				, 0
			)
		where target_creature_card = map <-
			target_creature.base_card
		where target_creature = class creature <-
			game.creature_at_loc_or_die(info.targets[0])
	",
},

}
