{
	handlers: {
		start: "set(doc, construct('game',
		                 {
		         players: map(range(2),
				        construct('player',
				            {
								player_index: value,
							}
				          ))}))",

		message: "[debug('got message: ' + message.type),
		 handle_errors(
		 switch(message.type,
		  'submit_deck',
		  [
		  set(doc.players, doc.players[:player] + [ new_player ] + doc.players[player+1:]),
		  doc.player_init(new_player)
		  ] where new_player =
		    construct('player',
			  {
				 player_index: player,
				 deck: shuffled_deck[7:],
				 hand: shuffled_deck[0:7]
			  } where shuffled_deck =
			    shuffle(map(message.deck, construct('card', get_document('data/cards.cfg')[value])))
			)
		  
		  ,
		  'play_card',
		  if(player = doc.current_player, doc.play_card(message)),
		  'add_bot',
		  set(bots, [{
		    script: [{
				session_id: 2,
				send: {
					type: 'request_updates',
				}
			}],

			on_create: q(set(data, construct('bot', {session_id: 2}))),

			on_message: q(data.handle_message(message, me)),
		  }]),
		  'play_ability',
		  [debug('play ability'), if(player = doc.current_player, doc.play_ability(message))],
		  'end_turn',
		  if(player = doc.current_player, doc.end_turn(message)),
		  'movement',
		  if(player = doc.current_player, doc.movement(message))
		),
		 //error handling
		 [
		   debug('ERROR WHILE PROCESSING MESSAGE: ' + context.message.type + ': ' + error_msg),
		   context.doc.log_message('Server encountered error when processing ' + message.type)
		 ]
		)]",

		transform: "[set(message.nplayer, nplayer)]",
	}
}
