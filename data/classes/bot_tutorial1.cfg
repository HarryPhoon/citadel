{
	bases: ["bot"],

	properties: {

	score_play: "def(class game_state game, map play_info, class card card, [Loc] targets) ->int
		100

	",

	get_best_play: "def(class game_state game) -> class bot.CardPlay|null

	if(plays != null, result
	where result = choose(filter(values(plays), value.score > 0), value.score)
	)

	where player = game.players[game.current_player_index]
	where plays = calculate_plays(game, play_info)
	where play_info = calculate_play_info(game)",


	should_wait: "def(class game_state game, class bot.CardPlay best_play) ->bool
	  false",
	
	deck: "[string]<- default_deck",

	default_deck: "[string]<- ['Disciple']*30",

	}
}
