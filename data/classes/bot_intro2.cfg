{
	bases: ["bot"],

	properties: {

	score_summons: "def(class game game, map play_info, class card card, Loc loc) ->int
		if(lane_empty(game, loc[0]), if(lane_has_enemy_glyphs(game, loc[0]) or lane_has_neutral_glyphs(game, loc[0]), if('Marauder' in creature.abilities, 50, 150), 100), 0) +

		if(find(game.creatures, value.controller = game.current_player_index and value.loc[0] = loc[0]) = null,

		(if(enemy_creature = null, 0, outcome*200

		where outcome = lib.bot_utils.fight_outcome(game, creature, enemy_creature)
		)
		where enemy_creature = find(game.creatures, value.loc[0] = loc[0])),
		0) +

		if(card.name = 'Wolf Rider', 20, 0) +

		game.trophies[(game.current_player_index+1)%2][loc[0]] +

		100

		where creature = class creature<- card.creature_object
	",

	score_spell: "def(class game game, map play_info, class card card, [Loc] targets) ->int
	if(card.name = 'Furious Rampage',
		if(target_creature.controller != game.current_player_index or target_creature.is_engaged(game) = false, -100000, 0) +

		if(enemy_creature is class creature,
			if(target_creature.life <= enemy_creature.attack and target_creature.life+4 > enemy_creature.attack, 500, 0) +
			if(target_creature.attack < enemy_creature.life and target_creature.attack + 4 >= enemy_creature.life, 500, 0),
			-10000
		) where enemy_creature = game.creature_at_loc([targets[0][0], targets[0][1]+target_creature.direction_moving])

		where target_creature = class creature :: game.creature_at_loc_or_die(targets[0]),

		0)
	",

	choose_to_wait: "def(class game game, class card card) ->bool
		card.name not in ['Furious Rampage']
	",

	deck: "[string]<- ['Cave Troll', 'Goblin King', 'Minotaur', 'Green Adder', 'Wolf', 'Wolf Rider'] * 3 + ['Furious Rampage']*2",
	}
}
