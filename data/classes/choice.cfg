{
	properties: {
		player_index: { variable: true, default: null, type: 'int' },
		card: { variable: true, default: null, type: 'class card_base|null' },
		ability: { variable: true, default: null, type: 'class card_base|null' },
		creature: { variable: true, default: null, type: 'class creature|null' },
		options: { variable: true, default: null, type: '[class choice.card|class card_base|class choice.button|Loc]'  },
		info: { variable: true, type: 'null|class message.play_card_base' },
		text: { variable: true, default: "Make a choice", type: 'string' },
		opponent_text: { variable: true, default: "make a choice", type: 'string' },

		get_tag_from_index: "def(int n) ->null|int|string
		if(item is class choice.card, item.tag,
		   item is class choice.button, item.tag,
		   n
		)
		where item = options[n]
		",

		card_options: "[class choice.card] :: filter(options, value is class choice.card) + [construct('choice.card', {card: card, tag: index(options, card)}) | card <- options, card is class card_base]",

		on_card_chosen: "def(class game_state game, class card_base card, int tag) ->commands null",
		on_button_chosen: "def(class game_state game, null|int|string tag) ->commands null",
		on_loc_chosen: "def(class game_state game, Loc loc) ->commands null",
	},

	classes: {
		card: {
			card: { type: "class card_base", set_type: "class card_base|string", set: "if(value is string, set(me._data, lib.citadel.create_card(value)), set(me._data, value) asserting value is class card_base)" },
			tag: { type: "int", default: -1 },
		},

		button: {
			text: { type: "string" },
			tag: { type: "null|int|string" },
		},
	}
}
