{
	properties: {
		unique_id: { variable: true },

		name: { variable: true },
		cost: { variable: true, default: 0, type: 'int' },
		loyalty_cost: { variable: true, default: 0, type: 'int' },
		school: { variable: true, default: [0], type: '[int]|int', set: "if(is_int(value), set(private.school, [value]), set(private.school, value asserting is_list(value)))" },

		exhausts_creature: { variable: true, default: false },

		rules: { variable: true, default: 'RULE ABILITY TEXT NEEDED' },

		is_response: { variable: true, default: false },

		is_usable: "def(class game game, class creature creature) true",


		possible_targets: "def(class game game, class creature creature, [[int]] targets) null",

		targets_valid: "def(class game game, class creature creature, [[int]] targets, [[int]] existing=[])
		  if(possible = null, targets = [], if(possible = [], false,
		   (targets[0] in possible) and
		   targets_valid(game, creature, targets[1:], existing + [targets[0]])))
			where possible = possible_targets(game, creature, existing)
		",

		on_play: "def(class game game, class creature creature, map info) null",

		card_font: "'RobotoCondensed-Light'",

		rules_text_widgets: "def(int scale)
			[{
				type: 'label',
				color: 'black',
				size: 10*scale,
				font: card_font,
				text: rules,
			}]
		",
	}
}
