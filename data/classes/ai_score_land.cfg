{
properties: {
	base_score: "int :: 0",
	lane_with_ally: "int :: 0",
	lane_with_enemy: "int :: 0",
	empty_lane: "int :: 0",
	lane_length_modifier: "int :: 0",
	lane_ally_seal_modifier: "int :: 0",
	lane_enemy_seal_modifier: "int :: 0",

	score_enemy_creature_in_lane: "def(class game_state game, class creature creature) ->int
	0",

	score: "def(class game_state game, map play_info, class card card, Loc loc) ->int
		base_score +

		sum(map(filter(game.creatures, game.team_index(value.controller) != game.current_player_index and value.loc[0] = loc[0]), score_enemy_creature_in_lane(game, value))) +

		if(enemy != null, lane_with_enemy, 0) +
		if(friend != null, lane_with_ally, 0) +
		if(enemy = null and friend = null, empty_lane, 0) +
		game.lanes[loc[0]].length*lane_length_modifier +
		game.trophies[game.current_team_index%size(game.trophies)][loc[0]]*lane_ally_seal_modifier +
		game.trophies[game.current_team_index%size(game.trophies)][loc[0]]*lane_enemy_seal_modifier

		where enemy = lib.bot_utils.enemy_in_lane(game, loc)
		where friend = lib.bot_utils.ally_in_lane(game, loc)
	",
},
}
