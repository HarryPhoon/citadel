{
	properties: {
		session_id: { variable: true, default: 0 },

		playable_creatures: "def(game) filter(player.hand, value.type = 'creature' and player.can_afford(value.school, value.cost) and (value.is_response or game.response_phase = 0) and value.possible_targets(game, game.nplayer, [])) where player = game.players[game.nplayer]",

		handle_message: "def(message, bot) [
		  if(message.type = 'game' and message.state.players[message.state.nplayer].deck = null,
			//submit our deck to the server.
			add(bot.script, [{
				session_id: session_id,
				send: {
					type: 'submit_deck',
					deck: get_document('data/ai-deck.cfg'),
				}
			}]),

			if(message.type = 'game' and message.state.nplayer = message.state.current_player,
			     if(playable_creatures(message.state),
				  add(bot.script, [{
					session_id: session_id,
					send: {
						type: 'play_card',
						index: index(hand, chosen_card),
						targets: [choose(chosen_card.possible_targets(message.state, message.state.nplayer, []))],
					}
						where chosen_card = choose(playable_creatures(message.state))
						where hand = message.state.players[message.state.nplayer].hand,
				  }]),
				  add(bot.script, [{
					session_id: session_id,
					send: {
						type: 'end_turn'
					}
				  }])),
				  add(bot.script, [{
					session_id: session_id,
					send: {
						type: 'request_updates'
					}
				  }])
			))
		]",
	}
}
