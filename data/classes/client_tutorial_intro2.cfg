{
	bases: ['client_tutorial'],
	properties: {
		inhibit_card_click: "def(obj citadel_controller ctrl, obj card card) ->bool false",
		inhibit_card_right_click: "def(obj citadel_controller ctrl, obj card card) ->bool false",

		inhibit_end_turn: "def(obj citadel_controller ctrl) ->bool should_inhibit_end_turn",

		should_inhibit_end_turn: { type: "bool", default: true },

		_shown_sequences: { type: "[string]", default: [] },

		game_updated: "def(obj citadel_controller ctrl, class game game) ->commands
		[
		if(me._shown_intro = false, [
		  set(ctrl.suppress_animations, true),
		],
		
		game.nturn >= 2 and 'passive' not in _shown_sequences,
		[
			add(_shown_sequences, ['passive']),
		],
		
		(game.current_player_index = 1 and game.in_response_phase = false and find(game.creatures, game.is_loc_on_board([value.loc[0], value.loc[1]-1])) != null) and 'end_passive' not in _shown_sequences,
		[
			add(_shown_sequences, ['end_passive']),
		]
		)
		]",

		draw: "def(obj citadel_controller ctrl) ->commands
		[
			if(_shown_intro = false, [
		   	    if(size(filter(ctrl.level.chars, value is obj card)) >= 8, [
			  		set(me._shown_intro, true),
			  		ctrl.show_intro_sequence('begin_scenario2'),
				]),
			]),
		]",

		_shown_intro: { type: "bool", default: false },

		allow_tips: { type: "bool", default: false },

		override_tips: "bool :: true",
		generate_tips: "def(obj citadel_controller ctrl, class game game) ->[Tip|null]
		if(_shown_intro = false or not allow_tips, [],
		[
			if(troll_card != null,
			{
				key: 'troll',
				text: 'Cave Trolls cost eight mana to cast, but this cost can be reduced by gaining levels in Gaea magic. Cast some less expensive spells to gain experience so later you can cast a Cave Troll.',
				max_shows: 3,
				targets: [troll_card]
			}
			) where troll_card = find(level.chars, value is obj card and value.card_type.name = 'Cave Troll'),

			if(game.stack = [] and lvl != null and lvl.num_tokens = 1,
			{
				key: 'level_up',
				text: 'You have leveled up to level 1 of Gaea. Now a Cave Troll would cost only 6 mana to cast instead of 8. Cast two more spells to gain two experience points and get to level 2.',
				max_shows: 3,
				targets: [lvl],
				is_modal: true,
			}
			) where lvl = find(level.chars, value is obj devotion_banner and value.player_index = 0),

			if(game.stack = [] and lvl != null and lvl.num_tokens = 2,
			{
				key: 'level_up_2',
				text: 'You have leveled up to level 2 of Gaea. Now a Cave Troll would cost only 5 mana to cast. Meanwhile, your mana pool grows every turn.',
				max_shows: 3,
				targets: [lvl],
				is_modal: true,
			}
			) where lvl = find(level.chars, value is obj devotion_banner and value.player_index = 0),

			if(game.stack = [] and find(game.creatures, value.name = 'Cave Troll') = null and lvl != null and game.players[0].resources + lvl.num_tokens >= 7 and troll_card != null,
			{
				key: 'can_cast_troll',
				text: 'You are able to cast your Cave Troll now! Use it to defeat your enemies!',
				max_shows: 3,
				targets: [troll_card],
			}
			) where lvl = find(level.chars, value is obj devotion_banner and value.player_index = 0)
			  where troll_card = find(level.chars, value is obj card and value.in_hand and value.card_type.name = 'Cave Troll'),

			if(game.in_response_phase = true and game.current_player_index = 0 and cave_troll != null and knife_card != null,
			  if(cover_card != null,
			  {
				  key: 'use_cover_card',
				  text: q(Cast Cover on your Troll. This will protect it from the Knife in the Dark and prevent it from dying!),
				  max_shows: 3,
				  targets: [cover_card, cave_troll],
			  }
			  )

			  where cover_card = find(level.chars, value is obj card and value.card_type.name = 'Cover' and value.in_hand)
			) where knife_card = find(level.chars, value is obj card and value.card_type.name = 'Knife in the Dark' and value.stack_id != null)
			  where cave_troll = find(level.chars, value is obj creature and value.creature_object.name = 'Cave Troll' and 'Cover' not in value.creature_object.abilities),

		] where player = game.players[0]
		  where level = ctrl.level)",
	}
}
