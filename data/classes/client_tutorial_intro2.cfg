{
	bases: ['client_tutorial'],
	properties: {
		inhibit_card_click: "def(obj citadel_controller ctrl, obj card card) ->bool false",
		inhibit_card_right_click: "def(obj citadel_controller ctrl, obj card card) ->bool false",

		inhibit_end_turn: "def(obj citadel_controller ctrl) ->bool should_inhibit_end_turn",

		should_inhibit_end_turn: { type: "bool", default: true },

		_shown_sequences: { type: "[string]", default: [] },

		game_updated: "def(obj citadel_controller ctrl, class game game) ->commands
		[
		if(me._shown_intro = false, [
		  set(ctrl.suppress_animations, true),
		],
		
		game.nturn >= 2 and 'passive' not in _shown_sequences,
		[
			add(_shown_sequences, ['passive']),
		],
		
		(game.current_player_index = 1 and game.in_response_phase = false and find(game.creatures, game.is_loc_on_board([value.loc[0], value.loc[1]-1])) != null) and 'end_passive' not in _shown_sequences,
		[
			add(_shown_sequences, ['end_passive']),
		]
		)
		]",

		draw: "def(obj citadel_controller ctrl) ->commands
		[
			if(_shown_intro = false, [
		   	    if(size(filter(ctrl.level.chars, value is obj card)) >= 10, [
			  		set(me._shown_intro, true),
			  		ctrl.show_intro_sequence('begin_scenario2'),
				]),
			]),
		]",

		_shown_intro: { type: "bool", default: false },

		allow_tips: { type: "bool", default: false },

		override_tips: "bool :: true",
		generate_tips: "def(obj citadel_controller ctrl, class game game) ->[Tip|null]
		if(_shown_intro = false or not allow_tips, [],
		[
			if(troll_card != null,
			{
				key: 'troll',
				text: 'Cave Trolls cost eight mana to cast, but this cost can be reduced by gaining levels in Gaea magic. Cast some less expensive spells to gain experience so later you can cast a Cave Troll.',
				max_shows: 3,
				targets: [troll_card]
			}
			) where troll_card = find(level.chars, value is obj card and value.card_type.name = 'Cave Troll'),

			if(game.stack = [] and lvl != null and lvl.lvl = 1,
			{
				key: 'level_up',
				text: 'You have leveled up to level 1 of Gaea. Now a Cave Troll would cost only 7 mana to cast instead of 8. Cast two more spells to gain two experience points and get to level 2.',
				max_shows: 3,
				targets: [lvl],
				is_modal: true,
			}
			) where lvl = find(level.chars, value is obj level_display and value.player_num = 0),

			if(game.stack = [] and lvl != null and lvl.lvl = 2,
			{
				key: 'level_up_2',
				text: 'You have leveled up to level 2 of Gaea. Now a Cave Troll would cost only 6 mana to cast. Cast 3 more spells to reach level 3, and you will be able to summon a Cave Troll.',
				max_shows: 3,
				targets: [lvl],
				is_modal: true,
			}
			) where lvl = find(level.chars, value is obj level_display and value.player_num = 0),

			if(game.stack = [] and lvl != null and lvl.lvl = 3,
			{
				key: 'level_up_3',
				text: q(You have reached level 3 of Gaea! Cave Trolls only cost five mana now, and you should be able to summon one by using Nature's Blessing),
				max_shows: 3,
				targets: [lvl],
				is_modal: true,
			}
			) where lvl = find(level.chars, value is obj level_display and value.player_num = 0),

			if(game.stack = [] and size(game.players[0].hand) = 5 and game.in_response_phase = false and game.current_player_index = 0 and game.nturn > 1,
			{
				key: 'discard_cards',
				text: q(To cast spells you will usually need to burn some other spells to gain enough mana. When you mouse over a spell, the spells that will be discarded will gray out.),
				max_shows: 3,
				targets: [],
			}),

			if(game.stack = [] and size(game.players[0].hand) < 5 and game.in_response_phase = false and game.current_player_index = 0 and game.nturn > 1,
			{
				key: 'gain_mana',
				text: q(The most common way to gain mana to cast spells is by burning some spells in the furnace. This is normally done automatically. If you want to choose which spells are burned you can drag them into the furnace or right-click on them.),
				max_shows: 3,
				targets: [find_or_die(level.chars, value is obj game_icon and value.icon = 'furnace.svg' and value.y > ctrl.level_height/2)],
			}),

			if(game.in_response_phase = false and game.current_player_index = 0 and find(game.creatures, value.name = 'Cave Troll') != null and cover_card != null,
			{
				key: 'suggest_cover',
				text: q(Now you have a Cave Troll you should try to protect it. Drag your Cover card over to your Archives to keep it in case your opponent tries to do something nasty to your Troll.),
				max_shows: 3,
				targets: [cover_card, find_or_die(level.chars, value is obj game_icon and value.icon = 'archive.svg' and value.y > ctrl.level_height/2)],
			}
			) where cover_card = find(level.chars, value is obj card and value.card_type.name = 'Cover' and value.in_hand),

			if(game.in_response_phase = true and game.current_player_index = 0 and cave_troll != null and knife_card != null,
			  if(cover_card != null,
			  {
				  key: 'use_cover_card',
				  text: q(Because you archived your cover card you can use it to give your Troll cover. This will protect it from the Knife in the Dark and prevent it from dying!),
				  max_shows: 3,
				  targets: [cover_card, cave_troll],
			  },
			  {
				  key: 'cannot_use_cover_card',
				  text: q(Knife in the Dark will kill your Troll. It is a good idea to keep cards that are needed to protect your creatures in your Archives. Next time, try saving a Cover card by placing it in your Archive.),
				  max_shows: 3,
				  targets: [find_or_die(level.chars, value is obj game_icon and value.icon = 'archive.svg' and value.y > ctrl.level_height/2)],
				  clear_key: 'suggest_cover',
				  is_modal: true,
			  })

			  where cover_card = find(level.chars, value is obj card and value.card_type.name = 'Cover' and value.in_hand)
			) where knife_card = find(level.chars, value is obj card and value.card_type.name = 'Knife in the Dark' and value.stack_id != null)
			  where cave_troll = find(level.chars, value is obj creature and value.creature_object.name = 'Cave Troll' and 'Cover' not in value.creature_object.abilities),

			  if(game.in_response_phase = false and game.current_player_index = 0 and cave_troll != null and size(game.players[0].hand) = 5,
			  {
				key: 'archive_info',
				text: q(Your archives are very useful for keeping spells in that you want to use in future turns. You can archive as many cards as you want, but for each card in your archives you draw one less card.),
				max_shows: 3,
				targets: [find_or_die(level.chars, value is obj game_icon and value.icon = 'archive.svg' and value.y > ctrl.level_height/2)],
			  }
			  )
			  where cave_troll = find(level.chars, value is obj creature and value.creature_object.name = 'Cave Troll' and value.creature_object.loc[1] >= 2),

		] where player = game.players[0]
		  where level = ctrl.level)",
	}
}
