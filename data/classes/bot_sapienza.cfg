{
	bases: ["bot"],

	properties: {

	score_summons: "def(class game_state game, map play_info, class card card, Loc loc) ->int
		if(lane_empty(game, loc[0]), if(lane_has_enemy_glyphs(game, loc[0]) or lane_has_neutral_glyphs(game, loc[0]), 150, 100), 0) +


		if(enemy_creature = null, 0, -100 + outcome*200

		where outcome = lib.bot_utils.fight_outcome(game, creature, enemy_creature)
		)
		+

		switch(card.name,
		  'Ilz Apprentice', 100,
		  'Acolyte', 50,
		  'Cunning Wisp', 50,
		  'Blink Image', 300,
		  'Great Library of Turim', 400,
		  0) +


		game.trophies[(game.current_player_index+1)%2][loc[0]] +

		if(friendly_creatures_in_lane, -200, 0) +

		100

		where friendly_creatures_in_lane = filter(game.creatures, value.controller = game.current_player_index and value.loc[0] = loc[0])
		where enemy_creature = find(game.creatures, value.controller != game.current_player_index and value.loc[0] = loc[0]),
		where creature = class creature<- card.creature_object
	",

	score_spell: "def(class game_state game, map play_info, class card card, [Loc] targets) ->int
		if(card.name = 'Endless Studies', 100,
		   card.name = 'Fireball',
		   if(target_creature = null or target_creature.controller = game.current_player_index, -1000,
				if(target_creature.life <= 6, 200 + target_creature.life*10, 50)
		   )
		   where target_creature = game.creature_at_loc(targets[0]),
		   
		   -100)

	",

	choose_to_wait: "def(class game_state game, class card_base card) ->bool
		true
	",

	deck: "[string] :: ['Darkwood Denizen']*12",
	}
}
