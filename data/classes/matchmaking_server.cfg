{
properties: {
	new_account_cards: "{string -> int} :: {
		'Wolf Rider': 3,
		'Goblin Marauder': 3,
		'Wolf': 3,
		'Goblin Sapper': 3,
		'Green Adder': 3,
		'Minotaur': 2,
		'Goblin King': 1,
		'Cave Troll': 1,
		'Call of the Pack': 1,
		q(Nature's Blessing): 3,
		'Outsmart the Guards': 2,
		'Furious Rampage': 2,
		'Cover': 3,
		'Intense Warfare': 1,

		q(King's Rider): 2,
		q(Dwarvish Warrior): 3,
		q(Thunderer): 3,
		q(Dwarvish Armourer): 3,
		q(Barracks): 2,
		q(Wall of Stone): 3,
		q(Guard Post): 2,
		q(Oldric's Trap): 2,
		q(Armed to the Teeth): 2,
		q(Toughness): 3,
		q(Tactical Maneuver): 2,
		q(Bazaar): 1,
		q(Market): 3,
	}",

	create_account: "def(map msg) ->AccountDetails
	{
		collection:
		fold(map(new_account_cards, map(range(value), {
			id: generate_uuid(),
			name: card_name,
		}) where card_name = key), a+b)
	}
	",

	handle_request: "def(matchmaking_server server, map msg) ->commands
	  switch(msg.type,
			'finish_bot_game',
			[
			db_client.read_modify_write('user:' + str(msg.user),
			      def(any info) ->any
				    info + {info: info.info + {games_played: info.info.games_played + 1}}),
			],
			set(server.response, q({type: 'error', message: 'Unknown request type'}))
	  )
	",
}
}
