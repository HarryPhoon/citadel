{
	id: "matchmaking_base",

	properties: {
		_mm_client_state: { type: "class mm_client_state" },
		mm_client: "object|null :: _mm_client_state.client",

		selected_deck: { type: "string", default: "" },

		get_server_info: "commands<- if(mm_client != null, [tbs_send(mm_client, {type: 'get_server_info'})])",

		is_online: "bool :: mm_client != null",

		award_card: "def(string card_name) ->commands null",
	},

	timer_frequency: 5,

	on_timer: "if(mm_client != null, [
		if(mm_client.in_flight = 0, tbs_send(mm_client, {type: 'request_updates'})),
		tbs_process(mm_client),
	])",

	on_matchmake_connection_error: "teleport('titlescreen.cfg', '', 'instant', object_playable('login_controller', 0, 0, 0))",

	on_matchmake_message_received: "
	switch(message.type,
		'server_info', [
			if(message.bot_types, set(_mm_client_state.bot_types, [string]<- message.bot_types)),
		],
		'heartbeat', null,

		'matchmaking_queued', [
		],

		'match_made', [
		],

		'new_cards', [
			add(_mm_client_state.account_info.collection, new_cards),
			map(new_cards, award_card(value.name)),
		] where new_cards = [CardInstance]<- message.cards,
	) asserting message.type != 'error'
	  where message = map<- arg.message",
}
