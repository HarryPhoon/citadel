{
	id: "campaign_object",
	is_strict: true,

	always_active: true,

	zorder: 1000,

	properties: {
		hex_width: "int :: _controller.hex_width",
		hex_height: "int :: _controller.hex_height",
		hex_indent: "int :: _controller.hex_indent",
		hex_reverse_indent: "int :: _controller.hex_reverse_indent",

		_controller: { type: "obj story_campaign_controller" },
		_avatar: { type: "string" },
		_avatar_path: "string :: 'images/portraits/' + _avatar",
		_avatar_focus: { type: "[decimal,decimal]", default: [400,498] },
		_avatar_scale: { default: 0.3 },

		loc: { type: "[int,int]" },

		move: "def([Loc] path) ->commands execute(me, if(path, [
			set(loc, path[0]),
			animate(me, {
				mid_x: pos[0],
				mid_y: pos[1],
			}, {
				duration: 20,
				on_complete: bind_command(me.move, path[1:]),
			}),
		] where pos = _controller.hex_pos(path[0])))",


		render: "def() ->Animation
			lib.citadel.render_frame(c, hex_width, hex_height, [
				outline,

				c.clip(),

				c.translate(hex_width/2, hex_height/2),
				c.scale(_avatar_scale),

				c.paint_image(_avatar_path, [-_avatar_focus[0], -_avatar_focus[1]]),

			] where outline = [
				c.move_to(hex_indent, 0),
				c.line_to(hex_reverse_indent, 0),
				c.line_to(hex_width, hex_height/2),
				c.line_to(hex_reverse_indent, hex_height),
				c.line_to(hex_indent, hex_height),
				c.line_to(0, hex_height/2),
				c.line_to(hex_indent, 0),
			]) where c = canvas()
		",
	},

	on_create: "[
		set(animation, render()),
		set(mid_x, pos[0]),
		set(mid_y, pos[1]),
	] where pos = _controller.hex_pos(loc)",
}
