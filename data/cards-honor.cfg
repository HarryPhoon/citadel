{
	"Master Fencer": {
		name: "Master Fencer",
		type: "creature",
		cost: 4,
		school: 5,
		creature: {
			tags: ['Human'],
			overlays: [ { image_num: 25 } ],
			abilities: [
				{
					name: 'First Strike',
					cost: 1,
					school: 5,
					rules: "Gain First Strike until end of turn",
					on_play: "def(game, creature, info)
					    creature.add_ability_until_end_of_turn('First Strike')"
				},

				{
					name: "Lunge",
					cost: 1,
					school: 5,
					rules: "+1 Attack until end of turn",
					on_play: "def(game, creature, info)
					    creature.apply_effect_until_end_of_turn('attack', 1)"
				},

				{
					name: "Swift",
					cost: 1,
					school: 5,
					rules: "+1 Move, -1 Life until end of turn",
					on_play: "def(game, creature, info) [
					    creature.apply_effect_until_end_of_turn('move', 1),
					    creature.apply_effect_until_end_of_turn('life', -1),
					]"
				},

			],
			attack: 2,
			life: 2,
			move: 2,
			image_num: 35
		}
	},

	"Crusader of Rihn": {
		name: "Crusader of Rihn",
		type: "creature",
		cost: 4,
		school: 5,
		creature: {
			tags: ['Elf', 'Mounted'],
			sprite_sheet: "creature_large",
			image_num: 1,
			abilities: ['Charge'],
			attack: 3,
			life: 3,
			move: 3,
		}
	},

	"Rihn's Martyr": {
		name: "Rihn's Martyr",
		type: "creature",
		cost: 2,
		school: 5,
	    rules: "When Rihn's Martyr dies, search your deck for a Shrine of the Martyr and put it in your hand",
		creature: {
			tags: ['Human'],
			image_num: 25,
			attack: 1,
			life: 2,
			move: 2,
			on_die: "def(game)
			            if(card, [
						  add(player.hand, [card]),
						  set(player.deck, filter(player.deck, value != card))
						])
			            where card = find(player.deck, value.name = 'Shrine of the Martyr')
			            where player = game.players[controller]"
		}
	},

	"Shrine of the Martyr": {
		name: "Shrine of the Martyr",
		type: "creature",
		cost: 2,
		school: 5,
		rules: "+1 faith per turn",
		creature: {
			tags: ["Shrine"],
			life: 2,
			is_building: true,
			image_num: 4,
			on_begin_turn: "def(game) if(game.current_player = controller,
			    { execute: q(player.add_resources({5: 1})), arg: {player: game.players[controller]} } )"
		}
	}
}
