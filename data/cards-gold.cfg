{
	"Master Fencer": {
		name: "Master Fencer",
		type: "creature",
		cost: 3,
		loyalty_cost: 3,
		school: 1,
		creature: {
			tags: ['Human'],
			overlays: [ { image_num: 25 } ],
			abilities: [
				{
					name: 'First Strike',
					cost: 1,
					school: 1,
					rules: "Gain First Strike until end of turn",
					on_play: "def(game, creature, info)
					    creature.add_ability_until_end_of_turn('First Strike')"
				},

				{
					name: "Lunge",
					cost: 1,
					school: 1,
					rules: "+1 Attack until end of turn",
					on_play: "def(game, creature, info)
					    creature.apply_effect_until_end_of_turn('attack', 1)"
				},

				{
					name: "Swift",
					cost: 1,
					school: 1,
					rules: "+1 Move, -1 Life until end of turn",
					on_play: "def(game, creature, info) [
					    creature.apply_effect_until_end_of_turn('move', 1),
					    creature.apply_effect_until_end_of_turn('life', -1),
					]"
				},

			],
			attack: 2,
			life: 2,
			move: 2,
			image_num: 35
		}
	},

	"Dwarvish Warrior": {
		name: "Dwarvish Warrior",
		type: "creature",
		cost: 2,
		loyalty_cost: 4,
		school: 1,
		creature: {
			tags: ['Dwarf'],
			attack: 2,
			life: 2,
			move: 2,
			resistance: 1,
			initiative: 20,
			image_num: 42,

			//carries a sword and shield
			overlays: [ { image_num: 13, }, { image_num: 20, } ],
		}
	},
	
	"Dwarvish Engineer": {
		name: "Dwarvish Engineer",
		type: "spell",
		cost: 3,
		loyalty_cost: 1,
		school: 1,
		rules: "When played dwarvish engineer finishes construction of a target building immediately",
		possible_targets: "my_buildings_as_possible_targets",
		on_play: "def(game, info) [game.summon_creature(construct('creature', {
			name: 'Dwarvish Engineer',			
			tags: ['Dwarf'],
			school: 1, 
			attack: 1,
			controller: game.current_player,
			life: 2,
			move: 2,
			initiative: 20,
			image_num: 71,
			loc: info.targets[0],
			})), target.force_summon]
			asserting target != null
			asserting size(info.targets) = 1
			where target = game.creature_at_loc(info.targets[0])
		",
	},

	"Dwarvish Crossbow": {
		name: "Dwarvish Crossbow",
		type: "creature",
		cost: 3,
		loyalty_cost: 1,
		school: 1,
		rules: "When it is not your turn, Dwarvish Crossbow has 0 attack",
		creature: {
			tags: ['Dwarf'],
			attack: 3,
			life: 2,
			move: 2,
			range: 2,
			resistance: 1,
			image_num: 71,
			on_begin_turn: "def(game) if(game.current_player != controller, me.apply_effect_until_end_of_turn('attack', -attack))"
			
		}
	},

	"Ballista": {
		name: "Ballista",
		type: "creature",
		cost: 3,
		loyalty_cost: 3,
		school: 1,
		creature: {
			tags: ["Fortification"],
			summoning_time: 3,
			life: 2,
			range: 5,
			attack: 1,
			image_num: 0,
			is_building: true,
		}
	},

	"Guard Post": {
		name: "Guard Post",
		type: "creature",
		cost: 2,
		loyalty_cost: 3,
		school: 1,
		creature: {
			tags: ["Fortification"],
			summoning_time: 2,
			resistance: 1,
			life: 4,
			range: 2,
			attack: 2,
			image_num: 0,
			is_building: true,
		}
	},

	"Wall of Stone": {
		name: "Wall of Stone",
		type: "creature",
		cost: 2,
		loyalty_cost: 1,
		school: 1,
		creature: {
			tags: ["Wall"],
			life: 5,
			resistance: 1,
			is_building: true,
			image_num: 0,
			summoning_time: 1,
		}
	},

	"Mine": {
		name: "Mine",
		type: "creature",
		cost: 3,
		loyalty_cost: 2,
		school: 1,
		rules: "+1 resource per turn",
		creature: {
			tags: ["Mine"],
			abilities: ["Cover"],
			life: 2,
			is_building: true,
			image_num: 0,
			summoning_time: 3,

			on_begin_turn: "def(game) if(game.current_player = controller,
			    { execute: q(add(player.resources, 1)), arg: {player: game.players[controller]} } )",
		}
	},

	"Stormgard Armory": {
		name: "Stormgard Armory",
		type: "creature",
		cost: 4,
		loyalty_cost: 4,
		school: 1,
		rules: "Your creatures in this lane get +1 attack, +1 resistance",
		creature: {
			tags: ["Forge"],
			life: 6,
			is_building: true,
			image_num: 0,
			summoning_time: 4,

			static_ability_effect: "if(creature.controller = target.controller and creature.loc[0] = target.loc[0], [target.apply_static_effect('life', 1), target.apply_static_effect('resistance', 1)])",
		}
	},

	"Dwarf Forge": {
		name: "Dwarf Forge",
		type: "creature",
		cost: 2,
		loyalty_cost: 2,
		school: 1,
		rules: "Your creatures in this lane get +1 attack, +1 life",
		creature: {
			tags: ["Forge"],
			life: 4,
			is_building: true,
			image_num: 0,
			summoning_time: 3,

			static_ability_effect: "if(creature.controller = target.controller and creature.loc[0] = target.loc[0], [target.apply_static_effect('attack', 1), target.apply_static_effect('life', 1)])",
		}
	},
	
	"Dwarvish Armourer": {
		name: "Dwarvish Armourer",
		type: "creature",
		cost: 2,
		loyalty_cost: 2,
		school: 1,
		creature: {
			tags: ['Dwarf'],
			attack: 1,
			life: 3,
			move: 2,
			resistance: 1,
			initiative: 20,
			image_num: 71,
		}		
	},

	"Shore Up": {
		name: "Shore Up",
		type: "spell",
		school: 1,
		cost: 2,
		loyalty_cost: 3,
		is_response: true,
		rules: "Target building gets +5 life",
		possible_targets: "def(game, nplayer, targets)
		  if(targets = [], [creature.loc | creature <- game.creatures, creature.is_building, creature.summoned, creature.is_valid_target(game, nplayer, me)])",
		on_play: "def(game, info) add(game.creature_at_loc(info.targets[0]).life, 5)
		          asserting game.creature_at_loc(info.targets[0]) != null
				  asserting size(info.targets) = 1"
	},
	
	"Armour Up": {
		name: "Armour Up",
		type: "spell",
		school: 1,
		cost: 2,
		loyalty_cost: 1,
		is_response: true,
		rules: "Target creatures gains +1 resistance",
		possible_targets: "all_creatures_as_possible_targets",
		on_play: "def(game, info) add(creature.resistance, 1)
			asserting creature != null
			asserting size(info.targets) = 1
			where creature = game.creature_at_loc(info.targets[0])",
	},
}
