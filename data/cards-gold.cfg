{
	"Minotaur": {
		name: "Minotaur",
		type: "creature",
		cost: 4,
		loyalty_cost: 3,
		school: 1,
		creature: {
			tags: ['Creature'],
			abilities: ['Trample'],
			attack: 3,
			life: 4,
			move: 5,
			initiative: 30,
			image_num: 30,
			on_kill: "def(game, victim) if(not victim.is_building, me.do_move_remaining(game))",
		}
	},

	"Dwarvish Warrior": {
		name: "Dwarvish Warrior",
		type: "creature",
		cost: 2,
		loyalty_cost: 4,
		school: 1,
		creature: {
			tags: ['Dwarf'],
			attack: 2,
			life: 2,
			move: 2,
			resistance: 1,
			initiative: 20,
			image_num: 42,

			//carries a sword and shield
			overlays: [ { image_num: 13, }, { image_num: 20, } ],
		}
	},
	
	"Dwarvish Engineer": {
		name: "Dwarvish Engineer",
		type: "creature",
		cost: 2,
		loyalty_cost: 1,
		school: 1,
		rules: "When passing over a friendly building, repairs it to full health",
		creature: {
			tags: ['Dwarf'],
			attack: 1,
			life: 2,
			move: 2,
			initiative: 20,
			image_num: 71,
			on_moved_over: "def(game, creature) if(creature.is_building and creature.controller = me.controller, set(creature.wounds, 0))",
		}		
	},

	"Dwarvish Crossbow": {
		name: "Dwarvish Crossbow",
		type: "creature",
		cost: 3,
		loyalty_cost: 1,
		school: 1,
		rules: "When it is not your turn, Dwarvish Crossbow has 0 attack",
		creature: {
			tags: ['Dwarf'],
			attack: 3,
			life: 2,
			move: 2,
			range: 2,
			resistance: 1,
			on_begin_turn: "def(game) if(game.current_player != controller, me.apply_effect_until_end_of_turn('attack', -attack))"
			
		}
	},

	"Guard Post": {
		name: "Guard Post",
		type: "creature",
		cost: 2,
		loyalty_cost: 3,
		school: 1,
		rules: "Defensive Structure",
		creature: {
			tags: ["Fortification"],
			life: 4,
			range: 2,
			attack: 2,
			image_num: 0,
			is_building: true,
		}
	},
		
	"Mine": {
		name: "Mine",
		type: "creature",
		cost: 2,
		loyalty_cost: 3,
		school: 1,
		rules: "+1 resource per turn",
		creature: {
			tags: ["Mine"],
			life: 2,
			is_building: true,
			image_num: 0,

			on_begin_turn: "def(game) if(game.current_player = controller,
			    { execute: q(add(player.resources, 1)), arg: {player: game.players[controller]} } )",
		}
	},
	
	"Dwarvish Armourer": {
		name: "Dwarvish Armourer",
		type: "creature",
		cost: 2,
		loyalty_cost: 2,
		school: 1,
		creature: {
			tags: ['Dwarf'],
			attack: 1,
			life: 3,
			move: 2,
			resistance: 1,
			initiative: 20,
			image_num: 71,
		}		
	},

	"Shore Up": {
		name: "Shore Up",
		type: "spell",
		school: 1,
		cost: 2,
		loyalty_cost: 3,
		is_response: true,
		rules: "Target building gets +5 life",
		possible_targets: "def(game, nplayer, targets)
		  if(targets = [], [creature.loc | creature <- game.creatures, creature.is_building, creature.is_valid_target(game, nplayer, me)])",
		on_play: "def(game, info) add(game.creature_at_loc(info.tarets[0]).life, 5)
		          asserting game.creature_at_loc(info.targets[0]) != null
				  asserting size(info.targets) = 1"
	},
}
