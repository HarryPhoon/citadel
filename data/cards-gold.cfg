{
	"King's Rider": {
		name: "King's Rider",
		type: "creature",
		cost: 3,
		loyalty_cost: 2,
		school: 1,
		creature: {
			tags: ['Human', 'Mounted'],
			sprite_sheet: "creature_large",
			image_num: 1,
			attack: 2,
			life: 2,
			move: 3,

			abilities: [
				{
					name: 'Maneuver',
					cost: 1,
					school: 1,
					rules: "Move to an adjacent lane",
					exhausts_creature: true,

					possible_targets: "def(game, creature, targets)
						if(targets = [], filter([
								[creature.loc[0]-1, creature.loc[1]],
								[creature.loc[0]+1, creature.loc[1]]],
							game.creature_at_loc(value) = null), null)
					",

					on_play: "def(game, creature, info) [
						set(creature.loc, info.targets[0])
					] asserting size(info.targets) = 1",
				}
			]
		}
	},

	"Master Fencer": {
		name: "Master Fencer",
		type: "creature",
		cost: 3,
		loyalty_cost: 3,
		school: 1,
		creature: {
			tags: ['Human'],
			overlays: [ { image_num: 25 } ],
			abilities: [
				{
					name: 'First Strike',
					cost: 1,
					school: 1,
					rules: "Gain First Strike until end of turn",
					on_play: "def(game, creature, info)
					    creature.add_ability_until_end_of_turn('First Strike')"
				},

				{
					name: "Lunge",
					cost: 1,
					school: 1,
					rules: "+1 Attack until end of turn",
					on_play: "def(game, creature, info)
					    creature.apply_effect_until_end_of_turn('attack', 1)"
				},

				{
					name: "Swift",
					cost: 1,
					school: 1,
					rules: "+1 Move, -1 Life until end of turn",
					on_play: "def(game, creature, info) [
					    creature.apply_effect_until_end_of_turn('move', 1),
					    creature.apply_effect_until_end_of_turn('life', -1),
					]"
				},

			],
			attack: 2,
			life: 2,
			move: 2,
			image_num: 35
		}
	},

	"Dwarvish Warrior": {
		name: "Dwarvish Warrior",
		type: "creature",
		cost: 3,
		loyalty_cost: 1,
		school: 1,
		creature: {
			tags: ['Dwarf'],
			attack: 2,
			life: 2,
			move: 2,
			resistance: 1,
			initiative: 20,
			image_num: 42,

			//carries a sword and shield
			overlays: [ { image_num: 13, }, { image_num: 20, } ],
		}
	},

	"Guard of the Keep": {
		name: "Guard of the Keep",
		type: "creature",
		cost: 2,
		loyalty_cost: 3,
		school: 1,

		rules: "Guard of the Keep may be summoned in a vacant tile immediately in front of any building or construction you control",

		possible_targets: "def(game, nplayer, targets)
			if(creature != null and targets = [],
				game.players[nplayer].summoning_locs(game, creature) +
				filter([[bldg.loc[0], bldg.loc[1]+dir] | bldg <- game.creatures, bldg.is_building, bldg.controller = nplayer] where dir = if(nplayer = 0, 1, -1), (not game.creature_at_loc(value)) and game.is_loc_on_board(value))
			)
		",
		creature: {
			tags: ['Dwarf'],
			attack: 2,
			life: 2,
			move: 2,
			initiative: 20,
			image_num: 42,

			//carries a sword and shield
			overlays: [ { image_num: 13, }, { image_num: 20, } ],
		}
	},
	
	"Dwarvish Engineer": {
		name: "Dwarvish Engineer",
		type: "spell",
		cost: 3,
		loyalty_cost: 1,
		school: 1,
		rules: "You may build buildings in tiles adjacent to Dwarvish Engineer",
		creature: {
			name: 'Dwarvish Engineer',			
			tags: ['Dwarf'],
			allows_summoning: "def(game, target) if(target.is_building,
			  filter(game.all_locs, game.locs_adjacent(value, me.loc) and
			         game.creature_at_loc(value) = null))",

			school: 1, 
			attack: 1,
			life: 2,
			move: 2,
			initiative: 20,
			image_num: 71,
		}
	},
	
	"Hurried Construction": {
		name: "Hurried Construction",
		type: "spell",
		cost: 1,
		loyalty_cost: 4,
		school: 1,
		rules: "Finish construction of target building immediately",
		possible_targets: "def(game, nplayer, targets) if(targets = [],
			[creature.loc | creature <- game.creatures, creature.is_building, not creature.summoned, creature.is_valid_target(game, nplayer, me)]
		)",
		on_play: "def(game, info)
		  target.force_summon
			asserting target != null
			asserting size(info.targets) = 1
			where target = game.creature_at_loc(info.targets[0])
		",
	},

	"Dwarvish Crossbow": {
		name: "Dwarvish Crossbow",
		type: "creature",
		cost: 2,
		loyalty_cost: 2,
		school: 1,
		rules: "When it is not your turn, Dwarvish Crossbow has 0 attack",
		creature: {
			tags: ['Dwarf'],
			attack: 3,
			life: 2,
			move: 2,
			range: 2,
			resistance: 1,
			image_num: 71,
			on_begin_turn: "def(game) if(game.current_player != controller, me.apply_effect_until_end_of_turn('attack', -attack))"
			
		}
	},

	"Ballista": {
		name: "Ballista",
		type: "creature",
		cost: 3,
		loyalty_cost: 3,
		school: 1,
		creature: {
			tags: ["Fortification"],
			life: 2,
			range: 5,
			attack: 1,
			image_num: 0,
			is_building: true,
		}
	},

	"Guard Post": {
		name: "Guard Post",
		type: "creature",
		cost: 2,
		loyalty_cost: 3,
		school: 1,
		creature: {
			tags: ["Fortification"],
			resistance: 1,
			life: 4,
			range: 2,
			attack: 2,
			image_num: 0,
			is_building: true,
		}
	},

	"Wall of Stone": {
		name: "Wall of Stone",
		type: "creature",
		cost: 2,
		loyalty_cost: 1,
		school: 1,
		creature: {
			tags: ["Wall"],
			life: 5,
			resistance: 1,
			is_building: true,
			image_num: 0,
		}
	},

	"Market": {
		name: "Market",
		type: "creature",
		cost: 3,
		loyalty_cost: 1,
		school: 1,
		rules: "+1 mana per turn",
		creature: {
			tags: ["Marketplace"],
			life: 1,
			is_building: true,
			image_num: 0,

			on_begin_turn: "def(game) if(game.current_player = controller,
			    { execute: q(add(player.resources, 1)), arg: {player: game.players[controller]} } )",
		}
	},

	"Mine": {
		name: "Mine",
		type: "creature",
		cost: 3,
		loyalty_cost: 2,
		school: 1,
		rules: "+1 mana per turn",
		creature: {
			tags: ["Mine"],
			abilities: ["Cover"],
			life: 3,
			is_building: true,
			image_num: 0,

			on_begin_turn: "def(game) if(game.current_player = controller,
			    { execute: q(add(player.resources, 1)), arg: {player: game.players[controller]} } )",
		}
	},

	"Stormgard Armory": {
		name: "Stormgard Armory",
		type: "creature",
		cost: 4,
		loyalty_cost: 4,
		school: 1,
		rules: "Your creatures in this lane get +1 attack, +1 resistance",
		creature: {
			tags: ["Forge"],
			life: 6,
			is_building: true,
			image_num: 0,

			static_ability_effect: "if(creature.controller = target.controller and creature.loc[0] = target.loc[0], [target.apply_static_effect('attack', 1), target.apply_static_effect('resistance', 1)])",
		}
	},

	"Dwarf Forge": {
		name: "Dwarf Forge",
		type: "creature",
		cost: 2,
		loyalty_cost: 2,
		school: 1,
		rules: "Your creatures in this lane get +1 attack, +1 life",
		creature: {
			tags: ["Forge"],
			life: 4,
			is_building: true,
			image_num: 0,

			static_ability_effect: "if(creature.controller = target.controller and creature.loc[0] = target.loc[0], [target.apply_static_effect('attack', 1), target.apply_static_effect('life', 1)])",
		}
	},
	
	"Dwarvish Armourer": {
		name: "Dwarvish Armourer",
		type: "creature",
		cost: 2,
		loyalty_cost: 2,
		school: 1,
		creature: {
			tags: ['Dwarf'],
			attack: 1,
			life: 3,
			move: 2,
			resistance: 1,
			initiative: 20,
			image_num: 71,
		}		
	},

	"Shore Up": {
		name: "Shore Up",
		type: "spell",
		school: 1,
		cost: 2,
		loyalty_cost: 3,
		is_response: true,
		rules: "Target building gets +5 life",
		possible_targets: "def(game, nplayer, targets)
		  if(targets = [], [creature.loc | creature <- game.creatures, creature.is_building, creature.summoned, creature.is_valid_target(game, nplayer, me)])",
		on_play: "def(game, info) add(game.creature_at_loc(info.targets[0]).life, 5)
		          asserting game.creature_at_loc(info.targets[0]) != null
				  asserting size(info.targets) = 1"
	},
	
	"Armour Up": {
		name: "Armour Up",
		type: "spell",
		school: 1,
		cost: 2,
		loyalty_cost: 1,
		is_response: true,
		rules: "Target creature gains +1 resistance",
		possible_targets: "all_creatures_as_possible_targets",
		on_play: "def(game, info) add(creature.resistance, 1)
			asserting creature != null
			asserting size(info.targets) = 1
			where creature = game.creature_at_loc(info.targets[0])",
	},
	
	"Whites of their Eyes": {
		name: "Whites of their Eyes",
		type: "spell",
		school: 1,
		cost: 2,
		loyalty_cost: 2,
		is_response: true,
		rules: "Ranged creatures you control have 1 range until end of turn. They get +2 attack and First Strike.",
		possible_targets: "def(game, nplayer, targets) null",
		on_play: "def(game, info) map(game.creatures, creature, if(creature.range > 1 and creature.controller = game.current_player, [
			creature.apply_effect_until_end_of_turn('range', 1-creature.range),
			creature.apply_effect_until_end_of_turn('attack', 2),
			creature.add_ability_until_end_of_turn('First Strike')]))",
	},
	
	"Blessing of Glothorn": {
		name: "Blessing of Glothorn",
		type: "spell",
		school: 1,
		cost: 3,
		loyalty_cost: 3,
		rules: "All Dwarves gain the ability 'Glothorn\'s Blessing: +1 attack, -1 resistance, until end of turn.'",
		possible_targets: "def(game, nplayer, targets) null",
		on_play: "def(game, info) map(game.creatures, creature, 
			if('Dwarf' in creature.tags and not filter(creature.abilities, if(is_string(value), value = q(Glothorn's Blessing), value.name = q(Glothorn's Blessing))), 
			add(creature.abilities, [{
				name: q(Glothorn's Blessing),
				cost: 1,
				school: 1,
				rules: 'Gain +1 attack, -1 resistance, until end of turn',
				on_play: q(def(game, creature, info) [
					creature.apply_effect_until_end_of_turn('attack', 1),
					creature.apply_effect_until_end_of_turn('resistance', -1)
				])
			}])))",		
	},
	
	"Oldric's Workshop": {
		name: "Oldric's Workshop",
		type: "creature",
		school: 1,
		cost: 2,
		loyalty_cost: 2,
		hero: true,
		rules: "Your buildings build 1 turn faster and +1 life when built",
		creature: {
			tags: ["Workshop"],
			life: 3,
			is_building: true,
			image_num: 0,
			static_ability_effect: "[if(creature.controller = target.controller and target.is_building, target.apply_static_effect_while_summoning('summoning_time', -1)),
				if(creature.controller = target.controller and target.is_building, target.apply_static_effect('life', 1))
			]",
		}
	},
	
	"Armed to the Teeth": {
		name: "Armed to the Teeth",
		type: "spell",
		school: 1,
		cost: 4,
		loyalty_cost: 2,
		rules: "Creatures you control get +1 attack, +1 resistance, and +1 life permanently",
		on_play: "def(game, info) map(game.creatures, creature, if(game.current_player_index = creature.controller and not creature.is_building, [
			add(creature.resistance, 1),
			add(creature.life, 1),
			add(creature.attack, 1)
		]))",
	},
}
