{
	id: "quest_display",
	is_strict: true,

	properties: {
		quest: { type: "class quest" },

		_proportion_ratio: { type: "null|decimal", change: "render()" },
		_display_current_value: { type: "null|int" },

		animate_value: "def(int old_value, int new_value) ->commands
		if(old_value != new_value,
			set(_proportion_ratio, old_value/decimal(quest.max_value));
			set(_display_current_value, old_value);
			animate(me, {
				_proportion_ratio: new_value/decimal(quest.max_value),
				_display_current_value: new_value,
			}, {
				duration: 12,
				on_complete: [set(_proportion_ratio, null), set(_display_current_value, null)],
			})
		)
		",

		render: "def() ->commands [
		set(animation, lib.citadel.render_frame(c, ww, hh,
		[
			c.set_source_rgba(0.1,0.12,0.15,1.0),
			c.rectangle(0, 0, ww, hh),
			c.fill(),

			c.set_line_width(lib.citadel.dpy(1.0)),
			c.set_source_rgba(0.28,0.30,0.32,1.0),
			c.rectangle(0, 0, ww, hh),
			c.stroke(),

			c.set_source_rgba(1,1,1,1),
			c.rectangle(ww*0.85, hh*0.2, ww*0.12, hh*0.02),
			c.fill(),

			c.set_source_rgba(0,1,1,1),
			c.rectangle(ww*0.85, hh*0.2, ww*0.12*bar_proportion, hh*0.02),
			c.fill(),

			c.set_source_rgba(1,1,1,1),

			map(fragments, [
				c.save(),
				c.translate(ww*0.18, hh*0.08),
				value.path,
				c.fill(),
				c.restore(),
			])
			where fragments = c.markup_text(q(<font size='16'><b>) + quest.name + q(</b></font>), {scale: hh/50.0, width: 1000}),

			map(fragments, [
				c.save(),
				c.translate(ww*0.18, min(hh*0.55, hh - fragments_height)),
				value.path,
				c.fill(),
				c.restore(),
			])
			where fragments_height = (max(map(fragments, value.y+value.height)) or 0)*1.15
			where fragments = c.markup_text(q(<font size='14'>) + quest.rules + q(</font>), {scale: hh/50.0, scale_line_heights: 0.75, width: ww*0.65}),

			map(fragments, [
				c.save(),
				c.translate(ww*0.035, hh*0.62),
				value.path,
				c.fill(),
				c.restore(),
			])
			where fragments = c.markup_text(q(<font size='12'>Gold</font>), {scale: hh/50.0, width: 1000}),

			map(fragments, [
				c.save(),
				c.translate(ww*0.033, hh*0.14),
				value.path,
				c.fill(),
				c.restore(),
			])
			where fragments = c.markup_text(q(<font size='20'><b>) + str(quest.reward) + q(</b></font>), {scale: hh/50.0, width: 1000}),

			map(fragments, [
				c.save(),
				c.translate(ww - lib.citadel.py(30), hh/2 - value.height/2),
				value.path,
				c.fill(),
				c.restore(),
			])
			where fragments = c.markup_text(q(<font size='18'>) + str(if(_display_current_value != null, _display_current_value, quest.current_value)) + '/' + str(quest.max_value) + q(</font>), {scale: hh/50.0, width: 1000}),

		])) where c = canvas()
		    where ww = round_to_even(lib.citadel.py(206))
		    where hh = lib.citadel.py(46)
			where bar_proportion = if(_proportion_ratio != null, _proportion_ratio, quest.current_value / decimal(quest.max_value))
		]
		",
	},

	on_create: "render()",
	on_type_updated: "render()",


}
