{
	id: "campaign_pause_dialog",

	is_strict: true,
	always_active: true,
	hidden_in_game: true,

	properties: {
		_mm: { type: "obj matchmaking_base" },
		_controller: { type: "obj story_campaign_controller" },
		_widgets: { type: "[custom_obj]", default: [] },
		_internal_client: { type: "object|null" },
		screen_width: "int :: level.dimensions[2] - level.dimensions[0]",
		screen_height: "int :: level.dimensions[3] - level.dimensions[1]",

		quit_campaign: "def() ->commands [
			_controller.save_game(),
			fire_event(_controller, 'quit_campaign')
		]",

		abandon_campaign: "def() ->commands [
			_controller.clear_save(),
			fire_event(_controller, 'quit_campaign')
		]",

		exit_dialog: "def() ->commands [
		    set(_controller.in_background, false),
			map(level.chars, if(value.paused or value = _controller, set(value.paused, false), remove_object(value))),
			set(level.frame_buffer_shaders, filter(level.frame_buffer_shaders, value.label != 'pause_dialog_blur')),

		]",
	},

	on_create: "[
		add(level.frame_buffer_shaders, [{
			label: 'pause_dialog_blur',
			begin_zorder: -10000000,
			end_zorder: 12000,
			shader_info: 'citadel_background_blur_hor',
		}]),
		add(level.frame_buffer_shaders, [{
			label: 'pause_dialog_blur',
			begin_zorder: -10000000,
			end_zorder: 12000,
			shader_info: 'citadel_background_blur_ver',
		}]),
		set(_controller.in_background, true),
		[set(c.paused, true) | c <- level.chars, c != me, c != _controller],

		spawn('button_controller', screen_width/2, screen_height/2 - 75, {
			text: 'Abandon Campaign',
			on_click: bind(me.abandon_campaign),
			zorder: 20000,
			button_width: 240,
			button_height: 50,
		}),

		spawn('button_controller', screen_width/2, screen_height/2 - 25, {
			text: 'Leave Campaign',
			on_click: bind(me.quit_campaign),
			zorder: 20000,
			button_width: 240,
			button_height: 50,
		}),

		spawn('button_controller', screen_width/2, screen_height/2 + 25, {
			text: 'Close',
			on_click: me.exit_dialog,
			zorder: 20000,
			button_width: 240,
			button_height: 50,
		}),

	]",

	on_process: "[
	]",

	on_settings_menu: "[
		set(level.show_builtin_settings_dialog, false),
		schedule(1, exit_dialog()),
	]",
}
