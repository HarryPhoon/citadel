{
	id: "campaign_quest_display",
	is_strict: true,

	properties: {
		quest: { type: "class campaign_quest" },

		width: "int :: lib.gui.py(100)",
		height: "int :: lib.gui.py(20)",

		quest_progress_anim: {
			type: "decimal|null",
			set: "[
				set(_data, value);
				render()
			]",
		},

		render: "def() ->commands
		set(animation, {
			id: 'fbo',
			image: 'fbo',
			x: 0, y: 0, w: width, h: height,
			scale: 1, frames: 1,
			fbo: c.render(width, height, [
				c.set_source_rgba(1,1,1,1),
				c.set_line_width(lib.gui.dpy(1.6)),
				c.move_to(0, height/2),
				c.line_to(width, height/2),
				c.stroke(),

				c.set_source_rgba(0,1,1,1),
				c.move_to(0, height/2),
				c.line_to(width*(if(quest_progress_anim != null, quest_progress_anim, quest.progress)/100.0), height/2),
				c.stroke(),
			])
			where c = canvas()
		})
		",

		spawn_objects: "def() ->commands
			spawn('game_icon', {
				size: lib.gui.py(32),
				icon: quest.icon,
				draw_color: quest.icon_color,
				x: x2,
				mid_y: mid_y,
				zorder: zorder+1,
			}, [
				set(_icon, child),
			])
		",

		_icon: { type: "null|obj game_icon" },
		icon: "obj game_icon<- _icon",
	},

	events: {
		create: "render(); spawn_objects()",

		being_removed: "map(spawned_children, remove_object(value))",

	},
}
