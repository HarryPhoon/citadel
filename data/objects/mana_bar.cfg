{
id: "mana_bar",
is_strict: true,

properties: {
	current_mana: { type: "int" },
	max_mana: { type: "int" },
	using_mana: { type: "int", default: 0, set: "if(value != _data, [set(_data, value), fire_event('create')])" },

	_font: { default: "citadel-font.otf" },
	_font_size: { default: 16 },

	_render_key: "[current_mana, max_mana, using_mana]",

	render: "def(int ww, int hh) ->commands [
	set(animation, {
		id: 'fbo',
		image: 'fbo',
		x: 0, y: 0, w: ww, h: hh,
		scale: 1, frames: 1,
		fbo: query_cache(global_cache(8), _render_key, c.render(ww, hh, [

			c.translate(if(max_mana > 5, 20, 4), hh - if(max_mana > 5, 22, 11)),

			map(range(max_mana),
				[
					c.save(),
					if(row_pos > 0, c.translate(-8, 11)),

					c.translate(col_pos*bar_width, 0),

					bar_outline,

					if(value >= current_mana,
					[
						c.set_source_rgba(0.91, 0.86, 0.79, 1.0),
						c.set_line_width(1),
						c.stroke(),
					],
					value >= current_mana - using_mana,
					[
						c.set_source_rgba(0.91, 0.86, 0.79, 1.0),
						c.fill(),
						c.stroke(),
					],
					[
						c.set_source_rgba(0.53, 0.76, 0.07),
						c.fill(),
						c.stroke(),
					]),
							
					c.restore(),
				] where row_pos = if(value >= max(5, max_mana/2), 1, 0)
				  where col_pos = if(value >= max(5, max_mana/2), value - max(5, max_mana/2), value)
			),

			c.translate(10, -5),
			c.set_font(_font),
			c.set_font_size(_font_size),
			c.set_source_rgba(1, 1, 1, 1),
			c.text_path('MANA  ' + str(current_mana) + '/' + str(max_mana)),
			c.fill(),
		])
		 where bar_outline = [
		 	c.move_to(4, 0),
			c.line_to(bar_width, 0),
			c.line_to(bar_width-8, 8),
			c.line_to(-4, 8),
		 	c.line_to(4, 0),
		 ]
		 where bar_width = (ww-30)/max(5, max_mana/2 + 1)
		 where c = canvas()
		)
	}),
	]",
},

on_create: "[
	render(180, 80),
	set(x, x),
	set(y2, y2),
]",

on_type_updated: "fire_event('create')",


}
