{
	id: "news_controller",
	is_strict: true,
	hidden_in_game: true,
	zorder: 1000,

	types: {
		TextItem: "{
			type: string,
			text: string,
		}",
	},

	properties: {
		_width: { type: "int" },
		_height: { type: "int" },

		items: { type: "[map|string]" },

		_objects: { type: "[custom_obj]", default: [] },

		_pane: { type: "null|obj scrollable_pane" },

		spawn_object: "def(map|string m) ->commands
			if(m is string,
				spawn('text_area', {
					x: 0,
					y: 0,
					zorder: zorder+20,
					text_width: _width - lib.citadel.py(12),
					_text: m,
				}, [
					add(_objects, [child]),
				])
			)
		",

		create_objects: "def() ->commands execute(me, [
			remove_object(_pane),
			set(_objects, []),
			map(items, spawn_object(value)),
		]; [
			map(_objects, remove_object(value)),
			spawn('scrollable_pane', {
				zorder: zorder+10,
				x: x + lib.citadel.py(4),
				y: y + lib.citadel.py(4),
				focus_on_mouseover: true,
				hide_scrollbar_on_mouse_off: true,
				_scrollbar_shown: false,
				area_width: _width - lib.citadel.py(8),
				area_height: _height - lib.citadel.py(8),
				elements: map(_objects, {
					obj: value,
					xpos: lib.citadel.py(4),
					ypos: fold(map(_objects[:index], value.img_h+2), a+b, 0),
				}),
			}),
		])",
	},

	on_create: "create_objects()",

	on_being_removed: "remove_object(_pane)",

	on_type_updated: "fire_event('create')",


}
