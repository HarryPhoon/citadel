{
	id: "speech_controller",

	is_strict: true,
	always_active: true,
	hidden_in_game: true,

	properties: {
		px: "def(int pixels) ->int if(res%2 = 1, res+1, res) where res = int((decimal(pixels)*decimal(level_height))/900.0)",

		_prev_click: { default: true },
		_prev_keys: { type: "null|[string]" },

		level_width: "int :: level.dimensions[2]",
		level_height: "int :: level.dimensions[3]",

		_mm: { type: "obj matchmaking_base" },
		_controller: { type: "obj citadel_controller" },

		_bubble: { type: "null|obj speech_bubble" },

		_avatar: { type: "obj player_avatar" },
		_text: { type: "string" },

		_on_complete: { type: "commands", default: null },

		_on_exit: { type: "commands", default: null },

		_paused: { type: "[custom_obj]", default: [] },

		_blur: { default: true },

		_click_to_continue_label: { type: "null|obj label" },

		skip_dialog: "def() ->commands if(_bubble and not _bubble.at_end, [
			_bubble.skip_to_end()
		], [
			exit_dialog()
		])",

		exit_dialog: "def() ->commands [
			remove_object(me),

			add(_avatar.zorder, -20000),
			map(level.chars, if(value.paused, set(value.paused, value not in _paused),
			                    value != _avatar and value not in _save,
								remove_object(value))),
			set(level.frame_buffer_shaders, filter(level.frame_buffer_shaders, value.shader_info != 'citadel_background_blur_hor' and value.shader_info != 'citadel_background_blur_ver')),

			_on_exit,
		]",

		_save: { type: "[custom_obj]", default: [] },
	},

	on_process: "[
		if(_bubble != null and _bubble.at_end and _click_to_continue_label != null,
			set(_click_to_continue_label.alpha, 255)
		),

		set(_prev_click, click),
		if(click and _prev_click = false, skip_dialog()),

		if(_prev_keys != null and
		   find(level.player.ctrl_keys, value is string and value not in _prev_keys) != null,
		   skip_dialog()
		),

		set(_prev_keys, level.player.ctrl_keys),

		_mm.process_matchmaking_connection(),
		_controller.process_connection(),

		if(_on_complete != null and _bubble != null and _bubble.at_end, [
			_on_complete,
			set(_on_complete, null),
		]),
		
	] where click = 'left' in level.player.ctrl_mice[0]",

	on_create: "[
		set(_save, level.chars),

		if(_blur, [
			add(level.frame_buffer_shaders, [{
				begin_zorder: -10000000,
				end_zorder: 12000,
				shader_info: 'citadel_background_blur_hor',
			}]),

			add(level.frame_buffer_shaders, [{
				begin_zorder: -10000000,
				end_zorder: 12000,
				shader_info: 'citadel_background_blur_ver',
			}]),
		]),

		[[set(c.paused, true), add(_paused, [c])] |
		 c <- level.chars, c != me, c != _avatar, c.paused = false],

		map([_avatar], add(value.zorder, 20000)),

		spawn('speech_bubble', _avatar.x + 20, _avatar.y + 240, {
			_text: _text,
			zorder: 25000,
			_width: px(250),
			_height: px(200),
		}, [
			set(me._bubble, child),
		]),

		spawn('label', level_width/2, level_height-40, {
			_halign: 'center',
			_valign: 'top',
			_text: ['Click to continue'],
			zorder: 30000,
			alpha: 0,
		}, [
			set(me._click_to_continue_label, child),
		]),
	]",
}
