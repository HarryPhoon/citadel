{
	id: "fireball_effect",
	is_strict: true,

	always_active: true,
	visible_in_game: false,

	properties: {
		_target: { type: "custom_obj" },

		create_particles: "def() ->commands
		set_widgets(me, {
			type: 'particle_system',
			id: 'effect',
			x: 0,
			y: 0,
			shader: 'psystem_shader',
			technique: [{
				visual_particle_quota: 10000,
				material: {
					name: 'star',
					technique: {
						pass: {
							lighting: false,
							depth_write: false,
							depth_check: false,
							fog_override: true,
							texture_unit: {
								texture: 'particles/flare-128x128.png',
								tex_address_mode: 'clamp',
							},
						},
					},
				},

				default_particle_width: 1.0,
				default_particle_height: 1.0,
				renderer: {
					type: 'billboard',
				},

				emitter: [{
					type: 'circle',
					direction: [0,-1,0],
					emission_rate: 500,
					duration: 10,
					time_to_live: {
						type: 'dyn_random',
						min: 2,
						max: 4,
					},

					velocity: 0.6,
					circle_radius: {
						type: 'dyn_random',
						min: 0,
						max: 100,
					},
				}],
				affector: [{
					type: 'jet',
					acceleration: {
						type: 'dyn_random',
						min: 0.1,
						max: 40,
					}
				}, {
					type: 'color',
					time_colour: [{
						time: 0,
						color: [1.0,0.3,0,1],
					}, {
						time: 1,
						color: [1.0,0.0,0,1],
					}, {
						time: 4,
						color: [1.0,0.0,0,1],
					}],
				}]	
			},
			]
		})
		",

		_cancel_emission: "def() ->commands [
			set(_effect.particle_systems[0].techniques[0].emitters, [])
		]",

		_follow_path: "def() ->commands [
			add(_effect.particle_systems[0].techniques[0].affectors,
			    [
				  _effect.create_affector(
				  {
					type: 'black_hole',
					position: [_target.mid_x - mid_x + 20, _target.mid_y - mid_y + 20, 0],
					velocity: 2,
					acceleration: 0.2,
				  }
/*
				  {
					type: 'path_follower',
					path: [[mid_x,mid_y], [(_target.mid_x + mid_x)/2,mid_y], [_target.mid_x,_target.mid_y]],
					time_to_live: 5,
			      }
				  */
				  )
				]
			)
		]",

		_effect: "particle_system_widget <- widgets.effect",
	},

	on_type_updated: "fire_event('create')",

	on_create: "[
		create_particles(),
		schedule(140, bind_command(me._follow_path)),
		schedule(160, bind_command(me._cancel_emission)),
		schedule(200, remove_object(me)),
	]",
}
