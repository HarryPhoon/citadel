{
	id: "login_controller",
	prototype: ["login_controller_base"],
	properties: {
		title: "string :: 'Argentum Age'",
		logo: "string :: 'logo-faith.svg'",

		_offline_account: """AccountDetails :: {
			chat_channels: {},
			collection: map(lib.citadel.get_complete_art_cards(), { id: generate_uuid(), name: value }),
			avatar: "endless-studies.png",
			unlocks: ['CAMPAIGN'],
			campaign_progress: {},
			decks: DeckMap<- get_document('data/default-user-decks.cfg'),
			quests: [],
			complete_quests: [],
			chat_channels: {},
			games_won: 0,
			games_played: 0,
			level: 1.0,

			puzzles_completed: [],
		}""",

		_allow_auto_login: "bool :: MODULE_OPTIONS.test = false",

		start_testing: "def() ->commands
			let msg = {
				type: 'create_game',
				starting_units: [],
				skip_mulligan: true,
				users: [{user: 'test', avatar: 'endless-studies.png', session_id: 1, quests: []}, { user: 'bot', bot_type: 'eval', args: {}, bot_args: {}, bot: true, session_id: 2, avatar: 'goddess.png' }],
			};

			let client = tbs_internal_client();
			let request = tbs_blocking_request(client, msg);
			request.block();

			[
				map(level.chars, remove_object(value)),
				add_object(controller),
			] asserting request.response is map and request.response.type = 'game_created'
			where controller = object_playable('citadel_controller', 0, 0, 0, {
				_mm_client_state: construct('mm_client_state', { username: 'test', session_id: -1, account_info_version: 1, account_info: _offline_account }),
				game_setup_message: msg,
				game_server_address: '',
				game_server_port: 23456,
				session_id: 1,
				game_created: true,
				selected_deck: 'Chosen Ones',
				selected_deck_category: 'starter',
				return_callback: def(bool result, null|class game_state state) ->commands null,
			}),
		",
	},

	events: {
		create: "if(MODULE_OPTIONS.test, schedule(1, ; start_testing()))"
	},
}
