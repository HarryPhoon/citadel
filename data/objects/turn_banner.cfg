{
id: "turn_banner",
is_strict: true,

properties: {
	_text: { type: "string" },
	
	_font_size: 48,
	_font: { type: "string", init: "lib.font.regular_font" },

	_text_area: "canvas().text_extents(_font, _font_size, _text)",

	_vertical_adjust: { default: 0 },

	time_to_live: "int :: max(0, if(permanent, 10000000, starting_delay + 120 - cycle))",

	starting_delay: { type: "int", default: 0 },

	permanent: { default: false },

	hide: "def() ->commands execute(me, remove_object(me))",

	render: "def(int ww, int hh) ->commands
	set(animation, {
		id: 'fbo',
		image: 'fbo',
		x: 0, y: 0, w: ww, h: hh,
		scale: 1, frames: 1,
		fbo: c.render(ww, hh, [
			c.save(),
			c.scale(ww/400.0, hh/132.0),
			c.paint_image('images/dialog-background.png'),
			c.restore(),

			c.save(),
			c.translate(ww/2 - _text_area.width/2, hh/2 - _text_area.y_bearing/2 - _vertical_adjust),
			c.set_font(_font),
			c.set_font_size(_font_size),
			c.text_path(_text),
			c.set_source_rgba(1, 1, 1, 1),
			c.fill(),
			c.restore(),
		]) where c = canvas()
	})
	",
},

on_create: "[
	render(round_to_even(lib.citadel.py(400)), round_to_even(lib.citadel.py(132))),

	set(alpha, 0),

	schedule(starting_delay+20, [
	animate(me, {
		alpha: 255,
	}, {
		name: 'fade',
		duration: 20,
	}),

	animate(me, {
		alpha: 255,
	}, {
		name: 'fade',
		duration: 80,
	}),

	if(not permanent,
		animate(me, {
			alpha: 0,
		}, {
			name: 'fade',
			duration: 20,
			on_complete: remove_object(me)
		}),
	),
	]),
]",


}
