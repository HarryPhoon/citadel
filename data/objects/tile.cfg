{
	is_strict: true,
	"animation": [
		{
			"id": "main",
			"image": "tiles2.png",
			"rect": [1,1,47,29],
			frames: 30,
			frames_per_row: 5,
			duration: 1,
		},
		{
			"id": "forest",
			"image": "tiles2.png",
			"rect": [49,99,94,144],
		},
		{
			"id": "mountain",
			"image": "tiles2.png",
			"rect": [97,99,142,144],
		}
	],
	"id": "tile",
	mouseover_area: [-45,-27,45,27],

	vars: {
		controller: null,
		game: null,
		is_selectable: false,
		loc: [0,0],
		mouseover: false,
		base_y: -1,
		do_highlight: 0,
		child_label: null,
	},

	properties: {
		selectable: { get: "vars.is_selectable", set: "set(vars.is_selectable, value)" },

		destroy_children: "def() if(vars.child_label, remove_object(vars.child_label))",
		destroy: "def() [destroy_children(), remove_object(me)]",

		game_state: {
		  get: "vars.game",
		  set: "[
		    set(vars.game, value),
		    fire_event('update_tile')
		  ]"
		}
	},

	on_spawned: "[set(vars.controller, spawner), set(time_in_animation_delta, 0)]",
	on_enter_anim: "set(y, vars.base_y - (img_h - 20)/2 )",
	on_update_tile: "
	[set(zorder, vars.loc[0]),
	 if(vars.base_y = -1, set(vars.base_y, y)),
	if(vars.game.villages[vars.loc] != null,
	  [
	  destroy_children(),
	  spawn('tile.level_label', mid_x - 14, mid_y - 8, 1, [set(vars.child_label, child), set(child.time_in_animation, vars.game.villages[vars.loc].level + (vars.game.villages[vars.loc].owner + 1)*3)]),

	  set(time_in_animation, 25),
	  if(vars.game.villages[vars.loc].owner != -1,
	     [set(time_in_animation_delta, 0)])],
		 //if not a village
		 if(terrain, [
			set(animation, terrain.type),
			if(terrain.type != 'main', set(mouseover_area, [-45,0,45,50]))
		 ]) where terrain = vars.game.terrain[vars.loc]
		  )]",

	on_click: "[vars.controller.tile_clicked(me)]",
	
	on_mouse_enter: "[set(vars.mouseover, true), vars.controller.mouse_enter_tile(me)]",
	on_mouse_leave: "[set(vars.mouseover, false), vars.controller.mouse_leave_tile(me)]",

	on_process: "if(vars.mouseover, set(brightness, 500),
	                if(selectable, set(brightness, 255 + wave(cycle*12)/10),
							       set(brightness, 255)))",
	
	object_type: [
		{
			id: "level_label",
			properties: {
				destroy: "def() remove_object(me)",
			},
			animation: [
				{
					id: "normal",
					image: "citadel-buildings.png",
					rect: [127,3,136,12],
					duration: 1,
					frames_per_row: 3,
					frames: 9,
					pad: 0,
				}
			],

			zorder: 500,
			on_spawned: "[set(time_in_animation_delta, 0)]",
		}
	],
	
	shader: {
		program: "tile_shader",
		draw: "if(parent, set(uniforms.do_highlight, parent.vars.do_highlight))",
		create: "[set(uniforms.u_tex_map, 0), set(uniforms.do_highlight,0)]",
	},
}
