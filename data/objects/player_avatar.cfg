{
id: "player_avatar",
is_strict: true,

properties: {
	_avatar: { type: "string" },

	_top: { type: "int" },
	_edge: { type: "int" },
	_available_space: { type: "int" },
	_width: { type: "int" },
	_height: { type: "int" },

	_nick: { type: "string" },

	_nick_font_size: 10,

	_nick_area: "canvas().text_extents(lib.citadel.sans_font, _nick_font_size, _nick)",

	_nick_width: "decimal :: 0.4*_width - max(0, _width - _available_space)",
	_nick_right: "decimal :: 0.4*_width",
	_nick_left: "_nick_right - _nick_width",

	_render_key: "[_width, _height, _avatar, facing, _nick_width]",

	render: "def(int ww, int hh) ->commands [
	set(animation, {
		id: 'fbo',
		image: 'fbo',
		x: 0, y: 0, w: ww, h: hh,
		scale: 1, frames: 1,
		fbo: query_cache(global_cache(2), _render_key, c.render(ww, hh, [
			c.save(),
			c.move_to(0*ww, 0*hh),
			c.line_to(0.4*ww, 0*hh),
			c.line_to(1*ww, 0.5*hh),
			c.line_to(0.4*ww, 1*hh),
			c.line_to(0*ww, 1*hh),

			c.clip(),

			c.new_path(),

			c.scale(ww/256.0, hh/512.0),

			c.paint_image('images/avatars/' + _avatar),
			c.restore(),
		] +

		if(_nick_width < _nick_area.width+20, [],
		[
			c.save(),
			c.move_to(0, 0),
			c.line_to(0.4*ww, 0*hh),
			c.line_to((0.4 + 0.6*(40.0/hh))*ww, 20),
			c.line_to(0*ww, 20),

			c.set_source_rgba(0.47, 0.60, 0.54, 0.8),
			c.fill(),
			c.restore(),

			c.save(),
			c.move_to(_nick_left + _nick_width/2 - if(facing = 1, 1, -1) * _nick_area.width/2, _nick_area.height + 4),
			c.set_font(lib.citadel.sans_font),
			c.set_font_size(_nick_font_size),
			c.scale(facing, 1),
			c.text_path(_nick),
			c.set_source_rgba(1, 1, 1, 1),
			c.fill(),
			c.restore(),

		]) + [
			c.save(),
			c.move_to(0.4*ww - 16, 0*hh),
			c.line_to(0.4*ww, 0*hh),
			c.line_to(1*ww, 0.5*hh),
			c.line_to(0.4*ww, 1*hh),
			c.line_to(0.4*ww - 16, 1*hh),
			c.line_to(1*ww - 16, 0.5*hh),

			c.set_source_rgba(0.09, 0.23, 0.25, 1.0),
			c.fill(),
			c.restore(),
		])) where c = canvas()
	})]",
},

on_create: "[
	render(_width, _height),
	set(y, _top),
	if(facing = 1, set(x2, _edge), set(x, _edge)),
]",


}
