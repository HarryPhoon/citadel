{
	"animation": [
		{
			"id": "main",
			"image": "card-silver.png",
			"rect": [0,0,145,203],
			scale: 1
		}
	],
	"id": "card",

	vars: {
		_card_type: null,
		player: null,
		controller: null,
		creature: null,
		discarded: false,
		sent_discard_msg: false,
	},

	on_spawned: "[set(vars.controller, spawner),
		[
			set(red, 127 + 127*school.red),
			set(green, 127 + 127*school.green),
			set(blue, 127 + 127*school.blue),
		]
	] where school = get_document('data/schools.cfg')[card_type.school]",

	on_click: "[debug('click ' + mouse_button),
	 switch(mouse_button,
	  1, vars.controller.card_clicked(me),
	  3, vars.controller.card_right_clicked(me))
	]",

	on_mouse_enter: "vars.controller.mouse_enter_card(me)",
	on_mouse_leave: "vars.controller.mouse_leave_card(me)",

	properties: {
		set_discarded: "def(val) if(val,
		  execute(me, [set(vars.discarded, true), set(alpha, 64)]),
		  execute(me, [set(vars.discarded, false), set(alpha, 255)]))",
		card_type: { get: "vars._card_type", set: "[
	  if(value.creature_object,
	    [spawn('creature', x + if(value.creature_object.sprite_sheet = 'creature_large', 160, 60), y + 60, 1, [set(vars.creature, child), set(child.zorder, zorder+5), set(child.creature_object, value.creature_object)])
		]),
		set(vars._card_type, value), fire_event('init')]" },
	},

	on_init: "[
	    debug('init card: ' + if(vars.player, 'player', 'no player')),
		set_widgets([{
			type: 'rich_text_label',
			width: 120*scale,
			x: if(scale = 1, 14, -45),
			y: if(scale = 1, 126, 148),
			children: card_type.rules_text_widgets(scale)
		},
	  {
		 type: 'rich_text_label',
		 width: if(scale = 1, 132, 320),
		 align: 'right',
		 x: if(scale = 1, 0, -66),
		 y: if(scale = 1, 6, -90),
		 children:
	   map(range(card_type.loyalty_cost),
	       singleton('gui_widgets').resource_image(card_type.school, if(scale = 1, 14, 28)) + {alpha: if(vars.player.resource_level[card_type.school] > index, 96, 255)}) +
		   [
		   	  {
				  type: 'label',
				  color: 'black',
				  size: scale*14,
				  font: card_type.card_font,
				  text: '' + card_type.cost
			  }
		   ]
		
	  }]),

	 if(scale = 1,

	  [textv(me, {text: card_type.name, align: 'left', color: 'black', size: 12, rect: [18, 8, 120, 20], font:'RobotoCondensed-Light'},

		   if(card_type.creature_object != null,
				   {text: 'Creature -- ' + fold(card_type.creature_object.tags, a + ' ' + b, ''), align: 'left', color: 'black', size: 10, rect: [15, 112, 180, 130], font:'RobotoCondensed-LightItalic'},
				   {text: 'Spell' + if(card_type.is_response, ' -- Response', ''), align: 'left', color: 'black', size: 10, rect: [15, 112, 180, 130], font:'RobotoCondensed-LightItalic'},
				   ),
			if(card_type.creature_object != null,
		   {text: card_type.creature_object.attack + '/' + card_type.creature_object.life, align: 'left', color: 'black', size: 14, rect: [110, 178, 40, 30], font:'RobotoCondensed-LightItalic'}))],
	
	  //otherwise scale = 2
	  [textv(me, {text: card_type.name, align: 'left', color: 'black', size: 18, rect: [-48, -80, 300, 20], font:'RobotoCondensed-Regular'},
		   if(card_type.creature_object != null,
				   {text: 'Creature -- ' + fold(card_type.creature_object.tags, a + ' ' + b, ''), align: 'left', color: 'black', size: 14, rect: [-46, 128, 300, 180], font:'RobotoCondensed-Italic'},
				   {text: 'Spell' + if(card_type.is_response, ' -- Response', ''), align: 'left', color: 'black', size: 14, rect: [-46, 130, 300, 180], font:'RobotoCondensed-Italic'},
				   ),
			if(card_type.creature_object != null,
		   {text: card_type.creature_object.attack + '/' + card_type.creature_object.life, align: 'left', color: 'black', size: 18, rect: [156, 262, 40, 30], font:'RobotoCondensed-Italic'}))]
	)]"
}
