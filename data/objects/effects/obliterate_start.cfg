{
	id: "obliterate_start",
	is_strict: true,

	//./anura --utility=build_spritesheet_from_images --scale 50 --row 3 ~/animations/testudo/Testudo\ Animation/Cast\ Frames/0*

	prototype: ["impact_effect_base"],

	animation: [

	{
		id: "start",
		image: "effects/obliterate-start.png",
		x: 2, y: 2, w: 320, h: 244,
		feet_x: 160,
		feet_y: 244,
		frames: 8,
		frames_per_row: 4,
		pad: 3,
		duration: 3,
		no_remove_alpha_borders: true,
		force_no_alpha: true,
	},

	{
		id: "flame",
		image: "effects/obliterate-flame.png",
		x: 2, y: 2, w: 194, h: 472,
		feet_x: 97,
		feet_y: 472,
		frames: 3,
		frames_per_row: 3,
		pad: 3,
		duration: 3,
		no_remove_alpha_borders: true,
		force_no_alpha: true,
	},
	
	],

	events: {
"+end_start_anim": "[
    set(animation, 'flame'),

    //make sure mid_x and y2 are the same as before the animation changed
    set(mid_x, mid_x),
    set(mid_y, mid_y - int(scale*225)),
]",
"+end_flame_anim": "set(animation, 'flame')",
create: "[

//Calculate a scale for this effect based on the size of the
//tiles on the map.
[
set(scale, 0.50 *(tile_height/140.0)),

//Adjust the position of the object upwards. It is spawned with
//mid_y being equal to the tile's mid_y, but we want it higher.
add(mid_y, -int(tile_height*0.3)),
]
where tile_height = if(tile, tile.hex_height, lib.citadel.py(128)) where tile = find(level.chars, value is obj tile),

schedule(40, ;
    spawn('obliterate_destroyed', {
         mid_x: me.mid_x,
         mid_y: me.mid_y + int(me.scale*180),
        zorder: me.zorder+1, //put it on top of us

		scale: me.scale,
    })
),

schedule(60,
    animate(me, {
        alpha: 0,
    }, {
        duration: 60,
        on_complete: remove_object(me),
    })
)

]",
}

}
