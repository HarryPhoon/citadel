{
	id: "ember_effect",
	is_strict: true,

	zorder: -400,

	hidden_in_game: true,

	properties: {
		screen_width: "int :: level.dimensions[2]",
		screen_height: "int :: level.dimensions[3]",

		hdirection: { type: "decimal", default: 1.0 },

		particle_effects: "map :: {
		    id: 'ember',
		    camera: { name: 'psc_cam', type: 'orthogonal', ortho_window: [0, screen_width, 0, screen_height] },
		    scale_velocity: 1,
		    technique: [{
		        position: [mid_x,mid_y],
		        ignore_global_model: true,
		        visual_particle_quota: 3000,
		        texture: 'ember.png',
		        blend: ['src_alpha', 'one_minus_src_alpha'],
		        depth_write: false,
		        depth_check: false,
		        default_particle_width: lib.citadel.py(8),
		        default_particle_height: lib.citadel.py(8),
		        renderer: {
		            type: 'billboard',
		        },
		        emitter: [{
		            type: 'box',
		            emission_rate: 12.0,
                    position: [0, 0, -0.5],
					box_width: int(screen_width*1.4),
					box_height: screen_height/30,
                    direction: [hdirection*0.0, -1.0, 0],
                    repeat_delay: { type: 'dyn_random', min: 1, max: 3.5 },
		            time_to_live: 1.4,
		            velocity: { type: 'dyn_random', min: lib.citadel.py(34*2), max: lib.citadel.py(124*2), },
		            angle: { type: 'dyn_random', min: 0.0, max: 0.0 },
		        },
			],
		        affector: [{
		            type: 'color',
		            time_colour: [{time: 0, color: [1, 1, 1, 1.0]}, {time: 0.5, color: [1, 1, 1, 1.0]}, {time: 1, color:[0,0,0,0]}],
		        },{
		            type: 'jet',
		            acceleration: 1.1,
		        },{
					type: 'linear_force',
					direction: [1,0,0],
					force: 10.0,
				}],
		    }],

		}",

		_wind_force: {
			type: "decimal",
			set: "[
				set(_data, value),
				set(particles.systems[0].techniques[0].affectors[2].node, {force: { type: 'dyn_curved_linear', control_point: [[0,value/4], [1,value]] }, direction: [1,0,0]}) asserting particles,
			]",
			get: "_data",
			default: 0.0,
		},

		wind_gust: "def(decimal force=80.0) ->commands [
		map(range(10), schedule(value, add(_wind_force, force))),
		map(range(10), schedule(10+value, add(_wind_force, -force))),
		]
		",
	},

	timer_frequency: 10,

	on_timer: "
		wind_gust(1d6*1d6*1d6)
	",

	on_create: "
	set(particles, particle_effects)
	",

	on_type_updated: "fire_event('create')",
}
