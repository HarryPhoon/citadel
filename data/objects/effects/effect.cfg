{
	id: "effect",
	is_strict: true,

	animation: [{
		id: "noise",
		x: 0,
		y: 0,
		w: 512,
		h: 512,
		image: 'perlin-noise.png',
	}],

	properties: {
		myalpha: "decimal :: 0.5",
		mercenary: { type: "texture_object", init: "get_texture('portraits/mercenary.png')" },
	},

	shader: {

		fragment: """
		uniform sampler2D u_anura_tex_map;
		uniform sampler2D u_property_mercenary;
		uniform float u_anura_cycle;
		uniform float u_property_myalpha;
        varying vec2 v_texcoord;
		
		void main()
		{
			vec2 coord = v_texcoord;

			coord[0] = floor(coord[0]*100.0)/100.0;
			coord[1] = floor(coord[1]*100.0)/100.0;

			float color = texture2D(u_anura_tex_map, coord + vec2(u_anura_cycle*0.002, 0.0))[0];
			vec2 rot_coord = vec2(coord[1], coord[0]);
			float rot_color = texture2D(u_anura_tex_map, rot_coord + vec2(u_anura_cycle*0.002, 0.0))[0];

			float diff = 1.0 - abs(color - rot_color);

			vec4 m_color = texture2D(u_property_mercenary, coord);

			gl_FragColor = vec4(diff, diff, diff, u_property_myalpha);
			gl_FragColor = mix(gl_FragColor, m_color, 0.5);
		}
		""",
	},
}
