{
	id: "news_updates_pane",
	is_strict: true,

	properties: {
		title_controller: { type: "obj title_controller" },
		render: "def() ->commands [
		set(animation, lib.citadel.render_frame(c, ww, hh,
		[
			c.set_operator('SOURCE'),
			c.rectangle(0,0,ww,hh),
			c.set_source_rgba(0.1,0.1,0.1,0.5),
			c.fill(),

			c.set_operator('OVER'),
			c.set_line_width(lib.citadel.dpy(1.0)),
			c.rectangle(0,0,ww,hh),
			c.set_source_rgba(0.22,0.25,0.29,1),
			c.stroke(),

			c.move_to(0,lib.citadel.py(28)),
			c.line_to(ww,lib.citadel.py(28)),
			c.stroke(),

			c.set_source_rgba(1,1,1,1),

			map(fragments, [
				c.save(),
				c.translate(lib.citadel.py(8), lib.citadel.py(7)),
				value.path,
				c.fill(),
				c.restore(),
			])

			where fragments = c.markup_text(q(<font size='12'>News Updates</font>), { width: lib.citadel.py(1000), scale: lib.citadel.dpy(1.0) }),

		]))
		] where c = canvas()
		  where ww = _width
		  where hh = _height",

		_news: { type: "custom_obj|null" },

		create_objects: "def() ->commands [
/*
			spawn('xhtml_controller', {
				x: x,
				y: 0,
				document: {
					xhtml: 'data/test1.xhtml',
					layout_size: [0,lib.citadel.py(30),_width,_height-lib.citadel.py(34)],
				}
			})
			*/

			remove_object(_news),

			spawn('news_controller', {
				zorder: zorder+1,
				x: x+lib.citadel.py(0),
				y: y+lib.citadel.py(24),
				_width: _width - lib.citadel.py(8),
				_height: _height - lib.citadel.py(28),
				items: [map|string]<- get_document('data/news.cfg'),
			}, [
				set(_news, child),
			]),
		]",

		_width: "int :: lib.citadel.py(380)",
		_height: "int :: lib.citadel.py(274)",
	},

	on_create: "render(); create_objects()",

	on_being_removed: "remove_object(_news)",

	on_type_updated: "fire_event('create')",
}
