{
	id: "combo_label_controller",
	is_strict: true,
	hidden_in_game: true,

	properties: {
		xpos: { type: "int" },
		ypos: { type: "int" },

		items: { type: "[string]" },

		_font_size: { type: "int" },

		click_handler: { type: "function(int)->commands" },

		_labels: { type: "[obj combo_label]", default: [] },

		grouping: { type: "string", default: "combo" },

		_handle_click: "def(obj combo_label lb) ->commands
		[
			set(selected_index, lb.index),
			click_handler(lb.index),
		]
		",

		selected_index: {
			type: "int",
			set: "[
				set(_data, value),
				map(_labels, set(value.selected, context.value = value.index)),
			]",
			default: 0,
		},

		position_items: "def() ->commands
		(
		let xx = xpos - ww/2 - lib.citadel.py(6);
		map(_labels, ; set(value.x, xx); add(xx, value.img_w); fire_event(value, 'create'))
		)
		where ww = sum(map(_labels, value.img_w))
		",
	},

	on_create: "
		map(items,
			spawn('combo_label', {
				y2: ypos,
				_font_size: _font_size,
				_text: value,
				left_rect: lib.citadel.py(-6),
				right_rect: if(index+1 = size(items), -lib.citadel.py(6)),
				index: index,
				grouping: grouping,
				zorder: zorder,
				click_handler: me._handle_click,
			}, [
				add(_labels, [child])
			])
		);

		set(selected_index, selected_index);

		position_items()
	",
}
