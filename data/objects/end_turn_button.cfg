{
id: "end_turn_button",
is_strict: true,

properties: {
	_text: { type: "string" },
	_phase: { type: "string" },

	text_area: "canvas().text_extents(lib.citadel.sans_font, _font_size, _text)",
	phase_area: "canvas().text_extents(lib.citadel.sans_font, _phase_font_size, _phase)",

	highlight: { default: false },

	_render_key: "[_text, _phase, _color]",
	_last_render_key: { type: "any" },

	_color: "if(_mouseover or highlight and level.cycle%50 < 25,
	            [1, 0.25, 0.12],
	            [0.65, 0.25, 0.12])",

	_font_size: 16,
	_phase_font_size: 10,

	_mouseover: { default: false },

	_controller: { type: "obj citadel_controller" },

	render: "def(int ww, int hh) ->commands [
	set(_last_render_key, _render_key),
	set(animation, {
		id: 'fbo',
		image: 'fbo',
		x: 0, y: 0, w: ww, h: hh,
		scale: 1, frames: 1,
		fbo: query_cache(global_cache(3), _render_key, c.render(ww, hh, [
			c.save(),
			c.scale(ww, hh),
			c.move_to(0, 0.2),
			c.line_to(0.85, 0.2),
			c.line_to(1, 0.8),
			c.line_to(0, 0.8),
			c.line_to(0, 0.2),

			c.set_source_rgba(_color[0], _color[1], _color[2], 1),
			c.fill(),
			c.restore(),

			c.save(),
			c.translate(ww - text_area.width - ww*0.2, hh/2 + text_area.height/2),
			c.set_font(lib.citadel.sans_font),
			c.set_font_size(_font_size),
			c.text_path(_text),
			c.set_source_rgba(1, 1, 1, 1),
			c.fill(),
			c.restore(),

			c.save(),

			c.translate(ww*0.8 - phase_area.width, hh*0.18),
			c.set_font(lib.citadel.sans_font),
			c.set_font_size(_phase_font_size),
			c.text_path(_phase),

			c.set_source_rgba(1, 1, 1, 1),
			c.fill(),

			c.restore(),

		]) where c = canvas())
	})
	]",
},

on_create: "[
	render(200, 80),
]",

on_process: "[
	if(_last_render_key != _render_key, render(200, 80))
]",

on_mouse_enter: "[set(_mouseover, true), fire_event('create')]",
on_mouse_leave: "[set(_mouseover, false), fire_event('create')]",

on_click: "_controller.end_turn()",

}
