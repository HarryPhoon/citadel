{
	id: "crawl_status_display",
	is_strict: true,

	properties: {
		dimensions: "[int,int] :: [lib.gui.py(256), lib.gui.py(32)]",

		state: { type: "class crawl_state" },

		_gold_display: { type: "null|int" },
		_player_life_display: { type: "null|int" },
		_player_max_life_display: { type: "null|int" },

		move_value_toward: "def(int|null current, int target) ->int
			if(current = null, target, target > current, (int<-current)+1, target < current, (int<-current)-1, int<- current)
		",

		render: "def() ->commands
		[
			set(_gold_display, move_value_toward(_gold_display, state.player_gold)),
			set(_player_life_display, move_value_toward(_player_life_display, state.player_life)),
			set(_player_max_life_display, move_value_toward(_player_max_life_display, state.player_max_life)),
		]

		;
		set(animation, {
			id: 'fbo',
			image: 'fbo',
			x: 0, y: 0, w: ww, h: hh,
			scale: 1.0,
			frames: 1,
			duration: -1,
			fbo: c.render(ww, hh, [

				c.rectangle(0, 0, ww, hh),
				c.set_source_color('gray'),
				c.fill(),

				c.translate(lib.gui.py(8), lib.gui.py(8)),

				c.set_source_color('black'),

				map(fragments, [
					c.save(),
					value.path,
					c.fill(),
					c.restore(),
				])
			where fragments = c.markup_text(sprintf(q(<font size='18'>Gold: %d</font>), _gold_display),
			                                {width: lib.gui.py(256), scale: 1.0}),

				c.translate(lib.gui.py(120), lib.gui.py(0)),

				map(fragments, [
					c.save(),
					value.path,
					c.fill(),
					c.restore(),
				])
			where fragments = c.markup_text(sprintf(q(<font size='18'>Life: %d/%d</font>), _player_life_display, _player_max_life_display),
			                                {width: lib.gui.py(256), scale: 1.0}),

			])
		}
		)
		where ww = dimensions.x
		where hh = dimensions.y
		where c = canvas()
		",
	},

	events: {
		create: "render()",
		type_updated: "render()",

		process: "if(cycle%2 = 0 and [_gold_display, _player_life_display, _player_max_life_display] != [state.player_gold, state.player_life, state.player_max_life], render())",
	},
}
