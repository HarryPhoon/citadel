{
	id: "crawl_lobby",
	is_strict: true,
	hidden_in_game: true,

	properties: {
		title_controller: { type: "obj title_controller" },
		exit_to_titlescreen: "def() ->commands
		[

			lib.sound.play_sound(me, 'interface/leave-library'),

			title_controller.transition_screen(
			; [
				set(title_controller.screen_mode, enum titlescreen),
				remove_object(title_controller),
				add_object(title_controller);
				title_controller.show_ui()
			],
			[enum transition_after_zoom, enum transition_all_zorders]
			),

		]",

		venture_forth: "def() ->commands
		[
			title_controller.record_stats({ table: 'crawl_start', schools: _chosen_schools }),
			set(lib.citadel.crawl_state, crawl_state),

			lib.sound.play_sound(me, 'interface/enter-library'),

			title_controller.transition_screen(
			; [
				spawn('crawl_controller', {
					x: 20,
					y: 20,
					controller: title_controller,
					state: crawl_state,
				}, [
				])
			],
			[enum transition_after_zoom, enum transition_all_zorders, enum transition_zoom_in]
			),
		]
		where crawl_state = construct('crawl_state', {
			schools: _chosen_schools,
		})
		",

		screen_width: "int :: level.dimensions[2]",
		screen_height: "int :: level.dimensions[3]",

		_widgets: { type: "[custom_obj]", default: [] },

		_chosen_schools: { type: "[int]", default: [] },
		_chosen_school_icons: { type: "[obj game_icon]", default: [] },

		select_school: "def(int n) ->commands
		if(size(_chosen_schools) < 3,
		[
			spawn('game_icon', {
				mid_x: screen_width/2 + (size(_chosen_schools)-1)*lib.gui.py(160),
				mid_y: lib.gui.py(500),
				icon: lib.citadel.school_info[n].icon,
				draw_color: [0.0,0.0,0.0,1.0],
				additional_icons: ['school-hex.svg'],
				additional_colors: [lib.citadel.school_info[n].color + [1.0]],
				force_no_alpha: true,
				size: lib.gui.py(96),
				use_absolute_screen_coordinates: true,
			}, [
				add(_widgets, [child]),
				add(_chosen_school_icons, [child]),
			]),

			add(_chosen_schools, [n]),

			if(size(_chosen_schools) = 2,
				spawn('button_controller', {
					text: 'Venture Forth',
					x2: screen_width - lib.gui.py(20),
					y2: screen_height - lib.gui.py(20),
					button_width: lib.gui.py(160),
					button_height: lib.gui.py(40),
					on_click: venture_forth,
					use_absolute_screen_coordinates: true,
					color_scheme: lib.citadel.library_color_scheme,
				}, [
					add(_widgets, [child]),
				])
			)
		]
		)
		",

		show_gui: "def() ->commands
		[

			spawn('text_area', {
				x: screen_width/2 - lib.gui.py(200),
				y: lib.gui.py(20),
				text_width: lib.gui.py(400),
				_text: q(<font size='18'>You are a <i>Shaper</i>, summoned by a group of villagers who find their town under threat by malevolent forces. The summoning has stripped you of your powers, and you are left with only the peasants and their pitchforks. You try to remember the powers you once served. Choose three amulets below. They will determine the powers you gain. You may choose the same amulet multiple times, or you may choose all differing amulets.</font>),
			}, [
				add(_widgets, [child]),
			]);

			spawn('text_area', {
				x: screen_width - lib.gui.py(300),
				y: lib.gui.py(400),
				text_width: lib.gui.py(280),
				_text: q(<font size='24' weight='70'>Crawl Mode&emdash;Rules</font>
<font size='18'>You will start with a tiny deck of ten basic cards. As you prevail in encounters you will be able to add cards to your deck and refine it. You will begin with 80 life, but you will not heal between fights. When your deck is exhausted you shuffle it and redraw it with no penalty. In this mode, you must discard all cards every turn. Good luck!</font>),
			}, [
				add(_widgets, [child]),
			]);

			map(range(1,6),

				spawn('game_icon', {
					mid_x: screen_width/2 + (index-2)*lib.gui.py(80),
					mid_y: lib.gui.py(300),
					icon: lib.citadel.school_info[value].icon,
					draw_color: [0.0,0.0,0.0,1.0],
					additional_icons: ['school-hex.svg'],
					brightness: 255,
					additional_colors: [lib.citadel.school_info[value].color + [1.0]],
					force_no_alpha: true,
					size: lib.gui.py(48),
					click_handler: def(obj game_icon icon) ->commands select_school(value),
					mouse_enter_handler: def(obj game_icon icon) ->commands set(icon.brightness, 512),
					mouse_leave_handler: def(obj game_icon icon) ->commands set(icon.brightness, 255),
					use_absolute_screen_coordinates: true,

				}, [
					add(_widgets, [child]),
				])

			),

			spawn('button_controller', {
				text: 'Back',
				x: lib.gui.py(20),
				y2: screen_height - lib.gui.py(20),
				button_width: lib.gui.py(120),
				button_height: lib.gui.py(40),
				on_click: exit_to_titlescreen,
				use_absolute_screen_coordinates: true,
				color_scheme: lib.citadel.library_color_scheme,
			}, [
				add(_widgets, [child]),
			])

		]
		",
	},

	events: {
		create: "title_controller.record_stats({ table: 'enter_crawl_lobby' }); show_gui()",
		being_removed: "[
			map(_widgets, remove_object(value)),
			set(_widgets, []),
		]",
	},
}
