{
	id: "title_controller",
	is_human: true,
	hitpoints: 20,
	editor_info: { category: "player" },
    hidden_in_level: true,
    use_absolute_screen_coordinates: true,

    vars: {
		client: null,
		session_id: -1,
		
		state: null,
    },
    tmp: {
        username: "@eval USERNAME",
    },

    consts: {
		button_width: 220,
		button_height: 35,
    },
	
	is_strict: true,
	
    properties: {
		do_fast_play: "[
			set(vars.client, cl),
			set(vars.session_id, sid),
			tbs_send(cl, {type: 'create_game', game_type: 'citadel', users: [{user: 'a', session_id: sid}, {user: 'b', bot_type: 'mono-food', bot: true, session_id: 1d30000}]})] 
				where cl = tbs_client('localhost', 23456), sid = 1d30000
		",
		
		error_text: "def(txt) set(me.widgets.error_text.text, txt)",
		
		draw_menu: "def(wwidth, hheight) set(me.widgets, {
			type: 'dialog',
			id: 'background_dlg',
			background_alpha: 255,
			rect: [0, 0, wwidth, hheight],
			children: [
				{ type: 'image', image: 'title2.png', image_width: calc_w, image_height:350, x: (wwidth-calc_w)/2, y: 20 },
				{
					type: 'dialog',
					id: 'dlg',
					background_frame: 'empty_window',
					background_alpha: 20,
					rect: [wwidth/16, hheight/2+40, 14*wwidth/16, hheight/2-50],
					cursor: [35, 20],
					children: [
						{
							type: 'grid',
							columns: 2,
							column_widths: 6*wwidth/16,
							column_alignments: 'center',
							children: [
								{
									type: 'grid',
									columns: 1,
									column_widths: 6*wwidth/16,
									column_alignments: 'center',
									children: [
										{type: 'button', id:'campaign_button', label:{type: 'label', size: 16, text: 'Play Campaign (single player)', font: 'RobotoCondensed-Regular', color: 'antique_white'}, enabled: false, wh:[consts.button_width, consts.button_height], on_click: 'debug(q(clicked play campaign))' },
										{type: 'button', id:'puzzle_button', label:{type: 'label', size: 16, text: 'Play Puzzle (single player)', font: 'RobotoCondensed-Regular', color: 'antique_white'}, enabled: false, wh:[consts.button_width, consts.button_height], on_click: 'debug(q(clicked play puzzle))' },
										{type: 'button', id:'mplobby_button', label:{type: 'label', size: 16, text: 'Play Multiplayer Game', font: 'RobotoCondensed-Regular', color: 'antique_white'}, wh:[consts.button_width, consts.button_height], on_click: 'debug(q(clicked mp game))' },
										{type: 'button', id:'fastplay_button', label:{type: 'label', size: 16, text: 'Fast Play (single player)', font: 'RobotoCondensed-Regular', color: 'antique_white'}, wh:[consts.button_width, consts.button_height], on_click: 'do_fast_play' },
									],
								},
								{
									type: 'grid',
									columns: 1,
									column_widths: 6*wwidth/16,
									column_alignments: 'center',
									children: [
										{type: 'button', id:'deckbuilder_button', label:{type: 'label', size: 16, text: 'Deck Builder', font: 'RobotoCondensed-Regular', color: 'antique_white'}, enabled: false, wh:[consts.button_width, consts.button_height], on_click: 'debug(q(clicked deck builder))' },
										{type: 'button', id:'botvsbot_button', label:{type: 'label', size: 16, text: 'Bot vs. Bot', font: 'RobotoCondensed-Regular', color: 'antique_white'}, enabled: false, wh:[consts.button_width, consts.button_height], on_click: 'debug(q(clicked bot vs bot))' },
										{type: 'label', text:''},
										{type: 'label', text:''},
									],
								},
							],
						},
						{
							type: 'grid', 
							columns: 1,
							row_height: 20,
							column_widths: 12*wwidth/16,
							column_alignments: 'left',
							children: [
								{type: 'label', id: 'error_text', size:20, text: '', font: 'RobotoCondensed-Bold', color: 'red'},
							],
						},
					],
				},
			],            
		}) where calc_w = if(wwidth > 750, 750, wwidth)",
    },
      
    on_create: "draw_menu(SCREEN_WIDTH, SCREEN_HEIGHT)",
	on_window_resize: "draw_menu(width, height)",
	
	on_process: "if(vars.client, tbs_process(vars.client))",
    
    on_connection_error: "error_text('CONNECTION ERROR: ' + error)",
    
	on_connection_success: "error_text(null)",
	
	on_message_received: "if(message.type = 'game_created', 
		teleport('level1.cfg', '', 'iris', playable) where playable = object_playable('citadel_controller', 512, 384, 0, {session_id: vars.session_id, game_created: true}),
		error_text('UNKNOWN MESSAGE RECIEVED: ' + message.type)
	)",
	
	animation: {
		id: "normal",
		image: "effects/particles.png",
		x: 86,
		y: 73,
		w: 28,
		h: 28,
		collide: [0,0,28,28],
		frames: 1,
		duration: 1000,
	},
}
