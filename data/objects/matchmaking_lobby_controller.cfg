{
id: "matchmaking_lobby_controller",
next_animation: "'normal'",
is_human: true,
is_strict: true,
always_active: true,
hidden_in_game: true,


properties: {
	client: { type: "object" },
	_session_id: -1,
	_messages_in_flight: 0,

	selected_deck: { type: "string" },
},

on_create: "[
	tbs_send(client, { type: 'matchmake', user: USERNAME }),
	add(_messages_in_flight, 1),
	set_widgets([{
		type: 'label',
		text: 'Waiting for opponent...',
		id: 'status_label',
		x: level.dimensions[2]/2,
		y: level.dimensions[3]/2,
		size: 48,
		color: 'white'
	}])
]",

on_process: "[
	if(_messages_in_flight = 0, [
		tbs_send(client, { type: 'request_updates', session_id: _session_id }) asserting _session_id != -1,
		add(_messages_in_flight, 1),
	]),

	tbs_process(client),
]",

on_message_received: "[
 add(_messages_in_flight, -1),
 switch(message.type,
  'matchmaking_queued', [
  	debug('queued with session: ' + message.session_id),
	set(client, tbs_client(TBS_SERVER_ADDRESS, TBS_SERVER_PORT,
						   int<- message.session_id)),
	set(_session_id, int<- message.session_id),
  ],

  'match_made', [
    teleport('level1.cfg', '', 'fade',
  	object_playable('citadel_controller', 336, 372, 0, {
			game_server_address: if(message.host, string<- message.host, TBS_SERVER_ADDRESS),
			game_server_port: if(message.port, int<- message.port, TBS_SERVER_PORT),
			session_id: _session_id,
			selected_deck: me.selected_deck,
			game_created: true,
			return_callable: def(bool outcome) ->commands teleport('titlescreen.cfg', '', 'fade', object_playable('title_controller', 0, 0, 0))
	}))
  ],
  
  debug('got message ' + message.type)
)]
  where message = map<- arg.message
",

animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 86,
	y: 73,
	w: 28,
	h: 28,
	collide: [0,0,28,28],
	frames: 1,
	duration: 1000,
},

}
