{
id: "crypt_library_display",
is_strict: true,

properties: {
	_text: { type: "string" },
	items: { type: "[string]" },
	num_items: "int :: size(items)",
	_width: { type: "int" },
	_height: { type: "int" },

	is_crypt: { type: "bool" },
	player_index: { type: "int" },

	_font: { type: "string", init: "lib.font.regular_font" },
	_font_size: { default: 18 },

	highlight: { default: false, set: "if(_data != value, [set(_data, value), fire_event('create')])" },

	px: "def(int pixels) ->int int(pixels*(_height/28.0))",

	render: "def(int ww, int hh) ->commands [
	set(animation, 
	lib.citadel.render_frame(c, ww, hh, [
		c.rectangle(0, 0, ww, hh),
		if(highlight, c.set_source_rgba(0, 0, 0, 1),
		              c.set_source_rgba(1, 1, 1, 1)),
		c.fill(),

		c.translate(0, px(20)),

		c.set_font(_font),
		c.set_font_size(px(_font_size)),
		if(highlight, c.set_source_rgba(1, 1, 1, 1),
		              c.set_source_rgba(0, 0, 0, 1)),
		c.text_path(_text),
		c.fill(),

		c.translate(ww - c.text_extents(_font, px(_font_size), str(num_items)).width - 4, 0),
		c.text_path(str(num_items)),
		c.fill(),
	]) where c = canvas(),
	),
	]",
},

on_create: "[
	render(round_to_even(_width), round_to_even(_height)),
	set(x, x),
	set(y, y),
]",

on_mouse_enter: "[
	if(ctrl, ctrl.mouse_enter_crypt_library_display(me))
] where ctrl = find(level.chars, value is obj citadel_controller)",

on_mouse_leave: "[
	if(ctrl, ctrl.mouse_leave_crypt_library_display(me))
] where ctrl = find(level.chars, value is obj citadel_controller)",

}
