{
id: "level_display",
is_strict: true,

properties: {
	lvl: { type: "int" },

	school: { type: "int" },

	player_num: { type: "int" },

	order: { default: -1 },

	update_object: "def(int new_lvl) ->commands
	if(new_lvl != lvl, [
		set(me.lvl, new_lvl),
		fire_event(me, 'update'),
	]
	)
	",

	_font_size: "int :: lib.citadel.py(16)",

	_bg_color: "[decimal,decimal,decimal] :: [[0,0,0], [0.85,0.56,0.14], [0.71,0.32,0.28],[0.49,0.65,0.55],[0.40,0.24,0.30],[0.08,0.37,0.40]][school]",

	render: "def(int ww, int hh) ->commands [
	set(animation, {
		id: 'fbo',
		image: 'fbo',
		x: 0, y: 0, w: ww, h: hh,
		scale: 1, frames: 1,
		fbo: c.render(ww, hh, [
			c.save(),
			c.scale(ww, hh),
			c.move_to(0.2, 0.5),
			c.line_to(0.2 + 0.25*0.8, 0),
			c.line_to(0.2 + 0.75*0.8, 0),
			c.line_to(1, 0.5),
			c.line_to(0.2 + 0.75*0.8, 1),
			c.line_to(0.2 + 0.25*0.8, 1),

			c.set_source_rgba(_bg_color[0], _bg_color[1], _bg_color[2], 1),
			c.fill(),

			c.restore(),

			c.save(),

			c.translate(lib.citadel.py(18), lib.citadel.py(2)),
			c.scale(0.12*lib.citadel.py(500)*0.001),
			c.draw_svg('images/icons/school-' + str(SCHOOL_NAMES[school]) + '.svg', 512, 512),

			c.restore(),

			c.save(),

			c.set_font(lib.font.bold_font),
			c.set_font_size(_font_size),
			c.translate(lib.citadel.py(28), lib.citadel.py(23)),
			c.text_path(str(lvl)), 
			c.set_source_rgba(1, 1, 1, 1),
			c.fill(),

			c.restore(),

		]) where c = canvas(),
	}),
	]",
},

on_update: "[render(lib.citadel.py(55), lib.citadel.py(33))]",
on_type_updated: "fire_event('update')",

on_show_tooltip: "
	  spawn('tip_dialog', min(mid_x + 180, level.dimensions[2] - 140), mid_y, {
	    _title: lib.citadel.school_info[school].name,
		_width: 280,
		_height: 140,
		_has_close: false,
		_delay_widgets: 20,
		alpha: 0,
		_tip: {
			key: 'tip',
			text: 'Loyalty ' + str(lvl) + ': ' + lib.citadel.school_info[school].name + ' spells you cast and heros you summon have their difficulty cost reduced by ' + str(lvl) + '.',
			targets: [me],
		},
		zorder: 10000,
	  }, [
	  	ctrl.set_tooltip(child),
		animate(child, {
			alpha: 255,
		}, {
			duration: 20,
		}),
	  ])
		where ctrl = obj citadel_controller <- arg.controller
",
}
