{
id: "creature_in_citadel",
is_strict: true,

properties: {
	_creature: { type: "class creature" },

	render: "def(int ww, int hh) ->commands [
	set(animation, {
		id: 'fbo',
		image: 'fbo',
		x: 0, y: 0, w: ww, h: hh,
		scale: 1, frames: 1,
		fbo: c.render(ww, hh, [
			c.save(),
		] + outline + [
			
			c.set_source_rgba(0.5, 0, 0, 1),

			c.fill()
		] +

		if(portrait = null, [],
		outline + [
			c.clip(),
			c.new_path(),

			c.scale(portrait_scale, portrait_scale),

			c.translate((c.image_dim('images/portraits/' + portrait)[0]*portrait_scale - w), portrait_scale*90.0),
			c.paint_image('images/portraits/' + portrait),

			c.restore(),
		]) where portrait = string|null<- if(_creature.base_card, _creature.base_card.portrait, null)
		   where portrait_scale = 0.2
		   where outline = [

			c.move_to(ww*0.2, hh*0.5),
			c.line_to(ww*(0.2 + 0.25*0.8), 0),
			c.line_to(ww*(0.2 + 0.75*0.8), 0),
			c.line_to(ww*1, hh*0.5),
			c.line_to(ww*(0.2 + 0.75*0.8), hh*1),
			c.line_to(ww*(0.2 + 0.25*0.8), hh*1),
		   ]
	)
	}) where c = canvas(),
	]",
},

on_create: "[render(110, 66)]",

}
