{
	id: "recent_games_dialog",
	is_strict: true,
	zorder: 10000,

	properties: {
		render: "def() ->commands [
		set(animation, lib.citadel.render_frame(c, ww, hh,
		[
			c.set_source_rgba(0.2, 0.2, 0.2, 1.0),
			c.rectangle(0, 0, ww, hh),
			c.fill(),
		])) where c = canvas()
		    where ww = round_to_even(lib.citadel.py(800))
		    where hh = round_to_even(lib.citadel.py(600))
		]",

		create_objects: "def() ->commands [
			spawn('button_controller', {
				x: x2 - lib.citadel.py(150),
				y: y2 - lib.citadel.py(50),
				button_width: lib.citadel.py(140),
				button_height: lib.citadel.py(40),
				_font_size: lib.citadel.py(24),
				text: 'Close',
				on_click: me.close_dialog,
				zorder: me.zorder+10,
			})
		]",

		close_dialog: "def() ->commands [
			remove_object(me),
		]",

		update_games: "def() ->commands [
		]",
	},

	on_create: "[set(c.paused, true) | c <- level.chars, c != me, not c is obj matchmaking_base]; render(); create_objects()",
	on_type_updated: "fire_event('create')",

	on_being_removed: "map(level.chars, set(value.paused, false)); map(spawned_children, remove_object(value))",
}
