{
	id: "campaign_tile",
	is_strict: true,

	properties: {
		color: { type: "[decimal,decimal,decimal]" },
		hex_width: "int :: round_to_even(hex_height*1.3)",
		hex_height: "int :: lib.citadel.px(78)",
		hex_indent: "int :: hex_width - hex_height",
		hex_reverse_indent: "int :: hex_width - hex_indent",

		controller: { type: "obj story_campaign_controller" },

		loc: { type: "[int,int]" },

		selected: { type: "bool", default: false },
		highlight: { type: "bool", default: false, set: "[set(_data, value), set(brightness, if(value, 512, 255))]" },

		render_tile: "def() ->Animation
			query_cache(global_cache(16), [color], lib.citadel.render_frame(c, hex_width, hex_height, [
				c.set_source_rgba(color[0], color[1], color[2], 1.0),

				outline,

				c.fill(),
/*
				c.translate(0.1*hex_width, 0.1*hex_height),
				c.set_source_rgba(1, 1, 1, 1),
				c.set_line_width(1),
				c.scale(0.8),
				outline,
				c.stroke(),
*/
			] where outline = [
				c.move_to(hex_indent, 0),
				c.line_to(hex_reverse_indent, 0),
				c.line_to(hex_width, hex_height/2),
				c.line_to(hex_reverse_indent, hex_height),
				c.line_to(hex_indent, hex_height),
				c.line_to(0, hex_height/2),
				c.line_to(hex_indent, 0),
			]) where c = canvas()
			)
		",
	},

	on_create: "set(animation, render_tile())",

	on_mouse_enter: "
	[
	 [[set(c.highlight, c.loc in path), set(c.selected, c = me)] | c <- level.chars, c is obj campaign_tile],

	 set(controller.current_loc_mouseover, loc),

	]
	
	 where path = if(player, controller.get_path(player.loc, loc)) or []
	 where player = find(level.chars, value is obj campaign_player_avatar)",
	
	on_mouse_leave: "
	if(selected,
	[
	 [[set(c.highlight, false), set(c.selected, false)] | c <- level.chars, c is obj campaign_tile],
	 if(controller.current_loc_mouseover = loc, set(controller.current_loc_mouseover, null)),
		
	])
	",
	
	on_click: "
	switch(mouse_button,
		1, controller.tile_clicked(loc),
		3, controller.tile_right_clicked(loc),
		null) where mouse_button = int<- arg.mouse_button
	",
}
