{
	id: "askioski_campaign_controller",
	prototype: ["story_campaign_controller"],

	is_human: true,

	properties: {
		begin_campaign: "def() ->commands
			show_story([
			{
				image: 'portraits/askioski.png',
				animate_duration: 800,
				text: q(I am Askioski. This day, my master and teacher calls me from my training. I arrive to find a full council of the fierce guardians, and my master, Grizzis, Lord of the Hunt stands at the heart geared to fight. Keening cries surround me as I enter and do not die down quickly.),
				transition: null,
			},
            {
				image: 'portraits/grizzis-lord-of-the-hunt.png',
				text: q(Grizzis: Since we found you adbandoned here as a child Askioski, we have been well pleased with you. You have been our loyal fierce protecter and grown into a great hunter. For this we honor you. For a long season you have been our friend and we your teachers.),
				transition: null,
			},
            {
				image: 'portraits/askioski.png',
				animate_duration: 800,
				text: q(I stand silent not sure what to make of this sudden ceremony.),
				transition: null,
			},
            {
				image: 'portraits/grizzis-lord-of-the-hunt.png',
				animate_duration: 800,
				text: q(Grizzis: A new season begins! And now, the Hunt is upon you!),
				transition: null,
			},
            {
				image: 'portraits/askioski.png',
				animate_duration: 800,
				text: q(Askioski: What? Why?),
				transition: null,
			},
            {
				image: 'portraits/grizzis-lord-of-the-hunt.png',
				animate_duration: 800,
				text: q(Grizzis: Enough! Flee lest you be devoured!),
				transition: null,
			},
            {
				image: 'portraits/askioski.png',
				text: q(The Hunt always gives their prey a chance to run and I immediately took it. I used every magic and trick I knew to get swiftly to the borders of the forest, far faster than even the swiftest of fierce guardians. I could not understand this sudden betrayal nor could I comprehend what life would be like outside the woods on my own. I had no place to be nor could I stay anywhere long or the Hunt would catch me.),
				transition: null,
			},
            {
				image: 'portraits/askioski.png',
				text: q(But though I'd been sent to wander, and though I had no formal training, I was a Shaper and as the guardians had taught me all my days with them, I had power and the will to survive, so I would make a way.),
				transition: null,
			},

			])",

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

            player_collection: { type: "[string]", default: ['Savage Wolf', 'Savage Wolf', 'Savage Wolf', 'Wolf Rider', 'Wolf Rider', 'Wolf Rider', 'Green Adder', 'Green Adder', 'Green Adder', 'Savage Lands', 'Troll Whelp', 'Troll Whelp', 'Troll Whelp', 'Quillboar', 'Quillboar', 'Quillboar', 'Furious Rampage', 'Furious Rampage', 'Furious Rampage', 'Relentless Behemeth', 'Relentless Behemeth', 'Relentless Behemeth', 'Forest', 'Forest', 'Forest', 'Outsmart the Guards', 'Outsmart the Guards', 'Outsmart the Guards'] },

            player_deck: { type: "[string]", default: ['Savage Wolf', 'Savage Wolf', 'Savage Wolf', 'Wolf Rider', 'Wolf Rider', 'Wolf Rider', 'Green Adder', 'Green Adder', 'Green Adder', 'Savage Lands', 'Troll Whelp', 'Troll Whelp', 'Troll Whelp', 'Quillboar', 'Quillboar', 'Quillboar', 'Furious Rampage', 'Furious Rampage', 'Furious Rampage', 'Relentless Behemeth', 'Relentless Behemeth', 'Relentless Behemeth', 'Outsmart the Guards', 'Outsmart the Guards', 'Outsmart the Guards'] },

        map_info: { type: "MapInfo", init: "MapInfo<- (get_document(fname, ['user_preferences_dir', 'null_on_failure']) or get_document(fname)) where fname = 'data/campaign-maps/askioski-map.cfg'", set: "[set(_data, value), write_document('data/campaign-maps/askioski-map.cfg', value)]" },

		starting_player: "map :: {
			_avatar: 'askioski.png',
			_avatar_focus: [120,120],
			_avatar_scale: 0.1,
			loc: [4,4],
		}",

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

		starting_regions: "[map] :: [
		{
			name: 'Unofavi Forest',
			loc: [4,4],
			borders: [[12,7]],
			music: 'gaea.ogg',
			encounter_chance: 0.04,
			generate_random_encounter: q(def() ->Scenario {
				name: q(),
				text: q(),
				bot_args: {
					deck: q([string] :: ['Green Adder', 'Savage Wolf', 'Quillboar', 'Purrsan Ambusher', 'Rokh', 'Battlecry', 'Forest']*3),
				},
                
                starting_units: [
			                 {card_name: 'Forest', loc: [1,3], controller: 1},
                             {card_name: 'Forest', loc: [3,2], controller: 1},
                             {card_name: 'Forest', loc: [2,4], controller: 1},

			                 {card_name: 'Forest', loc: [0,1], controller: -1},
                             {card_name: 'Forest', loc: [4,2], controller: -1},
                             {card_name: 'Forest', loc: [2,3], controller: -11},
		                              ],
                                      
				enemy_name: q(beasts),
				set: 'core',
				bot_type: 'eval',
				portrait: 'wolf-rider.png',
				portrait_scale: 0.2,
				portrait_translate: [306, 457],
				avatar: 'marauder.png',

				theme: 'forest',
				music_theme: 'gaea',
				reward_gold: 10,
			}
			)
		},
        {
			name: 'The Shiashou Plateau',
			loc: [14,8],
			borders: [[12,7],[22,9],[22,10]],
			music: 'aether.ogg',
			encounter_chance: 0.04,
			generate_random_encounter: q(def() ->Scenario {
				name: q(),
                text: q(),
                bot_args: choose([{
					deck: q([string] :: ['Disciple', 'Rider of the Thorn']*6+['Blessing of Endurance', 'Dawn Obelisk']*3)}, 
                    {deck: q([string] :: ['Temple Guard', q(Rihn's Martyr)]*6+['Blessing of Endurance', 'Smite the Defilers']*3)},
                    {deck: q([string] :: [q(Rihn's Anointed), 'Blessing of Endurance']*6+['Inquisitor', 'Blessed Lance']*3)},
                    {deck: q([string] :: [q(Disciple), q(Rihn's Anointed)]*6+['Eye for an Eye', 'Blessed Lance']*3)},
                ]),
				enemy_name: choose([q(Thodmoay),q(Shurdi),q(Tionia),q(Tothshia ),q(Momi)]),
				set: 'core',
				bot_type: 'eval',
				portrait: 'sul-dahl-devout.png',
				portrait_scale: 0.2,
				portrait_translate: [306, 457],
		        avatar: q(rihns-anointed.png),

				theme: 'flatlands',
				music_theme: 'aether',
				reward_gold: 70,
			}
			)
		},
        {
			name: 'Sio Town',
			loc: [25,8],
			borders: [[26,5],[22,9],[22,10]],
			music: 'materia.ogg',
			encounter_chance: 0.0,
		},
        {
			name: 'Tivi Lowlands',
			loc: [34,10],
			borders: [[26,5],[29,13]],
			music: 'sapienza.ogg',
			encounter_chance: 0.03,
			generate_random_encounter: choose([q(def() ->Scenario {
				name: q(),
				text: q(),
				bot_args: choose([{
					deck: q([string] :: ['Mercenary', 'Stalwart Guard', 'Thunderer']*6+['Anthem of Battle', 'Armoury']*3)}, 
                    {deck: q([string] :: ['Hillclan Auxillery', q(Thunderer), q(Temple Guard)]*6+['Anthem of Battle', 'Blessing of Endurance']*3)},
                    {deck: q([string] :: [q(Mercenary), q(King's Rider), q(Loyal Guard)]*6+['Siege Ballista', 'Mine']*3)},
                ]),
				enemy_name: choose([q(Derardor), q(Ninzor), q(Alddor), q(Ynorkorm)]),
				set: 'core',
				bot_type: 'eval',
				portrait: 'mercenary.png',
				portrait_scale: 0.2,
				portrait_translate: [306, 457],
				avatar: 'mercenary.png',

				theme: 'flatlands',
				music_theme: 'materia',
				reward_gold: 60,
			}
			),
            q(def() ->Scenario {
				name: q(),
				text: q(),
				bot_args: choose([{
					deck: q([string] :: ['Acolyte', 'Mystic Scholar', 'Channeler']*6+['Fireball', 'Counter Spell', 'Mistlands']*3)}, 
                    {deck: q([string] :: ['Loyal Guard', q(Ilz Apprentice), q(Pyromancer)]*6+['Translocate', 'Polymorph', 'Chain Lightning']*3)},
                    {deck: q([string] :: [q(Cunning Wisp), 'Fireball', 'Spirit of Intellect']*6+['Astral Walk', 'Blink Mage']*3)},
                ]),
				enemy_name: choose([q(Lodidasa de Temasine), q(Malide Mirerazo), q(Ririlave des Reros), q(Mirimi des Citases)]),
				set: 'core',
				bot_type: 'eval',
				portrait: 'acolyte.png',
				portrait_scale: 0.2,
				portrait_translate: [306, 457],
				avatar: 'acolyte.png',

				theme: 'mist',
				music_theme: 'sapienza',
				reward_gold: 90,
			}),
            q(def() ->Scenario {
				name: q(),
				text: q(),
				bot_args: choose([{
					deck: q([string] :: ['Skeleton', 'Zombie', 'Dark Emissary']*6+['Festering Wound', 'Duskwind Obelisk', 'Swamp']*3)}, 
                    {deck: q([string] :: ['Zombie', q(Diseased Corpse), q(Festering Wound)]*6+['Vampire', 'Flesh Golem']*3)},
                    {deck: q([string] :: [q(Skeleton), 'Nightblade', 'Soothsayer']*6+['Knife in the Dark', 'Blood Altar', Hypothermiaa]*3)},
                ]),
				enemy_name: choose([q(Danou Dikikibo), q(Straka Youbasha), q(Deso Salanaya), q(Koula Ronirada)]),
				set: 'core',
				bot_type: 'eval',
				portrait: 'skeletal-parasite.png',
				portrait_scale: 0.2,
				portrait_translate: [306, 457],
				avatar: 'skeletal-parasite.png',

				theme: 'mist',
				music_theme: 'entropia',
				reward_gold: 80,
			})])
		},
        {
			name: 'The Shiashou Plateau',
			loc: [22,16],
			borders: [[28,14],[11,16]],
			music: 'entropia.ogg',
			encounter_chance: 0.05,
			generate_random_encounter: q(def() ->Scenario {
				name: q(),
				text: q(),
				bot_args: choose([
                {deck: q([string] :: ['Skeleton', q(Rihn's Martyr), q(Orin's Phalanx), q(Flesh Golem)]*6+['Blessing of Endurance', 'Silence', 'Hypothermia']*3)}, 
                {deck: q([string] :: ['Vampire', q(Zombie), q(Disciple), q(Inquisitor)]*6+['Festering Wound', 'Inquisition', 'Knife in the Dark']*3)}, 
                {deck: q([string] :: ['Skeletal Parasite', q(Rihn's Anointed), q(Shadow Elemental), q(Water Elemental)]*6+['Blessing of Endurance', 'Blessed Lance', 'Pain']*3)}, 
                ]),
				enemy_name: choose([q(Danou Dikikibo), q(Straka Youbasha), q(Deso Salanaya), q(Koula Ronirada)]),
				set: 'core',
				bot_type: 'eval',
				portrait: 'wolf-rider.png',
				portrait_scale: 0.2,
				portrait_translate: [306, 457],
				avatar: 'skeleton.png',

				theme: 'highlands',
				music_theme: 'aether',
				reward_gold: 120,
			}
			)
		},
        {
			name: 'Unofavi Forest',
			loc: [4,16],
			borders: [[11,16]],
			music: 'gaea.ogg',
			encounter_chance: 0.05,
			generate_random_encounter: q(def() ->Scenario {
				name: q(),
				text: q(),
				bot_args: choose([{
					deck: q([string] :: ['Darkwood Denizen', 'Guardian Tunneler', 'Wolf Rider']*6+['Guardian King', 'Guardian Herald', 'Monsterous Growth']*3)}, 
                    {deck: q([string] :: ['Savage Wolf', 'Quillboar', 'Relentless Behemeth']*6+['Cave Troll', 'Furious Rampage', 'Hunting Grounds']*3)}, 
                    {deck: q([string] :: ['Darkwood Denizen', 'Savage Wolf', 'Guardian Herald']*6+['Outsmart the Guards', 'Furious Rampage', 'Cave Troll']*3)}, 
                ]),
                
                starting_units: [
			                 {card_name: 'Forest', loc: [1,2], controller: 1},
                             {card_name: 'Forest', loc: [3,3], controller: 1},
                             {card_name: 'Forest', loc: [2,3], controller: 1},

			                 {card_name: 'Forest', loc: [0,1], controller: -1},
                             {card_name: 'Forest', loc: [4,2], controller: -1},
                             {card_name: 'Forest', loc: [2,1], controller: -11},
		                          ],
                
				enemy_name: choose([q(Avanohyula), q(Ovo), q(Avomafoti), q(Onikay)]),
				set: 'core',
				portrait: 'wolf-rider.png',
				portrait_scale: 0.2,
				portrait_translate: [306, 457],
				avatar: 'marauder.png',

				theme: 'forest',
				music_theme: 'gaea',
				reward_gold: 120,
			}
			)
		},
        
		]",
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		starting_locations: "[map] :: [

        {
			title: q(Shoalna),
			flavor_text: q(),
			_avatar: 'inquisitor.png',
			_avatar_focus: [400,400],
			_avatar_scale: 0.2,
			loc: [12,7],
			info: {
				handle_enter: q(def(obj story_campaign_controller controller, obj campaign_location loc) ->commands 
                [
			    controller.show_story_dialog(
			[
			{
				image: 'portraits/inquisitor.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Stop! Who're you! And what're you doing here?!),
				transition: null,
            },
            {
            image: 'portraits/askioski.png',
            image_area: [0.0, 0.0, 200.0, 200.0],
            text: q(I am Askioski. I am leaving.),
            transition: null,
            },
            {
				image: 'portraits/inquisitor.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: 'My orders are to keep the woodland savages contained. Turn back.',
				transition: null,
                options: [{
					text: q(I can't do that.),
					select: def()->commands [
                    add(controller.player_collection, [q(Cover), q(Cover), q(Cover)]),
                    controller.force_fight([19,16], {

						name: q(),
						text: q(),
						bot_args: {
							deck: q([string] :: ['Disciple', 'Mercenary', 'Loyal Guard']*4 + ['Blessing of Endurance', 'Eye for an Eye', 'Tactical Maneuver', 'Weakness', 'Inquisitor']*2),
						},
						enemy_name: q(Tiodo Lau),
						set: 'core',
						loc: [12,7],
						portrait: 'inquisitor.png',
						portrait_scale: 0.2,
						portrait_translate: [306, 457],
						avatar: 'inquisitor.png',
                        theme: 'forest',

						music_theme: 'aether',
						reward_gold: 100,
					}, me)]}],
            },]),])}
		},
        
        {
			title: q(Ojimo),
			flavor_text: q(),
			_avatar: 'marauder.png',
			_avatar_focus: [400,400],
			_avatar_scale: 0.2,
			loc: [2,8],
			info: {
				handle_enter: q(def(obj story_campaign_controller controller, obj campaign_location loc) ->commands 
                [
			    controller.show_story_dialog(
			[
			{
				image: 'portraits/marauder.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: 'Ojimo: Hold protector! I am here contrary to the will of Grizzis. I knew you would come this way. I was grieved by the Hunt Masters decision.',
				transition: null,
            },
            {
				image: 'portraits/askioski.png',
                image_area: [0.0, 0.0, 200.0, 200.0],
				text: 'Askioski: Do you know why I am hunted?',
				transition: null,
            },
            {
				image: 'portraits/marauder.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: 'Ojimo: I can not say. But this I will do while I can yet consider you a friend; take this gift of magic before you leave.',
				transition: null,
            },
            {
            image: 'portraits/marauder.png',
            image_area: [0.0, 0.0, 650.0, 650.0],
            text: q(You have recieved 3 'Darkwood Denizen' cards. These have been added to your deck),
            transition: null,
            },
            {
				image: 'portraits/marauder.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: 'Ojimo: Gaea magic is at your heart but you are quite adaptable. As you fight new enemies you will find that you have learned new spells. Check yourself every so often to discover what you can do.',
				transition: null,
                options: [{
					text: 'My thanks.',
					select: def()->commands 
                       [add(controller.player_collection, [q(Darkwood Denizen), q(Darkwood Denizen), q(Darkwood Denizen)]),
                        add(controller.player_deck, [q(Darkwood Denizen), q(Darkwood Denizen), q(Darkwood Denizen)]),
                        controller.remove_location([2,8]),
                       ]}],
            },
            ])])}
		},
        
         {
			title: q(Aftermath),
			flavor_text: q(),
			_avatar: 'grizzis-lord-of-the-hunt.png',
			_avatar_focus: [400,400],
			_avatar_scale: 0.2,
			loc: [33,10],
			info: {
				handle_enter: q(def(obj story_campaign_controller controller, obj campaign_location loc) ->commands 
                [
			    controller.show_story_dialog(
			[
			{
				image: 'portraits/askioski.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Askioski: What now huntmaster? When I ran with you, the Hunt never failed to catch it's prey. Perhaps it should reconsider your decision.),
				transition: null,
            },
            {
            image: 'portraits/grizzis-lord-of-the-hunt.png',
            image_area: [0.0, 0.0, 650.0, 650.0],
            text: q(Grizzis: The Hunt does not relent.),
            transition: null,
            },
            {
				image: 'portraits/askioski.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Askioski: And yet you flee before me. Why did you betray me?),
				transition: null,
            },
            {
            image: 'portraits/grizzis-lord-of-the-hunt.png',
            image_area: [0.0, 0.0, 650.0, 650.0],
            text: q(Grizzis: It is not for the prey to know. But if this prey is so brave as to follow me back into the south woods, back to the seat of my power, I will honor him with this knowledge.),
            transition: null,
            },
            {
				image: 'portraits/askioski.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Askioski: So if I chase you all the way back into your fortress, you'll explain this to me?),
				transition: null,
                options: [{
					text: q(I can do that.),
					select: def()->commands 
                       [
                        controller.remove_location([33,10]),
                        controller.update_visibility()
                       ]}],
            },
            ])])}
		},       
        {
			title: q(Dialyal),
			flavor_text: q(),
			_avatar: 'temple-guard.png',
			_avatar_focus: [400,400],
			_avatar_scale: 0.2,
			loc: [11,10],
            is_library: true,
			info: {
				get_choices: q(def(obj story_campaign_controller controller) -> [{button_text: string, on_select: function()->commands}]
				[{
					button_text: 'Buy Spells',
					on_select: def()->commands controller.show_shop([
					  {type: q(Disciple), quantity: 3, price: 15},
					  {type: q(Rider of the Thorn), quantity: 3, price: 15},
					  {type: q(Rihn's Martyr), quantity: 3, price: 10},
					  {type: q(Rihn's Anointed), quantity: 3, price: 15},
					  {type: q(Blessing of Endurance), quantity: 3, price: 15},
					  {type: q(Weakness), quantity: 3, price: 25},
					  {type: q(Silence), quantity: 3, price: 20},
                      {type: q(Rokh), quantity: 3, price: 40},
					  {type: q(Inquisitor), quantity: 3, price: 50},
					  {type: q(Inquisition), quantity: 3, price: 10},
					  {type: q(Dawn Obelisk), quantity: 3, price: 40},
					]),
				},
                {
					button_text: 'Edit Deck',
					on_select: def()->commands controller.show_library(),
				}]),
                handle_enter: q(def(obj story_campaign_controller controller, obj campaign_location loc) ->commands 
                [
            controller.heal_wounds(),
            if(not controller.variables.Dialyal = q(true), 
			    controller.show_story_dialog(
			[
			{
				image: 'portraits/temple-guard.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: 'Man: Eh? Hello stranger.',
				transition: null,
            },
            {
            image: 'portraits/askioski.png',
            image_area: [0.0, 0.0, 650.0, 650.0],
            text: q(Askioski: Aren't you going to attack me?),
            transition: null,
            },
            {
				image: 'portraits/temple-guard.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Man: Me? No. Enough of that going around. Rihn Inquisitors and the Wizard King conscripting or slaughtering mages in the highland, a stupid three way battle for that citadel in the lowlands. Far too many people running around attacking whomever doesn't seem to be on their side. So no, no attacking for me, 'less of course you want to cause problems.),
				transition: null,
            },
            {
            image: 'portraits/askioski.png',
            image_area: [0.0, 0.0, 650.0, 650.0],
            text: q(Askioski: There doesn't seem to be a point.),
            transition: null,
            },
            {
				image: 'portraits/temple-guard.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Man: Good. I'm Dialyal. If you're willing to part with a bit of your gold, I'll teach you a spell or two.),
				transition: null,
            },
            {
            image: 'portraits/askioski.png',
            image_area: [0.0, 0.0, 650.0, 650.0],
            text: q(Askioski: Sell. Spells. For gold. You'd really give me power in exchange for this metal?),
            transition: null,
            },
            {
				image: 'portraits/temple-guard.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Dialyal: Certainly.),
				transition: null,
                options: [{
					text: q(I may take you up on that offer.),
					select: def()->commands 
                       [
                        set(controller.variables.Dialyal, q(true))
                       ]}],
            },
            ]))])}
		},
        
        {
			title: q(Inquisition),
			flavor_text: q(),
			_avatar: 'inquisitor.png',
			_avatar_focus: [400,400],
			_avatar_scale: 0.2,
			loc: [24,2],
			info: {
				handle_enter: q(def(obj story_campaign_controller controller, obj campaign_location loc) ->commands 
                [
			    controller.show_story_dialog(
			[
			{
				image: 'portraits/inquisitor.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Shaper! Do you owe allegience to Rihn?),
				transition: null,
            },
            {
				image: 'portraits/askioski.png',
                image_area: [0.0, 0.0, 200.0, 200.0],
				text: q( ),
				transition: null,
                options: [{
					text: q(No.),
					select: def()->commands[
                    add(controller.player_collection, [q(Temple Guard), q(Temple Guard), q(Temple Guard), q(Blessed Lance), q(Blessed Lance), q(Blessed Lance)]),
                    controller.force_fight([19,16], {

						name: q(),
						text: q(),
						bot_args: {
							deck: q([string] :: ['Disciple', 'Temple Guard', 'Inquisitor', 'Inquisition']*5 + ['Blessing of Endurance', 'Smite the Defilers', 'Dawn Obelisk', q(Orin's Phalanx)]*3),
						},
						enemy_name: q(Tiodo Lau),
						set: 'core',
						portrait: 'inquisitor.png',
						portrait_scale: 0.2,
						portrait_translate: [306, 457],
						avatar: 'inquisitor.png',
                        theme: 'highlands',

						music_theme: 'aether',
						reward_gold: 300,
					}, me)]}],
            },]),])}
		},
        
        {
			title: q(Agent of the Wizard King),
			flavor_text: q(),
			_avatar: 'stalwart-guard.png',
			_avatar_focus: [400,400],
			_avatar_scale: 0.2,
			loc: [26,5],
			info: {
				handle_enter: q(def(obj story_campaign_controller controller, obj campaign_location loc) ->commands 
                [
			    controller.show_story_dialog(
			[
			{
				image: 'portraits/stalwart-guard.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Soldier Mage: Stop mage! Have you a master?),
				transition: null,
            },
            {
				image: 'portraits/askioski.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Askioski: I used to but they turned on me.),
				transition: null,
            },
            {
				image: 'portraits/stalwart-guard.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Soldier Mage: Well then, I've got a great opportunity for you! How would you like to work for Orbranod the Wizard King? He's a strong shaper and is very loyal to his own. I had two masters before him and he's easily the best I've had. He could protect you from your previous masters.),
				transition: null,
            },
            {
				image: 'portraits/askioski.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Askioski: I do not feel the desire to have a master at the moment. I wish to roam these lands free for awhile and enjoy the thrill of the fight.),
				transition: null,
            },
            {
				image: 'portraits/stalwart-guard.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Soldier Mage: That's rather unfortunate. As I'm supposed to destroy those who won't join. Are you sure you won't reconsider?),
				transition: null,
                options: [{
					text: q(Laugh. Then Laugh again.),
					select: def()->commands[
                    add(controller.player_collection, [q(Wall of Stone), q(Wall of Stone), q(Wall of Stone), q(Guard Post), q(Guard Post), q(Guard Post), q(Mercenary), q(Mercenary), q(Mercenary)]),
                    controller.force_fight([19,16], {

						name: q(),
						text: q(),
						bot_args: {
							deck: q([string] :: ['Mercenary', 'Loyal Guard', 'Stalwart Guard', 'Guard Post']*4 + ['Anthem of Battle', 'Thunderer', 'Toughness', q(King's Rider)]*2),
						},
						enemy_name: q(Yinmerlod),
						set: 'core',
						loc: [26,5],
						portrait: 'stalwart-guard.png',
						portrait_scale: 0.2,
						portrait_translate: [306, 457],
						avatar: 'stalwart-guard.png',
                        theme: 'highlands',

						music_theme: 'materia',
						reward_gold: 150,
					}, me)]}],
            },
 
            ]),
            ])}
		},
        
                {
			title: q(Bartyl's Mostly Good Magics),
			flavor_text: q(),
			_avatar: 'bazaar.png',
			_avatar_focus: [400,400],
			_avatar_scale: 0.2,
			loc: [23,5],
            is_library: true,
			info: {
				get_choices: q(def(obj story_campaign_controller controller) -> [{button_text: string, on_select: function()->commands}]
				[{
					button_text: 'Buy Spells',
					on_select: def()->commands controller.show_shop([
					  {type: q(Loyal Guard), quantity: 3, price: 15},
					  {type: q(Stalwart Guard), quantity: 3, price: 15},
					  {type: q(Hillclan Auxillery), quantity: 3, price: 10},
					  {type: q(King's Rider), quantity: 3, price: 20},
					  {type: q(Mine), quantity: 3, price: 30},
					  {type: q(Anthem of Battle), quantity: 3, price: 50},
					  {type: q(Toughness), quantity: 3, price: 10},
                      {type: q(Staged Duel), quantity: 3, price: 20},
					  {type: q(Siege Ballista), quantity: 3, price: 50},
					  {type: q(Highlands), quantity: 3, price: 10},
					  {type: q(Oldric's Trap), quantity: 3, price: 10},
					]),
				},
                {
					button_text: 'Edit Deck',
					on_select: def()->commands controller.show_library(),
				}]),
                handle_enter: q(def(obj story_campaign_controller controller, obj campaign_location loc) ->commands 
                [
                controller.heal_wounds(),
                ])}
		      },
              
              {
			title: q(Timoso di Taroto),
			flavor_text: q(),
			_avatar: 'acolyte.png',
			_avatar_focus: [400,400],
			_avatar_scale: 0.2,
			loc: [32,17],
            is_library: true,
			info: {
				get_choices: q(def(obj story_campaign_controller controller) -> [{button_text: string, on_select: function()->commands}]
				[{
					button_text: 'Buy Spells',
					on_select: def()->commands controller.show_shop([
					  {type: q(Acolyte), quantity: 3, price: 10},
					  {type: q(Mystic Scholar), quantity: 3, price: 15},
					  {type: q(Channeler), quantity: 3, price: 20},
					  {type: q(Spirit of Intellect), quantity: 3, price: 30},
					  {type: q(Cunning Wisp), quantity: 3, price: 15},
					  {type: q(Library), quantity: 3, price: 20},
					  {type: q(Fireball), quantity: 3, price: 40},
                      {type: q(Chain Lightning), quantity: 3, price: 40},
					  {type: q(Polymorph), quantity: 3, price: 40},
					  {type: q(Mistlands), quantity: 3, price: 10},
					  {type: q(Endless Studies), quantity: 3, price: 10},
					]),
				},
                {
					button_text: 'Edit Deck',
					on_select: def()->commands controller.show_library(),
				}]),
                handle_enter: q(def(obj story_campaign_controller controller, obj campaign_location loc) ->commands 
                [
                controller.heal_wounds(),
                ])}
		  },
          
          {
			title: q(Nisou Stristapa),
			flavor_text: q(),
			_avatar: 'soothsayer.png',
			_avatar_focus: [400,400],
			_avatar_scale: 0.2,
			loc: [17,13],
            is_library: true,
			info: {
				get_choices: q(def(obj story_campaign_controller controller) -> [{button_text: string, on_select: function()->commands}]
				[{
					button_text: 'Buy Spells',
					on_select: def()->commands controller.show_shop([
					  {type: q(Skeleton), quantity: 3, price: 20},
					  {type: q(Zombie), quantity: 3, price: 10},
					  {type: q(Skeletal Parasite), quantity: 3, price: 20},
					  {type: q(Shadow Elemental), quantity: 3, price: 30},
					  {type: q(Hypothermia), quantity: 3, price: 25},
					  {type: q(Pain), quantity: 3, price: 20},
					  {type: q(Deathly Arrow), quantity: 3, price: 30},
                      {type: q(Knife in the Dark), quantity: 3, price: 40},
					  {type: q(Blood Altar), quantity: 3, price: 50},
					  {type: q(Swamp), quantity: 3, price: 10},
					  {type: q(Vampire), quantity: 3, price: 40},
                      {type: q(Flesh Golem), quantity: 3, price: 40},
					]),
				},
                {
					button_text: 'Edit Deck',
					on_select: def()->commands controller.show_library(),
				}]),
                handle_enter: q(def(obj story_campaign_controller controller, obj campaign_location loc) ->commands 
                [
                controller.heal_wounds(),
                ])}
		  },
          
          {
			title: q(Ajasimi),
			flavor_text: q(),
			_avatar: 'guardian-king.png',
			_avatar_focus: [400,400],
			_avatar_scale: 0.2,
			loc: [8,16],
            is_library: true,
			info: {
				get_choices: q(def(obj story_campaign_controller controller) -> [{button_text: string, on_select: function()->commands}]
				[{
					button_text: 'Buy Spells',
					on_select: def()->commands controller.show_shop([
					  {type: q(Intense Warfare), quantity: 3, price: 40},
					  {type: q(Cave Troll), quantity: 3, price: 40},
					  {type: q(Strangling Vines), quantity: 3, price: 10},
					  {type: q(Purrsan Ambusher), quantity: 3, price: 25},
					  {type: q(Guardian King), quantity: 3, price: 35},
					  {type: q(Guardian Herald), quantity: 3, price: 20},
					  {type: q(Guardian Tunneler), quantity: 3, price: 10},
                      {type: q(Stoneclan Berserker), quantity: 3, price: 10},
					  {type: q(Savage Lands), quantity: 3, price: 40},
					  {type: q(Treant), quantity: 3, price: 30},
					  {type: q(Battlecry), quantity: 3, price: 10},
                      {type: q(Burrow), quantity: 3, price: 10},
                      {type: q(Overgrowth), quantity: 3, price: 10},
					]),
				},
                {
					button_text: 'Edit Deck',
					on_select: def()->commands controller.show_library(),
				}]),
                handle_enter: q(def(obj story_campaign_controller controller, obj campaign_location loc) ->commands 
                [
            controller.heal_wounds(),
            if(not controller.variables.Ajiasmi = q(true), 
			    controller.show_story_dialog(
			[
			{
				image: 'portraits/guardian-king.png',
                image_area: [0.0, 0.0, 800.0, 900.0],
				text: q(Ajiasimi: Welcome back askioski. We remember our friendship.),
				transition: null,
            },
            {
            image: 'portraits/askioski.png',
            image_area: [0.0, 0.0, 650.0, 650.0],
            text: q(Askioski: I was declared prey for the Hunt.),
            transition: null,
            },
            {
				image: 'portraits/guardian-king.png',
                image_area: [0.0, 0.0, 800.0, 900.0],
				text: q(Ajiasimi: Not all agreed with the Huntmaster's decision. Aside, I am not of the Hunt.),
				transition: null,
            },
            {
            image: 'portraits/askioski.png',
            image_area: [0.0, 0.0, 650.0, 650.0],
            text: q(Askioski: Do you know why I was hunted.),
            transition: null,
            },
            {
				image: 'portraits/guardian-king.png',
                image_area: [0.0, 0.0, 800.0, 900.0],
				text: q(Ajiasimi: This I do however you should hear it from the Huntmaster. In the meanwhile, I offer you only the magics you can purchase.),
				transition: null,
            },
            {
            image: 'portraits/askioski.png',
            image_area: [0.0, 0.0, 650.0, 650.0],
            text: q(Askioski: You also are selling spells for gold now? Why?),
            transition: null,
            },
            {
				image: 'portraits/guardian-king.png',
                image_area: [0.0, 0.0, 800.0, 900.0],
				text: q(Ajiasimi: Because a better system has not been implimented yet.),
				transition: null,
                options: [{
					text: q(Sigh, let me take a look.),
					select: def()->commands 
                       [
                        set(controller.variables.Ajiasmi, q(true))
                       ]}],
            },
            ]))])}
		  },
          
                  {
			title: q(ReEncounter),
			flavor_text: q(),
			_avatar: 'highlands.png',
			_avatar_focus: [400,400],
			_avatar_scale: 0.2,
			loc: [36,9],
			info: {
				handle_enter: q(def(obj story_campaign_controller controller, obj campaign_location loc) ->commands 
                [
			    controller.show_story_dialog(
			[
			{
				image: 'portraits/highlands.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(I could tell as I entered this area that something was not right. I could smell things moving around me on the cliffs.),
				transition: null,
            },
            {
				image: 'portraits/grizzis-lord-of-the-hunt.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(And the moment I figured out what it was they appeared. The hunt barreling down on me from every direction with Grizzis at the fore.),
				transition: null,
            },
            {
				image: 'portraits/grizzis-lord-of-the-hunt.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Grizzis: Fledgling was fast. But could not run forever.),
				transition: null,
                options: [{
					text: q(That maybe so. But I don't need to run now.),
					select: def()->commands[
                    add(controller.player_collection, [q(Grizzis, Lord of the Hunt), q(Grizzis, Lord of the Hunt), q(Grizzis, Lord of the Hunt)]),
                    controller.force_fight([36,9], {

						name: q(),
						text: q(),
						bot_args: {
							deck: q([string] :: ['Savage Wolf', 'Wolf Rider', 'Darkwood Denizen', 'Quillboar', 'Guardian King', 'Cave Troll']*5 + ['Monsterous Growth', 'Outsmart the Guards', 'Furious Rampage', q(Grizzis, Lord of the Hunt)]*3),
						},
						enemy_name: q(Grizzis, Lord of the Hunt),
						set: 'core',
						portrait: 'marauder.png',
						portrait_scale: 0.2,
						portrait_translate: [306, 457],
						avatar: 'marauder.png',
                        theme: 'highlands',
                        storyline: 'storyline_askioski1',

						music_theme: 'aether',
						reward_gold: 50,
					}, me)]}],
            },]),])}
		            },
              
              {
			title: q(Distractions),
			flavor_text: q(),
			_avatar: 'if-uluk-the-swift.png',
			_avatar_focus: [400,400],
			_avatar_scale: 0.2,
			loc: [28,14],
			info: {
				handle_enter: q(def(obj story_campaign_controller controller, obj campaign_location loc) ->commands 
                [
			    controller.show_story_dialog(
			[
			{
				image: 'portraits/if-uluk-the-swift.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(If-Uluk: The hunt is upon you!),
				transition: null,
            },
            {
				image: 'portraits/askioski.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Askioski: For 'the Swift' it's taken you awhile to catch me. Grizzis's pack already reached me and I sent them packing.),
				transition: null,
            },
            {
				image: 'portraits/if-uluk-the-swift.png',
                image_area: [0.0, 0.0, 200.0, 200.0],
				text: q(If-Uluk: Laugh while you can human.),
				transition: null,
                options: [{
					text: q(I will. *Laugh*),
					select: def()->commands[
                    add(controller.player_collection, [q(If-Uluk, the Swift), q(If-Uluk, the Swift), q(If-Uluk, the Swift)]),
                    controller.force_fight([28,14], {

						name: q(),
						text: q(),
						bot_args: {
							deck: q([string] :: ['Savage Wolf', 'Darkwood Denizen', 'Guardian Herald']*7 + ['Furious Rampage', 'Outsmart the Guards', 'Intense Warfare', q(If-Uluk, the Swift)]*3),
						},
						enemy_name: q(scouts),
						set: 'core',
						portrait: 'inquisitor.png',
						portrait_scale: 0.2,
						portrait_translate: [306, 457],
						avatar: 'marauder.png',
                        theme: 'highlands',

						music_theme: 'aether',
						reward_gold: 50,
					}, me)]}],
            },]),])}
		            },
                    
                    {
                title: q(Citadel of the Shear-Warp),
                flavor_text: q(),
                _avatar: 'mage-tower.png',
                _avatar_focus: [400,400],
                _avatar_scale: 0.2,
                loc: [38,18],
                info: {
                    handle_enter: q(def(obj story_campaign_controller controller, obj campaign_location loc) ->commands 
                    [
                    controller.show_story_dialog(
                [
                {
                    image: 'portraits/mage-tower.png',
                    image_area: [0.0, 0.0, 650.0, 650.0],
                    text: q(As I approach the citadel I can feel the will of the shaper within.),
                    transition: null,
                },
                {
                    image: 'portraits/mage-tower.png',
                    image_area: [0.0, 0.0, 650.0, 650.0],
                    text: q(I soon find myself in an odd battle.),
                    transition: null,
                    options: [{
                        text: q(Right.),
                        select: def()->commands[
                        add(controller.player_collection, [q(Morgan the Entrancer), q(Morgan the Entrancer), q(Morgan the Entrancer)]),
                        controller.force_fight([38,18], {

                            name: q(),
                            text: q(),
                            bot_args: {
                                deck: q([string] :: ['Ilz Apprentice', 'Channeler', 'Endless Studies', 'Pyromancer', 'Spirit of Intellect']*5 + ['Astral Walk', 'Chain Lightning', 'Counter Spell', q(Morgan the Entrancer)]*3),
                            },
                            enemy_name: q(Nitasoli),
                            set: 'core',
                            portrait: 'inquisitor.png',
                            portrait_scale: 0.2,
                            portrait_translate: [306, 457],
                            avatar: 'mistlands.png',

                            music_theme: 'aether',
                            reward_gold: 500,

                            map_dimensions: [5, 8],
                            map_lanes: [
                                         {begin: 3, length: 4},
                                         {begin: 0, length: 4},
                                         {begin: 3, length: 4},
                                         {begin: 0, length: 4},
                                         {begin: 3, length: 4},
                                      ],
                            starting_units: [
			                             {card_name: 'Mistlands', loc: [0,4], controller: -1},
			                             {card_name: 'Mistlands', loc: [2,4], controller: -1},
                                         {card_name: 'Mistlands', loc: [4,4], controller: -1},
		                                      ],
                            trophies: [
			                             [10,10,10,10,10],
			                             [10,10,10,10,10],
		                              ],    
                        }, me)]}],
                },]),])}
                        },
                    
                    {
			title: q(Final Challenge),
			flavor_text: q(),
			_avatar: 'grizzis-lord-of-the-hunt.png',
			_avatar_focus: [400,400],
			_avatar_scale: 0.2,
			loc: [1,12],
			info: {
				handle_enter: q(def(obj story_campaign_controller controller, obj campaign_location loc) ->commands 
                [
			    controller.show_story_dialog(
			[
			{
				image: 'portraits/grizzis-lord-of-the-hunt.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(You have made it here our former friend. Honor to the prey! He shall hear the huntmasters secrets!),
				transition: null,
            },
            {
				image: 'portraits/askioski.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Askioski: So what was it? Why did you betray me?),
				transition: null,
            },
            {
				image: 'portraits/grizzis-lord-of-the-hunt.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Not betray; decieved. The Hunt was long planned. Guardians long ago created by Shapers. Made of gaea magic and linked it it. Magic comes as naturally to us as the thrill of strife and yet so weak we were.),
				transition: null,
            },
            {
				image: 'portraits/grizzis-lord-of-the-hunt.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Shapers cannot create Shaper. Never has a guardian weilded the magics of a shaper. No way to grow these powers ourselves. But we could consume and take in such power if we devoured a shaper with magic sufficently like our own to assimulate. Then I found an adbandoned child, clearly with Shaper talent, but not sufficently strong to be consumed.),
				transition: null,
            },
             {
				image: 'portraits/askioski.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Askioski: You raised me, just so that I'd be strong enough that if you ate me you'd become a shaper?),
				transition: null,
            },
            {
				image: 'portraits/grizzis-lord-of-the-hunt.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Yes! First guardian shaper I will be! Now that you have come into my web and lair, soon I will weild powers greater than the human mages and hunt them down as the defilers they are! Guardians shall rally to my power and even the great citadels shall breath with the woodslands!),
				transition: null,
            },
            {
				image: 'portraits/askioski.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Askioski: So confident you are. I've already bested you once. And I don't think that the guardians, even the other pack leaders, support you in this mad scheme.),
				transition: null,
            },
            {
				image: 'portraits/grizzis-lord-of-the-hunt.png',
                image_area: [0.0, 0.0, 650.0, 650.0],
				text: q(Bested me you did in the lowlands, but here I am indomitable! Even your shaper might cannot match the breath that fills me here!),
				transition: null,
                options: [{
					text: q(We shall see. The forest breathes life into me as well.),
					select: def()->commands[
                    controller.force_fight([1,12], {

						name: q(),
						text: q(),
						bot_args: {
							deck: q([string] :: ['Savage Wolf', 'Purrsan Ambusher', 'Wolf Rider', 'Darkwood Denizen', 'Quillboar', 'Guardian King', 'Cave Troll']*4 + ['Monsterous Growth', 'Outsmart the Guards', 'Furious Rampage', q(Grizzis, Lord of the Hunt)]*2),
						},
						enemy_name: q(Grizzis, Lord of the Hunt),
						set: 'core',
						portrait: 'marauder.png',
						portrait_scale: 0.2,
						portrait_translate: [306, 457],
						avatar: 'marauder.png',
                        theme: 'forest',
                        storyline: 'storyline_askioski1',
                        
                        starting_units: [
			                             {card_name: 'Forest', loc: [0,1], controller: -1},
			                             {card_name: 'Forest', loc: [4,1], controller: -1},
                                         
                                         {card_name: 'Savage Lands', loc: [2,4], controller: -1},
                                         {card_name: 'Savage Lands', loc: [1,3], controller: -1},
                                         {card_name: 'Savage Lands', loc: [3,3], controller: -1},
                                         
                                         {card_name: 'Savage Lands', loc: [2,0], controller: -1},
                                         {card_name: 'Savage Lands', loc: [1,0], controller: -1},
                                         {card_name: 'Savage Lands', loc: [3,0], controller: -1},
                                         
                                         {card_name: 'Gilbane Hatching Ground', loc: [0,3], controller: 1},
                                         {card_name: 'Gilbane Hatching Ground', loc: [4,3], controller: 1},
		                                ],

						music_theme: 'gaea',
						reward_gold: 0,
					}, me)]}],
            },]),])}
		            },


		]"
	}

}
