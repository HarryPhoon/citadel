{
	id: "creature_particle_effect",
	is_strict: true,
	hidden_in_game: true,

	properties: {
		_creature: { type: "obj creature" },

		bloodcord: "def(custom_obj target) ->commands [
			lib.sound.play_sound(me, 'gameplay/blood_altar_damage'),
			set(me.particles, lib.particles.create(me, {
				position: [0,0],
				particle_quota: 5000,
				texture: 'particles/flare-128x128.png',
				particle_width: lib.citadel.px(64),
				particle_height: lib.citadel.px(64),
				fast_forward: { time: 5.0, interval: 0.05 },

				emitter:
				{
					name: 'pain',
					type: 'circle',
					position: [0,0,0],
					emission_rate: 1000.0,
					circle_radius: lib.citadel.px(5),
					direction: [0,0,0],
					time_to_live: 1.0,
					velocity: lib.citadel.px(0),
					color: [0, 0, 0, 0.4],
					angle: 5.0,
				},

				affector: [{
					type: 'color',
					time_color: [{time: 0, color: [0.5, 0, 0, 0.0]}, {time: 0.1, color: [1, 0, 0, 0.4]}, {time: 0.9, color: [0.2, 0, 0, 0.4]}, {time: 1, color: [0.2, 0, 0, 0]}],
				}, {
					type: 'path_follower',
					path: map(range(nsteps+1), [target_pos[0]*ratio, target_pos[1]*ratio + sin(value*50.0)*(1.0-ratio)*lib.citadel.py(50)] where ratio = decimal(value)/decimal(nsteps)),
				}] where target_pos = [target.mid_x - _creature.mid_x, target.mid_y - _creature.mid_y]
				    where nsteps = 30,
			}))
		]",

		move: "def(int new_x, int new_y) ->commands
		if(particles and particles.systems and [new_x,new_y] != [mid_x,mid_y],
		[
			set(mid_x, new_x),
			set(mid_y, new_y),
		]
			where dx = new_x - mid_x
			where dy = new_y - mid_y
		)
		",

		turn_off: "def() ->commands
		null
		",

		fade_away_and_die: "def() ->commands
		[
			turn_off(),
			schedule(180, remove_object(me)),
		]
		",
	},

	on_create: "[
	]",

	on_process: "move(_creature.mid_x, _creature.mid_y)",


}
