{
	id: "creature_particle_effect",
	is_strict: true,
	hidden_in_game: true,

	properties: {
		_creature: { type: "obj creature" },

		bloodcord: "def(custom_obj target) ->commands [
			set(me.particles, lib.particles.create(me, {
				position: [0,0],
				particle_quota: 5000,
				texture: 'particles/flare-128x128.png',
				particle_width: lib.citadel.px(64),
				particle_height: lib.citadel.px(64),
				fast_forward: { time: 5.0, interval: 0.05 },

				emitters: [
				{
					name: 'pain',
					type: 'circle',
					position: [0,0,0],
					emission_rate: 1000.0,
					circle_radius: lib.citadel.px(5),
					direction: [0,0,0],
					time_to_live: 1.0,
					velocity: lib.citadel.px(0),
					color: [0, 0, 0, 0.4],
					angle: 5.0,
				}
				],

				affectors: [{
					type: 'color',
					time_color: [{time: 0, color: [0.5, 0, 0, 0.0]}, {time: 0.1, color: [1, 0, 0, 0.4]}, {time: 0.9, color: [0.2, 0, 0, 0.4]}, {time: 1, color: [0.2, 0, 0, 0]}],
				}, {
					type: 'path_follower',
					path: map(range(nsteps+1), [target_pos[0]*ratio, target_pos[1]*ratio + sin(value*50.0)*(1.0-ratio)*lib.citadel.py(50)] where ratio = decimal(value)/decimal(nsteps)),
				}] where target_pos = [target.mid_x - _creature.mid_x, target.mid_y - _creature.mid_y]
				    where nsteps = 30,
			}))
		]",

		fireball: "def() ->commands [
			set(me.particles, lib.particles.create(me, {
				position: [0,0],
				particle_quota: 5000,
				texture: 'particles/flare-128x128.png',
				particle_width: lib.citadel.px(32),
				particle_height: lib.citadel.px(128),

				emitters: [
				{
					name: 'parent_emitter',
					type: 'circle',
					emits_type: 'emitter_particle',
					emits_name: 'flare_emitter',
					position: [0,0,0],
					emission_rate: 3.0,
					circle_radius: lib.citadel.px(30),
					direction: [0, -1, 0],
					time_to_live: 5.0,
					velocity: 0,
					color: [1, 0, 0, 0.4],
					angle: 0.0,
				}, {
					name: 'flare_emitter',
					type: 'circle',
					position: [0,0,0],
					emission_rate: 10.0,
					circle_radius: lib.citadel.px(5),
					direction: [0, -1, 0],
					time_to_live: 5.0,
					velocity: lib.citadel.px(0),
					color: [1, 0, 0, 0.4],
					angle: 5.0,
				},
				],

				active_emitters: ['flare_emitter'],
				affectors: [{
					type: 'color',
					time_color: [{time: 0, color: [1, 1, 0, 0.0]}, {time: 0.2, color: [1, 1, 0, 0.4]}, {time: 0.8, color: [1, 0, 0, 0.4]}, {time: 1, color: [1, 0, 0, 0]}],

				}, {
					type: 'path_follower',
					path: [[0,0], [100,0], [100,100], [200,100], [200,200]],

				}]
			})
			)
		]",

		lane_influence_particles: "def(bool going_up, [decimal,decimal,decimal] color) ->commands [
			set(me.particles, lib.particles.create(me, {
				position: [0,0],
				particle_quota: 5000,
				texture: 'particles/flare-128x128.png',
				particle_width: lib.citadel.px(32),
				particle_height: lib.citadel.px(128),

				emitters: [
				{
					name: 'parent_emitter',
					type: 'circle',
					emits_type: 'emitter_particle',
					emits_name: 'flare_emitter',
					position: [0,0,0],
					emission_rate: 0.5,
					circle_radius: _creature.img_w/2,
					direction: [0, if(going_up, -1, 1), 0],
					time_to_live: 5.0,
					velocity: 0,
					color: color + [0.4],
					angle: 0.0,
				}, {
					name: 'flare_emitter',
					type: 'circle',
					position: [0,0,0],
					emission_rate: 5.0,
					circle_radius: lib.citadel.px(5),
					direction: [0, if(going_up, -1, 1), 0],
					time_to_live: distance_to_travel/50.0,
					velocity: lib.citadel.px(50),
					color: color + [0.1],
					angle: 5.0,
				}, {
					name: 'ambient_emitter',
					type: 'circle',
					position: [0,0,0],
					emission_rate: 30.0,
					circle_radius: lib.citadel.px(40),
					direction: [0, if(going_up, -1, 1), 0],
					time_to_live: distance_to_travel/50.0,
					velocity: lib.citadel.px(50),
					color: color + [0.1],
					angle: 5.0,
				},
				]

				where distance_to_travel = if(going_up, _creature.mid_y - top_tile_in_lane.y, bot_tile_in_lane.mid_y - _creature.mid_y)
				where top_tile_in_lane = obj tile<- choose(filter(level.chars, value is obj tile and value.loc[0] = _creature.creature_object.loc[0]), -value.y)
				where bot_tile_in_lane = obj tile<- choose(filter(level.chars, value is obj tile and value.loc[0] = _creature.creature_object.loc[0]), value.y),
				active_emitters: ['ambient_emitter', 'parent_emitter'],
				affectors: [{
					type: 'color',
					time_color: [{time: 0, color: color + [0]}, {time: 0.2, color: color + [0.1]}, {time: 0.8, color: color + [0.1]}, {time: 1, color: color + [0]}],

				}]
			})
			)
		]",

		move: "def(int new_x, int new_y) ->commands
		if(particles and particles.systems and [new_x,new_y] != [mid_x,mid_y],
		[
			[[set(t.position, [t.position[0]+dx,t.position[1]+dy,t.position[2]] ) | t <- system.techniques] | system <- particles.systems],
			set(mid_x, new_x),
			set(mid_y, new_y),
		]
			where dx = new_x - mid_x
			where dy = new_y - mid_y
		)
		",
	},

	on_create: "[
		add(_creature.particle_effects, [me]),
	]",


}
