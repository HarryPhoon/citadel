{
	id: "modal_tip_dialog",

	is_strict: true,
	always_active: true,
	hidden_in_game: true,

	properties: {
		level_width: "int :: level.dimensions[2]",
		level_height: "int :: level.dimensions[3]",

		_mm: { type: "obj matchmaking_base" },
		_controller: { type: "obj citadel_controller" },

		_tip: { type: "Tip" },
		_tip_dialog: { type: "null|obj tip_dialog" },

		_targets: "[custom_obj] :: if(_tip.targets is [custom_obj|null], filter(_tip.targets, value != null), [])",

		exit_dialog: "def() ->commands [

			map(level.chars, if(value.paused, set(value.paused, false),
			                    value in _targets, add(value.zorder, -20000),
								remove_object(value))),
			set(level.frame_buffer_shaders, filter(level.frame_buffer_shaders, value.shader_info != 'background_blur_hor' and value.shader_info != 'background_blur_ver')),
		]",
	},

	on_create: "[
		add(level.frame_buffer_shaders, [{
			begin_zorder: -10000000,
			end_zorder: 12000,
			shader_info: 'background_blur_hor',
		}]),

		add(level.frame_buffer_shaders, [{
			begin_zorder: -10000000,
			end_zorder: 12000,
			shader_info: 'background_blur_ver',
		}]),

		[set(c.paused, true) | c <- level.chars, c != me, c not in _targets],

		map(_targets, add(value.zorder, 20000)),

		spawn('button_controller', level_width-260, level_height-70 + 25, {
			text: 'Close',
			on_click: me.exit_dialog,
			zorder: 20000,
			button_width: 240,
			button_height: 50,
		}),

		spawn('tip_dialog', 100, 100, {
			zorder: 25000,
			_tip: _tip,
			_width: 260,
			_height: 200,
			alpha: 0,
		}, [
			set(me._tip_dialog, child),
			set(child.x, level_width - 200),
			set(child.y2, (_controller.bot_opponent_area + _controller.top_player_area)/2),
			animate(child, {
				alpha: 255,
			}, {
				duration: 30,
			}),
		]),
	]",

	on_process: "[
		_mm.process_matchmaking_connection(),
		_controller.process_connection(),
		if(find(level.chars, value = _tip_dialog) = null, exit_dialog()),
	]",
}
