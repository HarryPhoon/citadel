{
	"Death Knight": {
		name: "Death Knight",
		type: "creature",
		set: "Arsland",
		portrait: "school-blood.png",
		cost: 6,
		school: "@eval BLOOD",
		rarity: 1,
		help_strings: ["Devoted X"],		
		creature: {
			attack: 7,
			life: 6,			
            triggered_abilities: [{
				name: "Devoted 4",                  
				rules: "Death Knight gains <i>Revenant</i>",
				on_summoned: "def(class creature creature, class game game) ->commands
                [
                    if(game.players[game.current_player_index].get_resource_level(ENTROPIA)>=4,
						
					set(creature.triggered_abilities, 
					[
					construct('triggered_ability', {
						name: 'Revenant',
						once: true,
						rules: q(If Death Knight would die, it is fully restored instead.),
	
						on_die: q^def(class creature creature, class game game) ->commands
							if(not game.creature_at_loc(creature.loc), game.summon_creature(
							lib.citadel.create_creature(creature.name, {
								name: creature.name,
								controller: creature.controller,
								loc: creature.loc,
								card_name: creature.card_name,
								summon_id: creature.summon_id,
								triggered_abilities: filter(lib.citadel.create_creature(creature.name).triggered_abilities, value.name != 'Revenant')
							})
						))
						^,
					})
					])
						
					,set(creature.triggered_abilities, [])),
                ]",
            }],
		},

	},
	
	"Chosen Warrior": {
		name: "Chosen Warrior",
		type: "creature",
		set: "Arsland",
		portrait: "school-faith.png",
		cost: 4,
		school: "@eval FAITH",
		rarity: 1,
		help_strings: ["Devoted X"],		
		creature: {
			attack: 5,
			life: 4,			
            triggered_abilities: [{
				name: "Devoted 4",                  
				rules: "Chosen Warrior gets +0/+3 and gains <i>Cover</i>",
				on_summoned: "def(class creature creature, class game game) ->commands
                [
                    if(game.players[game.current_player_index].get_resource_level(FAITH)>=4,
					[
						add(creature.abilities, ['Cover']),
						add(creature.life, 3),
					]	
					,),
					
					set(creature.triggered_abilities, [])
                ]",
            }],
		},

	},	
	
	"Rafa Snake": {
		name: "Rafa Snake",
		type: "creature",
		set: "Arsland",
		portrait: "school-food.png",
		cost: 3,
		school: "@eval FOOD",
		rarity: 1,
		help_strings: ["Devoted X"],		
		creature: {
			attack: 4,
			life: 3,		
			abilities: ['Haste'],			
            triggered_abilities: [{
				name: "Devoted 2",                  
				rules: "Rafa Snake gets <i>Feral</i> unless this ability is triggered",
				on_summoned: "def(class creature creature, class game game) ->commands
                [
                    if(game.players[game.current_player_index].get_resource_level(FOOD)<2,
						add(creature.abilities, ['Feral'])
					,),	
					set(creature.triggered_abilities, [])
                ]",
            }],
		},
	},		
	
	"Aspiring Student": {
		name: "Aspiring Student",
		type: "creature",
		set: "Arsland",
		portrait: "school-scrolls.png",
		cost: 3,
		school: "@eval SCROLLS",
		rarity: 1,
		help_strings: ["Devoted X"],
		creature: {
			attack: 3,
			life: 3,			
            triggered_abilities: [
			{
				name: "Devoted 2",                  
				rules: "Aspiring Student gets +1/+1",
				on_summoned: "def(class creature creature, class game game) ->commands
                    if(game.players[game.current_player_index].get_resource_level(SCROLLS)>=2,
					[
						add(creature.life, 1),
						add(creature.attack, 1),
					],)",
            },
			{
				name: "Devoted 5",                  
				rules: "Aspiring Student gets +2/+2",
				on_summoned: "def(class creature creature, class game game) ->commands
                [
                    if(game.players[game.current_player_index].get_resource_level(SCROLLS)>=5,
					[
						add(creature.life, 2),
						add(creature.attack, 2),
					]	
					,),	
					set(creature.triggered_abilities, [])
                ]",
            }],
		},

	},		
	
	"Trained Soldier": {
		name: "Trained Soldier",
		type: "creature",
		set: "Arsland",
		portrait: "school-gold.png",
		cost: 4,
		school: "@eval GOLD",
		rarity: 1,
		help_strings: ["Devoted X"],		
		creature: {
			attack: 5,
			life: 4,		
			resistance: 1,
            triggered_abilities: [{
				name: "Devoted 3",                  
				rules: "Trained Soldier gains 1 armor",
				on_summoned: "def(class creature creature, class game game) ->commands
                [
                    if(game.players[game.current_player_index].get_resource_level(GOLD)>=3,
					[
						add(creature.resistance, 1),
					]	
					,),
					
					set(creature.triggered_abilities, [])
                ]",
            }],
		},

	},		

}