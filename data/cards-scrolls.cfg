{
	"Ilz Apprentice": {
		name: "Ilz Apprentice",
		type: "creature",
		cost: 2,
		loyalty_cost: 0,
		school: 4,
		creature: {
			tags: ['Human'],
			attack: 1,
			life: 2,
			move: 2,
			image_num: 9
		}
	},

	"Acolyte": {
		name: "Acolyte",
		type: "creature",
		cost: 2,
		loyalty_cost: 1,
		school: 4,
		rules: "When you cast Acolyte, draw a card.",
		on_play: "def(game, info) [
		  me.do_summons(game, info),
		  game.players[game.current_player].draw_cards(1)
		]",
		creature: {
			tags: ['Human'],
			attack: 1,
			life: 2,
			move: 2,
			image_num: 20
		}
	},

	"Mystic Scholar": {
		name: "Mystic Scholar",
		type: "creature",
		cost: 2,
		loyalty_cost: 2,
		school: 4,
		creature: {
			abilities: [
				{
					name: 'Consume',
					cost: 1,
					school: 4,
					rules: "Sacrifice Mystic Scholar, draw 2 cards",
					on_play: "def(game, creature, info) [
						set(creature.destroyed, true),
						game.players[creature.controller].draw_cards(2)
					]"
				}
			],
			tags: ['Human'],
			attack: 1,
			life: 2,
			move: 2,
			image_num: 20
		}
	},

	"Golem": {
		name: "Golem",
		type: "creature",
		cost: 1,
		loyalty_cost: 2,
		school: 4,
		creature: {
			abilities: [
				{
					name: 'Rebuild',
					cost: 2,
					school: 4,
					rules: "Fully heal Golem",
					on_play: "def(game, creature, info) [
						set(creature.wounds, 0)
					]"
				}
			],
			tags: ['Construct'],
			attack: 4,
			life: 4,
			move: 1,
			image_num: 61
		}
	},

	"Fireball": {
		name: "Fireball",
		type: "spell",
		school: 4,
		cost: 3,
		loyalty_cost: 3,

		rules: "Deal 5 damage to target creature",

		possible_targets: "def(game, nplayer, targets)
		  if(targets = [],
			 [creature.loc | creature <- game.creatures, creature.is_valid_target(game, nplayer, me)]
		     )",

		on_play: "def(game, info)
		  add(game.creature_at_loc(info.targets[0]).wounds, 1)
		  asserting game.creature_at_loc(info.targets[0]) != null
		  asserting size(info.targets) = 1"
	},

	"Blink": {
		name: "Blink",
		type: "spell",
		school: 2,
		cost: 1,
		loyalty_cost: 3,
		is_response: true,
		
		rules: "Target creature is moved to target lane",

		possible_targets: "def(game, nplayer, targets)
		  if(targets = [],
			 [creature.loc | creature <- game.creatures, creature.is_valid_target(game, nplayer, me), not creature.is_building],
			 if(size(targets) = 1,
				[[row, targets[0][1]] | row <- range(game.rows), game.creature_at_loc([row, targets[0][1]]) = null]
			 ))",
		on_play: "def(game, info)
		  set(game.creature_at_loc(info.targets[0]).loc, info.targets[1])"
	},


}
