{
	"Magic Shield": {
		name: "Magic Shield",
		type: "spell",
		cost: 2,
		is_response: true,
		school: 0,
		initiative: 40,
		//image_num: 72,
		
		rules: "+5 resistance to the friendly target creature until the end of the turn.",

		possible_targets: "def(game, nplayer, targets)
			if(targets = [], [creature.loc | creature <- game.creatures, creature.controller = game.current_player, creature.is_valid_target(game, nplayer, me)])
		",
			 
		on_play: "def(game, info)
			game.creature_at_loc(info.targets[0]).apply_effect_until_end_of_turn('resistance', 5)
				asserting game.creature_at_loc(info.targets[0]) != null
				asserting size(info.targets) = 1
		",
	},

	"Need More Lumber": {
		name: "Need More Lumber",
		type: "spell",
		cost: 0,
		school: 1,
		initiative: 40,		
		rules: "Place friendly creature in the graveyard, gain 2 mana.",
		
		possible_targets: "def(game, nplayer, targets)
			if(targets = [], [creature.loc | creature <- game.creatures, creature.controller = game.current_player])
		",
		on_play: "def(game, info) if(creature != null and game.current_player = creature.controller,[
		     set(creature.destroyed, true),
			{ execute: q(add(player.resources, 2)), arg: {player: game.players[creature.controller]} },
			
		]) where creature = game.creature_at_loc(info.targets[0])",
	},

	"Armageddon": {
		name: "Armageddon",
		type: "spell",
		cost: 1,
		school: 0,
		rules: "Destroy all creatures and buildings.",
		on_play: "def(game, info) map(game.creatures, creature, [add(game.graveyard, {(creature.summon_id): creature}), set(creature.destroyed, true)])",
	},
	
}
